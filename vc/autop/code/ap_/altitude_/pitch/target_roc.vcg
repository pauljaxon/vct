           *******************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 26-NOV-2009 09:54:53.60

                         function Pitch.Target_ROC




For path(s) from start to run-time check associated with statement of line 27:

function_target_roc_1.
H1:    true .
H2:    present_altitude >= instruments__feet__first .
H3:    present_altitude <= instruments__feet__last .
H4:    target_altitude >= instruments__feet__first .
H5:    target_altitude <= instruments__feet__last .
        ->
C1:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
C2:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
C3:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
C4:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
C5:    (target_altitude - present_altitude) div 10 >= 
           integer__base__first .
C6:    (target_altitude - present_altitude) div 10 <= 
           integer__base__last .
C7:    10 <> 0 .
C8:    target_altitude - present_altitude >= integer__first .
C9:    target_altitude - present_altitude <= integer__last .
C10:   target_altitude - present_altitude >= 
           instruments__feet__base__first .
C11:   target_altitude - present_altitude <= 
           instruments__feet__base__last .
 

For path(s) from start to run-time check associated with statement of line 29:

function_target_roc_2.
H1:    true .
H2:    present_altitude >= instruments__feet__first .
H3:    present_altitude <= instruments__feet__last .
H4:    target_altitude >= instruments__feet__first .
H5:    target_altitude <= instruments__feet__last .
H6:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H7:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H8:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H9:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H10:   (target_altitude - present_altitude) div 10 >= 
           integer__base__first .
H11:   (target_altitude - present_altitude) div 10 <= 
           integer__base__last .
H12:   10 <> 0 .
H13:   target_altitude - present_altitude >= integer__first .
H14:   target_altitude - present_altitude <= integer__last .
H15:   target_altitude - present_altitude >= 
           instruments__feet__base__first .
H16:   target_altitude - present_altitude <= 
           instruments__feet__base__last .
H17:   (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H18:   (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H19:   (target_altitude - present_altitude) div 10 > 
           floorfpm__last .
        ->
C1:    floorfpm__last >= instruments__feetpermin__first .
C2:    floorfpm__last <= instruments__feetpermin__last .
 

For path(s) from start to run-time check associated with statement of line 31:

function_target_roc_3.
H1:    true .
H2:    present_altitude >= instruments__feet__first .
H3:    present_altitude <= instruments__feet__last .
H4:    target_altitude >= instruments__feet__first .
H5:    target_altitude <= instruments__feet__last .
H6:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H7:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H8:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H9:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H10:   (target_altitude - present_altitude) div 10 >= 
           integer__base__first .
H11:   (target_altitude - present_altitude) div 10 <= 
           integer__base__last .
H12:   10 <> 0 .
H13:   target_altitude - present_altitude >= integer__first .
H14:   target_altitude - present_altitude <= integer__last .
H15:   target_altitude - present_altitude >= 
           instruments__feet__base__first .
H16:   target_altitude - present_altitude <= 
           instruments__feet__base__last .
H17:   (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H18:   (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H19:   not ((target_altitude - present_altitude) div 10 > 
           floorfpm__last) .
H20:   (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H21:   (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H22:   (target_altitude - present_altitude) div 10 < 
           floorfpm__first .
        ->
C1:    floorfpm__first >= instruments__feetpermin__first .
C2:    floorfpm__first <= instruments__feetpermin__last .
 

For path(s) from start to finish:

function_target_roc_4.
H1:    true .
H2:    present_altitude >= instruments__feet__first .
H3:    present_altitude <= instruments__feet__last .
H4:    target_altitude >= instruments__feet__first .
H5:    target_altitude <= instruments__feet__last .
H6:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H7:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H8:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H9:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H10:   (target_altitude - present_altitude) div 10 >= 
           integer__base__first .
H11:   (target_altitude - present_altitude) div 10 <= 
           integer__base__last .
H12:   10 <> 0 .
H13:   target_altitude - present_altitude >= integer__first .
H14:   target_altitude - present_altitude <= integer__last .
H15:   target_altitude - present_altitude >= 
           instruments__feet__base__first .
H16:   target_altitude - present_altitude <= 
           instruments__feet__base__last .
H17:   (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H18:   (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H19:   (target_altitude - present_altitude) div 10 > 
           floorfpm__last .
H20:   floorfpm__last >= instruments__feetpermin__first .
H21:   floorfpm__last <= instruments__feetpermin__last .
H22:   floorfpm__last >= instruments__feetpermin__first .
H23:   floorfpm__last <= instruments__feetpermin__last .
        ->
C1:    true .
C2:    floorfpm__last >= floorfpm__first .
C3:    floorfpm__last <= floorfpm__last .
 

function_target_roc_5.
H1:    true .
H2:    present_altitude >= instruments__feet__first .
H3:    present_altitude <= instruments__feet__last .
H4:    target_altitude >= instruments__feet__first .
H5:    target_altitude <= instruments__feet__last .
H6:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H7:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H8:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H9:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H10:   (target_altitude - present_altitude) div 10 >= 
           integer__base__first .
H11:   (target_altitude - present_altitude) div 10 <= 
           integer__base__last .
H12:   10 <> 0 .
H13:   target_altitude - present_altitude >= integer__first .
H14:   target_altitude - present_altitude <= integer__last .
H15:   target_altitude - present_altitude >= 
           instruments__feet__base__first .
H16:   target_altitude - present_altitude <= 
           instruments__feet__base__last .
H17:   (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H18:   (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H19:   not ((target_altitude - present_altitude) div 10 > 
           floorfpm__last) .
H20:   (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H21:   (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H22:   (target_altitude - present_altitude) div 10 < 
           floorfpm__first .
H23:   floorfpm__first >= instruments__feetpermin__first .
H24:   floorfpm__first <= instruments__feetpermin__last .
H25:   floorfpm__first >= instruments__feetpermin__first .
H26:   floorfpm__first <= instruments__feetpermin__last .
        ->
C1:    true .
C2:    floorfpm__first >= floorfpm__first .
C3:    floorfpm__first <= floorfpm__last .
 

function_target_roc_6.
H1:    true .
H2:    present_altitude >= instruments__feet__first .
H3:    present_altitude <= instruments__feet__last .
H4:    target_altitude >= instruments__feet__first .
H5:    target_altitude <= instruments__feet__last .
H6:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H7:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H8:    (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H9:    (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H10:   (target_altitude - present_altitude) div 10 >= 
           integer__base__first .
H11:   (target_altitude - present_altitude) div 10 <= 
           integer__base__last .
H12:   10 <> 0 .
H13:   target_altitude - present_altitude >= integer__first .
H14:   target_altitude - present_altitude <= integer__last .
H15:   target_altitude - present_altitude >= 
           instruments__feet__base__first .
H16:   target_altitude - present_altitude <= 
           instruments__feet__base__last .
H17:   (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H18:   (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H19:   not ((target_altitude - present_altitude) div 10 > 
           floorfpm__last) .
H20:   (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H21:   (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
H22:   not ((target_altitude - present_altitude) div 10 < 
           floorfpm__first) .
H23:   (target_altitude - present_altitude) div 10 >= 
           instruments__feetpermin__first .
H24:   (target_altitude - present_altitude) div 10 <= 
           instruments__feetpermin__last .
        ->
C1:    true .
C2:    (target_altitude - present_altitude) div 10 >= 
           floorfpm__first .
C3:    (target_altitude - present_altitude) div 10 <= 
           floorfpm__last .
 


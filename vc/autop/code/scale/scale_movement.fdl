           {*******************************************************}
                               {FDL Declarations}
 {SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331}
      {Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.}
           {*******************************************************}


                        {DATE : 26-NOV-2009 09:54:53.53}

                       {function Scale.Scale_Movement}


title function scale_movement;

  function round__(real) : integer;
  type instruments__machnumber = integer;
  type surfaces__controlangle = integer;
  const percent__base__last : integer = pending; 
  const percent__base__first : integer = pending; 
  const scaledata__base__last : integer = pending; 
  const scaledata__base__first : integer = pending; 
  const surfaces__controlangle__base__last : integer = pending; 
  const surfaces__controlangle__base__first : integer = pending; 
  const instruments__machnumber__base__last : integer = pending; 
  const instruments__machnumber__base__first : integer = pending; 
  const integer__base__last : integer = pending; 
  const integer__base__first : integer = pending; 
  const percent__size : integer = pending; 
  const percent__last : integer = pending; 
  const percent__first : integer = pending; 
  const scaledata__size : integer = pending; 
  const scaledata__last : integer = pending; 
  const scaledata__first : integer = pending; 
  const surfaces__controlangle__size : integer = pending; 
  const surfaces__controlangle__last : integer = pending; 
  const surfaces__controlangle__first : integer = pending; 
  const instruments__machnumber__size : integer = pending; 
  const instruments__machnumber__last : integer = pending; 
  const instruments__machnumber__first : integer = pending; 
  const integer__size : integer = pending; 
  const integer__last : integer = pending; 
  const integer__first : integer = pending; 
  var mach : integer;
  var present : integer;
  var target : integer;
  var max : integer;
  var k1 : integer;
  var k2 : integer;
  var gap : integer;
  function inverse(integer, integer) : integer;

end;

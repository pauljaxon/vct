*****************************************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
*****************************************************************************


CREATED 25-NOV-2009, 14:04:42  SIMPLIFIED 25-NOV-2009, 14:19:12

SPARK Simplifier Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.

procedure steer.Cycle.Write_Fin_Angle






@@@@@@@@@@  VC: procedure_write_fin_angle_1.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  fin__first <= f
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> angle__first <= element(current_angles, [i___1]) and 
          element(current_angles, [i___1]) <= angle__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> angle__first <= element(commanded_angles, [i___1]) and 
          element(commanded_angles, [i___1]) <= angle__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> clock__millisecond__first <= element(command_times, [
          i___1]) and element(command_times, [i___1]) <= 
          clock__millisecond__last)
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  fin__first <= f
***  Proved C1:  fin__first <= f
     using hypothesis H2.
***  Proved C2:  f <= fin__last
     using hypothesis H3.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_fin_angle_2.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  fin__first <= f
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> angle__first <= element(current_angles, [i___1]) and 
          element(current_angles, [i___1]) <= angle__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> angle__first <= element(commanded_angles, [i___1]) and 
          element(commanded_angles, [i___1]) <= angle__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> clock__millisecond__first <= element(command_times, [
          i___1]) and element(command_times, [i___1]) <= 
          clock__millisecond__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H3)
          .
***  Proved C1:  a__1 >= angle__first
     using hypothesis H11.
***  Proved C2:  a__1 <= angle__last
     using hypothesis H12.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_fin_angle_3.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  fin__first <= f
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> angle__first <= element(current_angles, [i___1]) and 
          element(current_angles, [i___1]) <= angle__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> angle__first <= element(commanded_angles, [i___1]) and 
          element(commanded_angles, [i___1]) <= angle__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> clock__millisecond__first <= element(command_times, [
          i___1]) and element(command_times, [i___1]) <= 
          clock__millisecond__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H12).
-S-  Applied substitution rule write_fin_an_rules(77).
     This was achieved by replacing all occurrences of 
          steer_cfg__fin_angle__first by:
          - 57.
<S>  New C1:  a__1 >= - 57
-S-  Applied substitution rule write_fin_an_rules(78).
     This was achieved by replacing all occurrences of 
          steer_cfg__fin_angle__last by:
          57.
<S>  New C2:  a__1 <= 57
-S-  Applied substitution rule write_fin_an_rules(8).
     This was achieved by replacing all occurrences of 
          clock__millisecond__first by:
          0.
<S>  New H8:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> 0 <= element(command_times, [i___1]) and element(
          command_times, [i___1]) <= clock__millisecond__last)
-S-  Applied substitution rule write_fin_an_rules(9).
     This was achieved by replacing all occurrences of clock__millisecond__last 
          by:
          8640000.
<S>  New H8:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> 0 <= element(command_times, [i___1]) and element(
          command_times, [i___1]) <= 8640000)
-S-  Applied substitution rule write_fin_an_rules(13).
     This was achieved by replacing all occurrences of bus__word_index__first 
          by:
          1.
<S>  New H4:  i >= 1
-S-  Applied substitution rule write_fin_an_rules(14).
     This was achieved by replacing all occurrences of bus__word_index__last by:
          31.
<S>  New H5:  i <= 31
-S-  Applied substitution rule write_fin_an_rules(110).
     This was achieved by replacing all occurrences of angle__first by:
          - 57.
<S>  New H6:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> - 57 <= element(current_angles, [i___1]) and element(
          current_angles, [i___1]) <= angle__last)
<S>  New H7:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> - 57 <= element(commanded_angles, [i___1]) and element(
          commanded_angles, [i___1]) <= angle__last)
<S>  New H11:  a__1 >= - 57
-S-  Applied substitution rule write_fin_an_rules(111).
     This was achieved by replacing all occurrences of angle__last by:
          57.
<S>  New H12:  a__1 <= 57
<S>  New H6:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> - 57 <= element(current_angles, [i___1]) and element(
          current_angles, [i___1]) <= 57)
<S>  New H7:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> - 57 <= element(commanded_angles, [i___1]) and element(
          commanded_angles, [i___1]) <= 57)
-S-  Applied substitution rule write_fin_an_rules(116).
     This was achieved by replacing all occurrences of fin__first by:
          steer_cfg__port.
<S>  New H2:  steer_cfg__port <= f
<S>  New H8:  for_all(i___1 : steer_cfg__fin, steer_cfg__port <= i___1 and 
          i___1 <= fin__last -> 0 <= element(command_times, [i___1]) and 
          element(command_times, [i___1]) <= 8640000)
<S>  New H6:  for_all(i___1 : steer_cfg__fin, steer_cfg__port <= i___1 and 
          i___1 <= fin__last -> - 57 <= element(current_angles, [i___1]) and 
          element(current_angles, [i___1]) <= 57)
<S>  New H7:  for_all(i___1 : steer_cfg__fin, steer_cfg__port <= i___1 and 
          i___1 <= fin__last -> - 57 <= element(commanded_angles, [i___1]) and 
          element(commanded_angles, [i___1]) <= 57)
-S-  Applied substitution rule write_fin_an_rules(117).
     This was achieved by replacing all occurrences of fin__last by:
          steer_cfg__bottom.
<S>  New H3:  f <= steer_cfg__bottom
<S>  New H8:  for_all(i___1 : steer_cfg__fin, steer_cfg__port <= i___1 and 
          i___1 <= steer_cfg__bottom -> 0 <= element(command_times, [i___1]) 
          and element(command_times, [i___1]) <= 8640000)
<S>  New H6:  for_all(i___1 : steer_cfg__fin, steer_cfg__port <= i___1 and 
          i___1 <= steer_cfg__bottom -> - 57 <= element(current_angles, [i___1])
           and element(current_angles, [i___1]) <= 57)
<S>  New H7:  for_all(i___1 : steer_cfg__fin, steer_cfg__port <= i___1 and 
          i___1 <= steer_cfg__bottom -> - 57 <= element(commanded_angles, [
          i___1]) and element(commanded_angles, [i___1]) <= 57)
***  Proved C1:  a__1 >= - 57
     using hypothesis H11.
***  Proved C2:  a__1 <= 57
     using hypothesis H12.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_fin_angle_4.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  fin__first <= f
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> angle__first <= element(current_angles, [i___1]) and 
          element(current_angles, [i___1]) <= angle__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> angle__first <= element(commanded_angles, [i___1]) and 
          element(commanded_angles, [i___1]) <= angle__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> clock__millisecond__first <= element(command_times, [
          i___1]) and element(command_times, [i___1]) <= 
          clock__millisecond__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H12).
***  Proved C1:  steer_cfg__encode__fin_angle(a__1) >= bus__word__first
     using hypothesis H19.
***  Proved C2:  steer_cfg__encode__fin_angle(a__1) <= bus__word__last
     using hypothesis H20.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_fin_angle_5.  @@@@@@@@@@
%%%  Simplified H2 on reading formula in, to give:
     %%%  H2:  fin__first <= f
%%%  Simplified H6 on reading formula in, to give:
     %%%  H6:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> angle__first <= element(current_angles, [i___1]) and 
          element(current_angles, [i___1]) <= angle__last)
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> angle__first <= element(commanded_angles, [i___1]) and 
          element(commanded_angles, [i___1]) <= angle__last)
%%%  Simplified H8 on reading formula in, to give:
     %%%  H8:  for_all(i___1 : steer_cfg__fin, fin__first <= i___1 and i___1 <= 
          fin__last -> clock__millisecond__first <= element(command_times, [
          i___1]) and element(command_times, [i___1]) <= 
          clock__millisecond__last)
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H2).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H12).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H20).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H19).
---  Hypothesis H24 has been replaced by "true".  (It is already present, as 
          H20).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  rt1553__lru_name__first <= bus_id
***  Proved C5:  i >= bus__word_index__first
     using hypothesis H4.
***  Proved C6:  i <= bus__word_index__last
     using hypothesis H5.
***  Proved C7:  steer_cfg__encode__fin_angle(a__1) >= bus__word__first
     using hypothesis H19.
***  Proved C8:  steer_cfg__encode__fin_angle(a__1) <= bus__word__last
     using hypothesis H20.
-S-  Applied substitution rule write_fin_an_rules(34).
     This was achieved by replacing all occurrences of rt1553__lru_name__first 
          by:
          rt1553__barometer.
<S>  New C1:  rt1553__barometer <= bus_id
-S-  Applied substitution rule write_fin_an_rules(1).
     This was achieved by replacing all occurrences of bus_id by:
          rt1553__fins.
<S>  New C2:  rt1553__fins <= rt1553__lru_name__last
<S>  New C1:  true
-S-  Applied substitution rule write_fin_an_rules(35).
     This was achieved by replacing all occurrences of rt1553__lru_name__last 
          by:
          rt1553__warhead.
<S>  New C2:  true
-S-  Applied substitution rule write_fin_an_rules(29).
     This was achieved by replacing all occurrences of 
          bus__lru_subaddress_index__first by:
          1.
<S>  New C3:  true
-S-  Applied substitution rule write_fin_an_rules(30).
     This was achieved by replacing all occurrences of 
          bus__lru_subaddress_index__last by:
          8.
<S>  New C4:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_fin_angle_6.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


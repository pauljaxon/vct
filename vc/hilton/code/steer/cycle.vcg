           *******************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:42.62

                           procedure steer.Cycle




For path(s) from start to run-time check associated with statement of line 287:

procedure_cycle_1.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
        ->
C1:    1 >= bus__word_index__first .
C2:    1 <= bus__word_index__last .
C3:    steer_cfg__port >= fin__first .
C4:    steer_cfg__port <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 289:

procedure_cycle_2.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
        ->
C1:    2 >= bus__word_index__first .
C2:    2 <= bus__word_index__last .
C3:    steer_cfg__starboard >= fin__first .
C4:    steer_cfg__starboard <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 291:

procedure_cycle_3.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
        ->
C1:    3 >= bus__word_index__first .
C2:    3 <= bus__word_index__last .
C3:    steer_cfg__top >= fin__first .
C4:    steer_cfg__top <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 293:

procedure_cycle_4.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
        ->
C1:    4 >= bus__word_index__first .
C2:    4 <= bus__word_index__last .
C3:    steer_cfg__bottom >= fin__first .
C4:    steer_cfg__bottom <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 296:

procedure_cycle_5.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
        ->
C1:    bus_id >= rt1553__lru_name__first .
C2:    bus_id <= rt1553__lru_name__last .
C3:    1 >= bus__lru_subaddress_index__first .
C4:    1 <= bus__lru_subaddress_index__last .
C5:    5 >= bus__word_index__first .
C6:    5 <= bus__word_index__last .
C7:    element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
C8:    element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
C9:    bit_machine__phase(bit_state) >= ibit__phase__first .
C10:   bit_machine__phase(bit_state) <= ibit__phase__last .
 

For path(s) from start to run-time check associated with statement of line 302:

procedure_cycle_6.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
        ->
C1:    1 >= bus__lru_subaddress_index__first .
C2:    1 <= bus__lru_subaddress_index__last .
C3:    bus_id >= rt1553__lru_name__first .
C4:    bus_id <= rt1553__lru_name__last .
 

For path(s) from start to run-time check associated with statement of line 302:

procedure_cycle_7.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
        ->
C1:    rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
C2:    rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
 

For path(s) from start to run-time check associated with statement of line 307:

procedure_cycle_8.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
H38:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H39:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
H40:   rt1553__is_valid(bus_id, 1, bus__outputs) -> true .
H41:   rt1553__is_valid(bus_id, 1, bus__outputs) .
H42:   rt1553__is_fresh(bus_id, 1, bus__outputs) .
        ->
C1:    1 >= bus__word_index__first .
C2:    1 <= bus__word_index__last .
C3:    steer_cfg__port >= fin__first .
C4:    steer_cfg__port <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 309:

procedure_cycle_9.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
H38:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H39:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
H40:   rt1553__is_valid(bus_id, 1, bus__outputs) -> true .
H41:   rt1553__is_valid(bus_id, 1, bus__outputs) .
H42:   rt1553__is_fresh(bus_id, 1, bus__outputs) .
H43:   1 >= bus__word_index__first .
H44:   1 <= bus__word_index__last .
H45:   steer_cfg__port >= fin__first .
H46:   steer_cfg__port <= fin__last .
H47:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__6, [
           i___1]) >= angle__first) and (element(current_angles__6, [
           i___1]) <= angle__last))) .
H48:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__6, [
           i___1]) >= angle__first) and (element(commanded_angles__6, [
           i___1]) <= angle__last))) .
H49:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__6, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__6, [i___1]) <= clock__millisecond__last))) .
        ->
C1:    2 >= bus__word_index__first .
C2:    2 <= bus__word_index__last .
C3:    steer_cfg__starboard >= fin__first .
C4:    steer_cfg__starboard <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 311:

procedure_cycle_10.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
H38:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H39:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
H40:   rt1553__is_valid(bus_id, 1, bus__outputs) -> true .
H41:   rt1553__is_valid(bus_id, 1, bus__outputs) .
H42:   rt1553__is_fresh(bus_id, 1, bus__outputs) .
H43:   1 >= bus__word_index__first .
H44:   1 <= bus__word_index__last .
H45:   steer_cfg__port >= fin__first .
H46:   steer_cfg__port <= fin__last .
H47:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__6, [
           i___1]) >= angle__first) and (element(current_angles__6, [
           i___1]) <= angle__last))) .
H48:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__6, [
           i___1]) >= angle__first) and (element(commanded_angles__6, [
           i___1]) <= angle__last))) .
H49:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__6, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__6, [i___1]) <= clock__millisecond__last))) .
H50:   2 >= bus__word_index__first .
H51:   2 <= bus__word_index__last .
H52:   steer_cfg__starboard >= fin__first .
H53:   steer_cfg__starboard <= fin__last .
H54:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__7, [
           i___1]) >= angle__first) and (element(current_angles__7, [
           i___1]) <= angle__last))) .
H55:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__7, [
           i___1]) >= angle__first) and (element(commanded_angles__7, [
           i___1]) <= angle__last))) .
H56:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__7, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__7, [i___1]) <= clock__millisecond__last))) .
        ->
C1:    3 >= bus__word_index__first .
C2:    3 <= bus__word_index__last .
C3:    steer_cfg__top >= fin__first .
C4:    steer_cfg__top <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 313:

procedure_cycle_11.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
H38:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H39:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
H40:   rt1553__is_valid(bus_id, 1, bus__outputs) -> true .
H41:   rt1553__is_valid(bus_id, 1, bus__outputs) .
H42:   rt1553__is_fresh(bus_id, 1, bus__outputs) .
H43:   1 >= bus__word_index__first .
H44:   1 <= bus__word_index__last .
H45:   steer_cfg__port >= fin__first .
H46:   steer_cfg__port <= fin__last .
H47:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__6, [
           i___1]) >= angle__first) and (element(current_angles__6, [
           i___1]) <= angle__last))) .
H48:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__6, [
           i___1]) >= angle__first) and (element(commanded_angles__6, [
           i___1]) <= angle__last))) .
H49:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__6, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__6, [i___1]) <= clock__millisecond__last))) .
H50:   2 >= bus__word_index__first .
H51:   2 <= bus__word_index__last .
H52:   steer_cfg__starboard >= fin__first .
H53:   steer_cfg__starboard <= fin__last .
H54:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__7, [
           i___1]) >= angle__first) and (element(current_angles__7, [
           i___1]) <= angle__last))) .
H55:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__7, [
           i___1]) >= angle__first) and (element(commanded_angles__7, [
           i___1]) <= angle__last))) .
H56:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__7, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__7, [i___1]) <= clock__millisecond__last))) .
H57:   3 >= bus__word_index__first .
H58:   3 <= bus__word_index__last .
H59:   steer_cfg__top >= fin__first .
H60:   steer_cfg__top <= fin__last .
H61:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__8, [
           i___1]) >= angle__first) and (element(current_angles__8, [
           i___1]) <= angle__last))) .
H62:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__8, [
           i___1]) >= angle__first) and (element(commanded_angles__8, [
           i___1]) <= angle__last))) .
H63:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__8, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__8, [i___1]) <= clock__millisecond__last))) .
        ->
C1:    4 >= bus__word_index__first .
C2:    4 <= bus__word_index__last .
C3:    steer_cfg__bottom >= fin__first .
C4:    steer_cfg__bottom <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 318:

procedure_cycle_12.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
H38:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H39:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
H40:   rt1553__is_valid(bus_id, 1, bus__outputs) -> true .
H41:   rt1553__is_valid(bus_id, 1, bus__outputs) .
H42:   rt1553__is_fresh(bus_id, 1, bus__outputs) .
H43:   1 >= bus__word_index__first .
H44:   1 <= bus__word_index__last .
H45:   steer_cfg__port >= fin__first .
H46:   steer_cfg__port <= fin__last .
H47:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__6, [
           i___1]) >= angle__first) and (element(current_angles__6, [
           i___1]) <= angle__last))) .
H48:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__6, [
           i___1]) >= angle__first) and (element(commanded_angles__6, [
           i___1]) <= angle__last))) .
H49:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__6, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__6, [i___1]) <= clock__millisecond__last))) .
H50:   2 >= bus__word_index__first .
H51:   2 <= bus__word_index__last .
H52:   steer_cfg__starboard >= fin__first .
H53:   steer_cfg__starboard <= fin__last .
H54:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__7, [
           i___1]) >= angle__first) and (element(current_angles__7, [
           i___1]) <= angle__last))) .
H55:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__7, [
           i___1]) >= angle__first) and (element(commanded_angles__7, [
           i___1]) <= angle__last))) .
H56:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__7, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__7, [i___1]) <= clock__millisecond__last))) .
H57:   3 >= bus__word_index__first .
H58:   3 <= bus__word_index__last .
H59:   steer_cfg__top >= fin__first .
H60:   steer_cfg__top <= fin__last .
H61:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__8, [
           i___1]) >= angle__first) and (element(current_angles__8, [
           i___1]) <= angle__last))) .
H62:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__8, [
           i___1]) >= angle__first) and (element(commanded_angles__8, [
           i___1]) <= angle__last))) .
H63:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__8, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__8, [i___1]) <= clock__millisecond__last))) .
H64:   4 >= bus__word_index__first .
H65:   4 <= bus__word_index__last .
H66:   steer_cfg__bottom >= fin__first .
H67:   steer_cfg__bottom <= fin__last .
H68:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__9, [
           i___1]) >= angle__first) and (element(current_angles__9, [
           i___1]) <= angle__last))) .
H69:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__9, [
           i___1]) >= angle__first) and (element(commanded_angles__9, [
           i___1]) <= angle__last))) .
H70:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__9, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__9, [i___1]) <= clock__millisecond__last))) .
        ->
C1:    1 >= bus__lru_subaddress_index__first .
C2:    1 <= bus__lru_subaddress_index__last .
C3:    5 >= bus__word_index__first .
C4:    5 <= bus__word_index__last .
C5:    bus_id >= rt1553__lru_name__first .
C6:    bus_id <= rt1553__lru_name__last .
 

procedure_cycle_13.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
H38:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H39:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
H40:   rt1553__is_valid(bus_id, 1, bus__outputs) -> true .
H41:   not (rt1553__is_valid(bus_id, 1, bus__outputs) and 
           rt1553__is_fresh(bus_id, 1, bus__outputs)) .
        ->
C1:    1 >= bus__lru_subaddress_index__first .
C2:    1 <= bus__lru_subaddress_index__last .
C3:    5 >= bus__word_index__first .
C4:    5 <= bus__word_index__last .
C5:    bus_id >= rt1553__lru_name__first .
C6:    bus_id <= rt1553__lru_name__last .
 

For path(s) from start to run-time check associated with statement of line 318:

procedure_cycle_14.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
H38:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H39:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
H40:   rt1553__is_valid(bus_id, 1, bus__outputs) -> true .
H41:   rt1553__is_valid(bus_id, 1, bus__outputs) .
H42:   rt1553__is_fresh(bus_id, 1, bus__outputs) .
H43:   1 >= bus__word_index__first .
H44:   1 <= bus__word_index__last .
H45:   steer_cfg__port >= fin__first .
H46:   steer_cfg__port <= fin__last .
H47:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__6, [
           i___1]) >= angle__first) and (element(current_angles__6, [
           i___1]) <= angle__last))) .
H48:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__6, [
           i___1]) >= angle__first) and (element(commanded_angles__6, [
           i___1]) <= angle__last))) .
H49:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__6, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__6, [i___1]) <= clock__millisecond__last))) .
H50:   2 >= bus__word_index__first .
H51:   2 <= bus__word_index__last .
H52:   steer_cfg__starboard >= fin__first .
H53:   steer_cfg__starboard <= fin__last .
H54:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__7, [
           i___1]) >= angle__first) and (element(current_angles__7, [
           i___1]) <= angle__last))) .
H55:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__7, [
           i___1]) >= angle__first) and (element(commanded_angles__7, [
           i___1]) <= angle__last))) .
H56:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__7, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__7, [i___1]) <= clock__millisecond__last))) .
H57:   3 >= bus__word_index__first .
H58:   3 <= bus__word_index__last .
H59:   steer_cfg__top >= fin__first .
H60:   steer_cfg__top <= fin__last .
H61:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__8, [
           i___1]) >= angle__first) and (element(current_angles__8, [
           i___1]) <= angle__last))) .
H62:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__8, [
           i___1]) >= angle__first) and (element(commanded_angles__8, [
           i___1]) <= angle__last))) .
H63:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__8, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__8, [i___1]) <= clock__millisecond__last))) .
H64:   4 >= bus__word_index__first .
H65:   4 <= bus__word_index__last .
H66:   steer_cfg__bottom >= fin__first .
H67:   steer_cfg__bottom <= fin__last .
H68:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__9, [
           i___1]) >= angle__first) and (element(current_angles__9, [
           i___1]) <= angle__last))) .
H69:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__9, [
           i___1]) >= angle__first) and (element(commanded_angles__9, [
           i___1]) <= angle__last))) .
H70:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__9, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__9, [i___1]) <= clock__millisecond__last))) .
H71:   1 >= bus__lru_subaddress_index__first .
H72:   1 <= bus__lru_subaddress_index__last .
H73:   5 >= bus__word_index__first .
H74:   5 <= bus__word_index__last .
H75:   bus_id >= rt1553__lru_name__first .
H76:   bus_id <= rt1553__lru_name__last .
H77:   datum__10 >= bus__word__first .
H78:   datum__10 <= bus__word__last .
        ->
C1:    datum__10 >= bus__word__first .
C2:    datum__10 <= bus__word__last .
 

procedure_cycle_15.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
H38:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H39:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
H40:   rt1553__is_valid(bus_id, 1, bus__outputs) -> true .
H41:   not (rt1553__is_valid(bus_id, 1, bus__outputs) and 
           rt1553__is_fresh(bus_id, 1, bus__outputs)) .
H42:   1 >= bus__lru_subaddress_index__first .
H43:   1 <= bus__lru_subaddress_index__last .
H44:   5 >= bus__word_index__first .
H45:   5 <= bus__word_index__last .
H46:   bus_id >= rt1553__lru_name__first .
H47:   bus_id <= rt1553__lru_name__last .
H48:   datum__10 >= bus__word__first .
H49:   datum__10 <= bus__word__last .
        ->
C1:    datum__10 >= bus__word__first .
C2:    datum__10 <= bus__word__last .
 

For path(s) from start to run-time check associated with statement of line 322:

procedure_cycle_16.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
H38:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H39:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
H40:   rt1553__is_valid(bus_id, 1, bus__outputs) -> true .
H41:   rt1553__is_valid(bus_id, 1, bus__outputs) .
H42:   rt1553__is_fresh(bus_id, 1, bus__outputs) .
H43:   1 >= bus__word_index__first .
H44:   1 <= bus__word_index__last .
H45:   steer_cfg__port >= fin__first .
H46:   steer_cfg__port <= fin__last .
H47:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__6, [
           i___1]) >= angle__first) and (element(current_angles__6, [
           i___1]) <= angle__last))) .
H48:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__6, [
           i___1]) >= angle__first) and (element(commanded_angles__6, [
           i___1]) <= angle__last))) .
H49:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__6, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__6, [i___1]) <= clock__millisecond__last))) .
H50:   2 >= bus__word_index__first .
H51:   2 <= bus__word_index__last .
H52:   steer_cfg__starboard >= fin__first .
H53:   steer_cfg__starboard <= fin__last .
H54:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__7, [
           i___1]) >= angle__first) and (element(current_angles__7, [
           i___1]) <= angle__last))) .
H55:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__7, [
           i___1]) >= angle__first) and (element(commanded_angles__7, [
           i___1]) <= angle__last))) .
H56:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__7, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__7, [i___1]) <= clock__millisecond__last))) .
H57:   3 >= bus__word_index__first .
H58:   3 <= bus__word_index__last .
H59:   steer_cfg__top >= fin__first .
H60:   steer_cfg__top <= fin__last .
H61:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__8, [
           i___1]) >= angle__first) and (element(current_angles__8, [
           i___1]) <= angle__last))) .
H62:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__8, [
           i___1]) >= angle__first) and (element(commanded_angles__8, [
           i___1]) <= angle__last))) .
H63:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__8, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__8, [i___1]) <= clock__millisecond__last))) .
H64:   4 >= bus__word_index__first .
H65:   4 <= bus__word_index__last .
H66:   steer_cfg__bottom >= fin__first .
H67:   steer_cfg__bottom <= fin__last .
H68:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles__9, [
           i___1]) >= angle__first) and (element(current_angles__9, [
           i___1]) <= angle__last))) .
H69:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(commanded_angles__9, [
           i___1]) >= angle__first) and (element(commanded_angles__9, [
           i___1]) <= angle__last))) .
H70:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times__9, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times__9, [i___1]) <= clock__millisecond__last))) .
H71:   1 >= bus__lru_subaddress_index__first .
H72:   1 <= bus__lru_subaddress_index__last .
H73:   5 >= bus__word_index__first .
H74:   5 <= bus__word_index__last .
H75:   bus_id >= rt1553__lru_name__first .
H76:   bus_id <= rt1553__lru_name__last .
H77:   datum__10 >= bus__word__first .
H78:   datum__10 <= bus__word__last .
H79:   datum__10 >= bus__word__first .
H80:   datum__10 <= bus__word__last .
H81:   datum__10 >= bus__word__first .
H82:   datum__10 <= bus__word__last .
        ->
C1:    datum__10 >= bus__word__first .
C2:    datum__10 <= bus__word__last .
 

procedure_cycle_17.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(current_angles, [
           i___1]) >= angle__first) and (element(
           current_angles, [i___1]) <= angle__last))) .
H3:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(
           commanded_angles, [i___1]) >= angle__first) and (element(
           commanded_angles, [i___1]) <= angle__last))) .
H4:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(command_times, [
           i___1]) >= clock__millisecond__first) and (element(
           command_times, [i___1]) <= clock__millisecond__last))) .
H5:    1 >= bus__word_index__first .
H6:    1 <= bus__word_index__last .
H7:    steer_cfg__port >= fin__first .
H8:    steer_cfg__port <= fin__last .
H9:    2 >= bus__word_index__first .
H10:   2 <= bus__word_index__last .
H11:   steer_cfg__starboard >= fin__first .
H12:   steer_cfg__starboard <= fin__last .
H13:   3 >= bus__word_index__first .
H14:   3 <= bus__word_index__last .
H15:   steer_cfg__top >= fin__first .
H16:   steer_cfg__top <= fin__last .
H17:   4 >= bus__word_index__first .
H18:   4 <= bus__word_index__last .
H19:   steer_cfg__bottom >= fin__first .
H20:   steer_cfg__bottom <= fin__last .
H21:   bit_machine__phase(bit_state) >= ibit__phase__first .
H22:   bit_machine__phase(bit_state) <= ibit__phase__last .
H23:   bus_id >= rt1553__lru_name__first .
H24:   bus_id <= rt1553__lru_name__last .
H25:   1 >= bus__lru_subaddress_index__first .
H26:   1 <= bus__lru_subaddress_index__last .
H27:   5 >= bus__word_index__first .
H28:   5 <= bus__word_index__last .
H29:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) >= bus__word__first .
H30:   element(ibit__phase_lookup, [bit_machine__phase(
           bit_state)]) <= bus__word__last .
H31:   bit_machine__phase(bit_state) >= ibit__phase__first .
H32:   bit_machine__phase(bit_state) <= ibit__phase__last .
H33:   1 >= bus__lru_subaddress_index__first .
H34:   1 <= bus__lru_subaddress_index__last .
H35:   bus_id >= rt1553__lru_name__first .
H36:   bus_id <= rt1553__lru_name__last .
H37:   true .
H38:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H39:   rt1553__is_valid(bus_id, 1, bus__outputs) -> ((
           bus_id >= rt1553__lru_name__first) and (bus_id <= 
           rt1553__lru_name__last)) .
H40:   rt1553__is_valid(bus_id, 1, bus__outputs) -> true .
H41:   not (rt1553__is_valid(bus_id, 1, bus__outputs) and 
           rt1553__is_fresh(bus_id, 1, bus__outputs)) .
H42:   1 >= bus__lru_subaddress_index__first .
H43:   1 <= bus__lru_subaddress_index__last .
H44:   5 >= bus__word_index__first .
H45:   5 <= bus__word_index__last .
H46:   bus_id >= rt1553__lru_name__first .
H47:   bus_id <= rt1553__lru_name__last .
H48:   datum__10 >= bus__word__first .
H49:   datum__10 <= bus__word__last .
H50:   datum__10 >= bus__word__first .
H51:   datum__10 <= bus__word__last .
H52:   datum__10 >= bus__word__first .
H53:   datum__10 <= bus__word__last .
        ->
C1:    datum__10 >= bus__word__first .
C2:    datum__10 <= bus__word__last .
 

For path(s) from start to finish:

procedure_cycle_18.
*** true .          /* trivially true VC removed by Examiner */


procedure_cycle_19.
*** true .          /* trivially true VC removed by Examiner */


For checks of refinement integrity: 

procedure_cycle_20.
*** true .          /* trivially true VC removed by Examiner */


procedure_cycle_21.
*** true .          /* trivially true VC removed by Examiner */



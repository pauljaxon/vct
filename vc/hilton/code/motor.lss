           *******************************************************
                            Listing of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:42.85

Line
   1  -- Motor simulator
   2  --
   3  -- $Log: motor.ads,v $
   4  -- Revision 1.1.1.1  2004/01/12 19:29:12  adi
   5  -- Added from tarfile
   6  --
   7  --
   8  -- Revision 1.2  2003/09/01 18:18:19  adi
   9  -- Fixed for implementation
  10  --
  11  -- Revision 1.1  2003/08/31 21:11:26  adi
  12  -- Initial revision
  13  --
  14  --
  15  with MeasureTypes,Clock,motor_cfg;
  16  use type Clock.Millisecond, motor_Cfg.Motor_power;
  17  --# inherit state_types, MeasureTypes, Bus, Rt1553,
  18  --#         Clock, Clock_Utils, motor_cfg,
  19  --#         IBIT, Bit_Machine, systemtypes,
  20  --#         measuretypes.encode, measuretypes.decode;
  21  package Motor
  22    --# own State;
  23    --# initializes State;
  24  is
  25     subtype Power is Motor_Cfg.Motor_Power;
  26  
  27     -- Cycle the reading of data from the bus
  28     -- and writing of data to the bus
  29     procedure Cycle;
  30     --# global in out State;
  31     --#        in out Clock.Time;
  32     --#        in Bus.Outputs;
  33     --#        in out Bus.Inputs;
  34     --# derives State from *, Bus.Outputs, clock.time &
  35     --#        Bus.Inputs from *, Clock.Time, State &
  36     --#        Clock.Time from *, state, bus.outputs;
  37  
  38     -- Set the current thrust level
  39     procedure Set_thrust(New_Level : in Power);
  40     --# global in out State, Clock.Time;
  41     --# derives Clock.Time from * &
  42     --#         State from *, Clock.Time, new_level;
  43  
  44     -- Read the current thrust levle
  45     procedure Read_thrust(This_Level : out Power);
  46     --# global in     State;
  47     --#         in out clock.time;
  48     --# derives
  49     --#    this_level from
  50     --#         State, clock.time &
  51     --#    clock.time from *;
  52  
  53     -- Cause the next BIT to fail
  54     procedure Fail_Next_Bit;
  55     --# global in out State;
  56     --# derives State from *;
  57  
  58     procedure Init;
  59     --# global out State;
  60     --#        in out Bus.Inputs;
  61     --# derives State from &
  62     --#         Bus.Inputs from *;
  63  
  64     -- Test stub
  65     procedure Command;
  66     --# derives;
  67  end Motor;
No summarized warnings



--End of file--------------------------------------------------

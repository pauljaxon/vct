           *******************************************************
                            Listing of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:40.67

Line
   1  -- Proximity Fuze simulator
   2  --
   3  -- $Log: fuze.ads,v $
   4  -- Revision 1.1.1.1  2004/01/12 19:29:12  adi
   5  -- Added from tarfile
   6  --
   7  --
   8  -- Revision 1.3  2003/08/17 14:58:25  adi
   9  -- Updated to read back info from bus
  10  --
  11  -- Revision 1.2  2003/08/17 14:16:50  adi
  12  -- Corrected actual annos
  13  --
  14  -- Revision 1.1  2003/08/17 13:38:22  adi
  15  -- Initial revision
  16  --
  17  --
  18  with MeasureTypes,Clock,State_types;
  19  use type Clock.Millisecond, State_Types.fuze;
  20  --# inherit state_types, MeasureTypes, Bus, Rt1553,
  21  --#         Clock, Clock_Utils, SystemTypes,
  22  --#         IBIT, Bit_Machine;
  23  package Fuze
  24    --# own State;
  25    --# initializes State;
  26  is
  27     -- Cycle the reading of data from the bus
  28     -- and writing of data to the bus
  29     procedure Cycle;
  30     --# global in out State;
  31     --#        in out Clock.Time;
  32     --#        in Bus.Outputs;
  33     --#        in out Bus.Inputs;
  34     --# derives State from *, Bus.Outputs, clock.time &
  35     --#        Bus.Inputs from *, Clock.Time, State &
  36     --#        Clock.Time from *, state, bus.outputs;
  37  
  38     -- Set the current fuze state
  39     procedure Set_state(New_State : in State_Types.fuze);
  40     --# global in out State, Clock.Time;
  41     --# derives Clock.Time from * &
  42     --#         State from *, Clock.Time, new_state;
  43  
  44     -- Set the current fuze timer
  45     procedure Set_Timer(Ms : in Clock.Millisecond);
  46     --# global in out state;
  47     --# derives state from *, ms;
  48  
  49     -- Read the current fuze state
  50     procedure Read_state(This_State : out State_Types.Fuze);
  51     --# global in     State;
  52     --# derives this_state from State;
  53  
  54     -- Cause the next BIT to fail
  55     procedure Fail_Next_Bit;
  56     --# global in out State;
  57     --# derives State from *;
  58  
  59     procedure Init;
  60     --# global out State;
  61     --#        in out Bus.Inputs;
  62     --# derives State from &
  63     --#         Bus.Inputs from *;
  64  
  65     -- Test stub
  66     procedure Command;
  67     --# derives;
  68  end Fuze;
No summarized warnings



--End of file--------------------------------------------------

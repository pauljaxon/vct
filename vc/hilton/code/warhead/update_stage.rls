           /*********************************************************/
                           /*Proof Rule Declarations*/
 /*SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331*/
      /*Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 25-NOV-2009 14:04:43.23*/

                       /*procedure warhead.Update_Stage*/


rule_family update_stage_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

update_stage_rules(1): clock__millisecond__first <= element(max_stage_time, [I]) may_be_deduced_from [warhead_cfg__inactive <= I, I <= warhead_cfg__detonated].
update_stage_rules(2): element(max_stage_time, [I]) <= 
     clock__millisecond__last may_be_deduced_from [warhead_cfg__inactive <= I, I <= warhead_cfg__detonated].
update_stage_rules(3): clock__millisecond__size >= 0 may_be_deduced.
update_stage_rules(4): clock__millisecond__first may_be_replaced_by 0.
update_stage_rules(5): clock__millisecond__last may_be_replaced_by 8640000.
update_stage_rules(6): clock__millisecond__base__first may_be_replaced_by -2147483648.
update_stage_rules(7): clock__millisecond__base__last may_be_replaced_by 2147483647.
update_stage_rules(8): warhead_cfg__state__size >= 0 may_be_deduced.
update_stage_rules(9): warhead_cfg__state__first may_be_replaced_by warhead_cfg__inactive.
update_stage_rules(10): warhead_cfg__state__last may_be_replaced_by warhead_cfg__detonated.
update_stage_rules(11): warhead_cfg__state__base__first may_be_replaced_by warhead_cfg__inactive.
update_stage_rules(12): warhead_cfg__state__base__last may_be_replaced_by warhead_cfg__detonated.
update_stage_rules(13): warhead_cfg__state__pos(
     warhead_cfg__state__first) may_be_replaced_by 0.
update_stage_rules(14): warhead_cfg__state__pos(
     warhead_cfg__inactive) may_be_replaced_by 0.
update_stage_rules(15): warhead_cfg__state__val(0) may_be_replaced_by 
     warhead_cfg__inactive.
update_stage_rules(16): warhead_cfg__state__pos(
     warhead_cfg__awake) may_be_replaced_by 1.
update_stage_rules(17): warhead_cfg__state__val(1) may_be_replaced_by 
     warhead_cfg__awake.
update_stage_rules(18): warhead_cfg__state__pos(
     warhead_cfg__armed) may_be_replaced_by 2.
update_stage_rules(19): warhead_cfg__state__val(2) may_be_replaced_by 
     warhead_cfg__armed.
update_stage_rules(20): warhead_cfg__state__pos(
     warhead_cfg__final) may_be_replaced_by 3.
update_stage_rules(21): warhead_cfg__state__val(3) may_be_replaced_by 
     warhead_cfg__final.
update_stage_rules(22): warhead_cfg__state__pos(
     warhead_cfg__detonated) may_be_replaced_by 4.
update_stage_rules(23): warhead_cfg__state__val(4) may_be_replaced_by 
     warhead_cfg__detonated.
update_stage_rules(24): warhead_cfg__state__pos(
     warhead_cfg__state__last) may_be_replaced_by 4.
update_stage_rules(25): warhead_cfg__state__pos(succ(X)) may_be_replaced_by 
     warhead_cfg__state__pos(X) + 1
     if [X <=warhead_cfg__detonated, X <> warhead_cfg__detonated].
update_stage_rules(26): warhead_cfg__state__pos(pred(X)) may_be_replaced_by 
     warhead_cfg__state__pos(X) - 1
     if [X >=warhead_cfg__inactive, X <> warhead_cfg__inactive].
update_stage_rules(27): warhead_cfg__state__pos(X) >= 0 may_be_deduced_from
     [warhead_cfg__inactive <= X, X <= warhead_cfg__detonated].
update_stage_rules(28): warhead_cfg__state__pos(X) <= 4 may_be_deduced_from
     [warhead_cfg__inactive <= X, X <= warhead_cfg__detonated].
update_stage_rules(29): warhead_cfg__state__val(X) >= 
     warhead_cfg__inactive may_be_deduced_from
     [0 <= X, X <= 4].
update_stage_rules(30): warhead_cfg__state__val(X) <= 
     warhead_cfg__detonated may_be_deduced_from
     [0 <= X, X <= 4].
update_stage_rules(31): succ(warhead_cfg__state__val(X)) may_be_replaced_by 
     warhead_cfg__state__val(X+1)
     if [0 <= X, X < 4].
update_stage_rules(32): pred(warhead_cfg__state__val(X)) may_be_replaced_by 
     warhead_cfg__state__val(X-1)
     if [0 < X, X <= 4].
update_stage_rules(33): warhead_cfg__state__pos(
     warhead_cfg__state__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 4].
update_stage_rules(34): warhead_cfg__state__val(
     warhead_cfg__state__pos(X)) may_be_replaced_by X
     if [warhead_cfg__inactive <= X, X <= warhead_cfg__detonated].
update_stage_rules(35): warhead_cfg__state__pos(X) <= 
     warhead_cfg__state__pos(Y) & X <= Y are_interchangeable 
     if [warhead_cfg__inactive <= X, X <= warhead_cfg__detonated, 
     warhead_cfg__inactive <= Y, Y <= warhead_cfg__detonated].
update_stage_rules(36): warhead_cfg__state__val(X) <= 
     warhead_cfg__state__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 4, 0 <= Y, Y <= 4].
update_stage_rules(37): stage__size >= 0 may_be_deduced.
update_stage_rules(38): stage__first may_be_replaced_by warhead_cfg__inactive.
update_stage_rules(39): stage__last may_be_replaced_by warhead_cfg__detonated.
update_stage_rules(40): stage__base__first may_be_replaced_by warhead_cfg__inactive.
update_stage_rules(41): stage__base__last may_be_replaced_by warhead_cfg__detonated.

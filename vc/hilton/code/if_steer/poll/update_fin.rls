           /*********************************************************/
                           /*Proof Rule Declarations*/
 /*SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331*/
      /*Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 25-NOV-2009 14:04:42.79*/

                     /*procedure if_steer.Poll.Update_Fin*/


rule_family update_fin_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

update_fin_rules(1): bus_id may_be_replaced_by bc1553__fins.
update_fin_rules(2): integer__size >= 0 may_be_deduced.
update_fin_rules(3): integer__first may_be_replaced_by -2147483648.
update_fin_rules(4): integer__last may_be_replaced_by 2147483647.
update_fin_rules(5): integer__base__first may_be_replaced_by -2147483648.
update_fin_rules(6): integer__base__last may_be_replaced_by 2147483647.
update_fin_rules(7): bus__word_index__size >= 0 may_be_deduced.
update_fin_rules(8): bus__word_index__first may_be_replaced_by 1.
update_fin_rules(9): bus__word_index__last may_be_replaced_by 31.
update_fin_rules(10): bus__word_index__base__first <= 
     bus__word_index__base__last may_be_deduced.
update_fin_rules(11): bus__word_index__base__first <= 
     bus__word_index__first may_be_deduced.
update_fin_rules(12): bus__word_index__base__last >= 
     bus__word_index__last may_be_deduced.
update_fin_rules(13): bus__word__size >= 0 may_be_deduced.
update_fin_rules(14): bus__word__first may_be_replaced_by 0.
update_fin_rules(15): bus__word__last may_be_replaced_by 65535.
update_fin_rules(16): bus__word__base__first may_be_replaced_by -2147483648.
update_fin_rules(17): bus__word__base__last may_be_replaced_by 2147483647.
update_fin_rules(18): bus__all_msg_index__size >= 0 may_be_deduced.
update_fin_rules(19): bus__all_msg_index__first may_be_replaced_by 0.
update_fin_rules(20): bus__all_msg_index__last may_be_replaced_by 63.
update_fin_rules(21): bus__all_msg_index__base__first may_be_replaced_by -32768.
update_fin_rules(22): bus__all_msg_index__base__last may_be_replaced_by 32767.
update_fin_rules(23): bus__lru_subaddress_index__size >= 0 may_be_deduced.
update_fin_rules(24): bus__lru_subaddress_index__first may_be_replaced_by 1.
update_fin_rules(25): bus__lru_subaddress_index__last may_be_replaced_by 8.
update_fin_rules(26): bus__lru_subaddress_index__base__first may_be_replaced_by -32768.
update_fin_rules(27): bus__lru_subaddress_index__base__last may_be_replaced_by 32767.
update_fin_rules(28): bc1553__lru_name__size >= 0 may_be_deduced.
update_fin_rules(29): bc1553__lru_name__first may_be_replaced_by bc1553__barometer.
update_fin_rules(30): bc1553__lru_name__last may_be_replaced_by bc1553__warhead.
update_fin_rules(31): bc1553__lru_name__base__first may_be_replaced_by bc1553__barometer.
update_fin_rules(32): bc1553__lru_name__base__last may_be_replaced_by bc1553__warhead.
update_fin_rules(33): bc1553__lru_name__pos(bc1553__lru_name__first) may_be_replaced_by 0.
update_fin_rules(34): bc1553__lru_name__pos(bc1553__barometer) may_be_replaced_by 0.
update_fin_rules(35): bc1553__lru_name__val(0) may_be_replaced_by 
     bc1553__barometer.
update_fin_rules(36): bc1553__lru_name__pos(bc1553__asi) may_be_replaced_by 1.
update_fin_rules(37): bc1553__lru_name__val(1) may_be_replaced_by 
     bc1553__asi.
update_fin_rules(38): bc1553__lru_name__pos(bc1553__ins) may_be_replaced_by 2.
update_fin_rules(39): bc1553__lru_name__val(2) may_be_replaced_by 
     bc1553__ins.
update_fin_rules(40): bc1553__lru_name__pos(bc1553__compass) may_be_replaced_by 3.
update_fin_rules(41): bc1553__lru_name__val(3) may_be_replaced_by 
     bc1553__compass.
update_fin_rules(42): bc1553__lru_name__pos(bc1553__fuel) may_be_replaced_by 4.
update_fin_rules(43): bc1553__lru_name__val(4) may_be_replaced_by 
     bc1553__fuel.
update_fin_rules(44): bc1553__lru_name__pos(bc1553__fuze) may_be_replaced_by 5.
update_fin_rules(45): bc1553__lru_name__val(5) may_be_replaced_by 
     bc1553__fuze.
update_fin_rules(46): bc1553__lru_name__pos(bc1553__radar) may_be_replaced_by 6.
update_fin_rules(47): bc1553__lru_name__val(6) may_be_replaced_by 
     bc1553__radar.
update_fin_rules(48): bc1553__lru_name__pos(bc1553__infrared) may_be_replaced_by 7.
update_fin_rules(49): bc1553__lru_name__val(7) may_be_replaced_by 
     bc1553__infrared.
update_fin_rules(50): bc1553__lru_name__pos(bc1553__fins) may_be_replaced_by 8.
update_fin_rules(51): bc1553__lru_name__val(8) may_be_replaced_by 
     bc1553__fins.
update_fin_rules(52): bc1553__lru_name__pos(bc1553__motor) may_be_replaced_by 9.
update_fin_rules(53): bc1553__lru_name__val(9) may_be_replaced_by 
     bc1553__motor.
update_fin_rules(54): bc1553__lru_name__pos(bc1553__destruct) may_be_replaced_by 10.
update_fin_rules(55): bc1553__lru_name__val(10) may_be_replaced_by 
     bc1553__destruct.
update_fin_rules(56): bc1553__lru_name__pos(bc1553__warhead) may_be_replaced_by 11.
update_fin_rules(57): bc1553__lru_name__val(11) may_be_replaced_by 
     bc1553__warhead.
update_fin_rules(58): bc1553__lru_name__pos(bc1553__lru_name__last) may_be_replaced_by 11.
update_fin_rules(59): bc1553__lru_name__pos(succ(X)) may_be_replaced_by 
     bc1553__lru_name__pos(X) + 1
     if [X <=bc1553__warhead, X <> bc1553__warhead].
update_fin_rules(60): bc1553__lru_name__pos(pred(X)) may_be_replaced_by 
     bc1553__lru_name__pos(X) - 1
     if [X >=bc1553__barometer, X <> bc1553__barometer].
update_fin_rules(61): bc1553__lru_name__pos(X) >= 0 may_be_deduced_from
     [bc1553__barometer <= X, X <= bc1553__warhead].
update_fin_rules(62): bc1553__lru_name__pos(X) <= 11 may_be_deduced_from
     [bc1553__barometer <= X, X <= bc1553__warhead].
update_fin_rules(63): bc1553__lru_name__val(X) >= 
     bc1553__barometer may_be_deduced_from
     [0 <= X, X <= 11].
update_fin_rules(64): bc1553__lru_name__val(X) <= bc1553__warhead may_be_deduced_from
     [0 <= X, X <= 11].
update_fin_rules(65): succ(bc1553__lru_name__val(X)) may_be_replaced_by 
     bc1553__lru_name__val(X+1)
     if [0 <= X, X < 11].
update_fin_rules(66): pred(bc1553__lru_name__val(X)) may_be_replaced_by 
     bc1553__lru_name__val(X-1)
     if [0 < X, X <= 11].
update_fin_rules(67): bc1553__lru_name__pos(bc1553__lru_name__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 11].
update_fin_rules(68): bc1553__lru_name__val(bc1553__lru_name__pos(X)) may_be_replaced_by X
     if [bc1553__barometer <= X, X <= bc1553__warhead].
update_fin_rules(69): bc1553__lru_name__pos(X) <= 
     bc1553__lru_name__pos(Y) & X <= Y are_interchangeable 
     if [bc1553__barometer <= X, X <= bc1553__warhead, 
     bc1553__barometer <= Y, Y <= bc1553__warhead].
update_fin_rules(70): bc1553__lru_name__val(X) <= 
     bc1553__lru_name__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 11, 0 <= Y, Y <= 11].
update_fin_rules(71): steer_cfg__fin_angle__size >= 0 may_be_deduced.
update_fin_rules(72): steer_cfg__fin_angle__first may_be_replaced_by -57.
update_fin_rules(73): steer_cfg__fin_angle__last may_be_replaced_by 57.
update_fin_rules(74): steer_cfg__fin_angle__base__first <= 
     steer_cfg__fin_angle__base__last may_be_deduced.
update_fin_rules(75): steer_cfg__fin_angle__base__first <= 
     steer_cfg__fin_angle__first may_be_deduced.
update_fin_rules(76): steer_cfg__fin_angle__base__last >= 
     steer_cfg__fin_angle__last may_be_deduced.
update_fin_rules(77): steer_cfg__fin__size >= 0 may_be_deduced.
update_fin_rules(78): steer_cfg__fin__first may_be_replaced_by steer_cfg__port.
update_fin_rules(79): steer_cfg__fin__last may_be_replaced_by steer_cfg__bottom.
update_fin_rules(80): steer_cfg__fin__base__first may_be_replaced_by steer_cfg__port.
update_fin_rules(81): steer_cfg__fin__base__last may_be_replaced_by steer_cfg__bottom.
update_fin_rules(82): steer_cfg__fin__pos(steer_cfg__fin__first) may_be_replaced_by 0.
update_fin_rules(83): steer_cfg__fin__pos(steer_cfg__port) may_be_replaced_by 0.
update_fin_rules(84): steer_cfg__fin__val(0) may_be_replaced_by 
     steer_cfg__port.
update_fin_rules(85): steer_cfg__fin__pos(steer_cfg__starboard) may_be_replaced_by 1.
update_fin_rules(86): steer_cfg__fin__val(1) may_be_replaced_by 
     steer_cfg__starboard.
update_fin_rules(87): steer_cfg__fin__pos(steer_cfg__top) may_be_replaced_by 2.
update_fin_rules(88): steer_cfg__fin__val(2) may_be_replaced_by 
     steer_cfg__top.
update_fin_rules(89): steer_cfg__fin__pos(steer_cfg__bottom) may_be_replaced_by 3.
update_fin_rules(90): steer_cfg__fin__val(3) may_be_replaced_by 
     steer_cfg__bottom.
update_fin_rules(91): steer_cfg__fin__pos(steer_cfg__fin__last) may_be_replaced_by 3.
update_fin_rules(92): steer_cfg__fin__pos(succ(X)) may_be_replaced_by 
     steer_cfg__fin__pos(X) + 1
     if [X <=steer_cfg__bottom, X <> steer_cfg__bottom].
update_fin_rules(93): steer_cfg__fin__pos(pred(X)) may_be_replaced_by 
     steer_cfg__fin__pos(X) - 1
     if [X >=steer_cfg__port, X <> steer_cfg__port].
update_fin_rules(94): steer_cfg__fin__pos(X) >= 0 may_be_deduced_from
     [steer_cfg__port <= X, X <= steer_cfg__bottom].
update_fin_rules(95): steer_cfg__fin__pos(X) <= 3 may_be_deduced_from
     [steer_cfg__port <= X, X <= steer_cfg__bottom].
update_fin_rules(96): steer_cfg__fin__val(X) >= steer_cfg__port may_be_deduced_from
     [0 <= X, X <= 3].
update_fin_rules(97): steer_cfg__fin__val(X) <= steer_cfg__bottom may_be_deduced_from
     [0 <= X, X <= 3].
update_fin_rules(98): succ(steer_cfg__fin__val(X)) may_be_replaced_by 
     steer_cfg__fin__val(X+1)
     if [0 <= X, X < 3].
update_fin_rules(99): pred(steer_cfg__fin__val(X)) may_be_replaced_by 
     steer_cfg__fin__val(X-1)
     if [0 < X, X <= 3].
update_fin_rules(100): steer_cfg__fin__pos(steer_cfg__fin__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 3].
update_fin_rules(101): steer_cfg__fin__val(steer_cfg__fin__pos(X)) may_be_replaced_by X
     if [steer_cfg__port <= X, X <= steer_cfg__bottom].
update_fin_rules(102): steer_cfg__fin__pos(X) <= steer_cfg__fin__pos(Y) & X <= Y are_interchangeable 
     if [steer_cfg__port <= X, X <= steer_cfg__bottom, 
     steer_cfg__port <= Y, Y <= steer_cfg__bottom].
update_fin_rules(103): steer_cfg__fin__val(X) <= steer_cfg__fin__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 3, 0 <= Y, Y <= 3].
update_fin_rules(104): fin__size >= 0 may_be_deduced.
update_fin_rules(105): fin__first may_be_replaced_by steer_cfg__port.
update_fin_rules(106): fin__last may_be_replaced_by steer_cfg__bottom.
update_fin_rules(107): fin__base__first may_be_replaced_by steer_cfg__port.
update_fin_rules(108): fin__base__last may_be_replaced_by steer_cfg__bottom.
update_fin_rules(109): angle__size >= 0 may_be_deduced.
update_fin_rules(110): angle__first may_be_replaced_by -57.
update_fin_rules(111): angle__last may_be_replaced_by 57.
update_fin_rules(112): angle__base__first <= angle__base__last may_be_deduced.
update_fin_rules(113): angle__base__first <= angle__first may_be_deduced.
update_fin_rules(114): angle__base__last >= angle__last may_be_deduced.

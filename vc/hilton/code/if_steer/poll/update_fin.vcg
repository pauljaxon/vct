           *******************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:42.79

                     procedure if_steer.Poll.Update_Fin




For path(s) from start to run-time check associated with statement of line 136:

procedure_update_fin_1.
H1:    true .
H2:    for_fin >= fin__first .
H3:    for_fin <= fin__last .
H4:    idx >= bus__word_index__first .
H5:    idx <= bus__word_index__last .
H6:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
        ->
C1:    1 >= bus__lru_subaddress_index__first .
C2:    1 <= bus__lru_subaddress_index__last .
C3:    idx >= bus__word_index__first .
C4:    idx <= bus__word_index__last .
C5:    bus_id >= bc1553__lru_name__first .
C6:    bus_id <= bc1553__lru_name__last .
 

For path(s) from start to run-time check associated with statement of line 136:

procedure_update_fin_2.
H1:    true .
H2:    for_fin >= fin__first .
H3:    for_fin <= fin__last .
H4:    idx >= bus__word_index__first .
H5:    idx <= bus__word_index__last .
H6:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H7:    1 >= bus__lru_subaddress_index__first .
H8:    1 <= bus__lru_subaddress_index__last .
H9:    idx >= bus__word_index__first .
H10:   idx <= bus__word_index__last .
H11:   bus_id >= bc1553__lru_name__first .
H12:   bus_id <= bc1553__lru_name__last .
H13:   word__1 >= bus__word__first .
H14:   word__1 <= bus__word__last .
        ->
C1:    word__1 >= bus__word__first .
C2:    word__1 <= bus__word__last .
 

For path(s) from start to run-time check associated with statement of line 140:

procedure_update_fin_3.
H1:    true .
H2:    for_fin >= fin__first .
H3:    for_fin <= fin__last .
H4:    idx >= bus__word_index__first .
H5:    idx <= bus__word_index__last .
H6:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H7:    1 >= bus__lru_subaddress_index__first .
H8:    1 <= bus__lru_subaddress_index__last .
H9:    idx >= bus__word_index__first .
H10:   idx <= bus__word_index__last .
H11:   bus_id >= bc1553__lru_name__first .
H12:   bus_id <= bc1553__lru_name__last .
H13:   word__1 >= bus__word__first .
H14:   word__1 <= bus__word__last .
H15:   word__1 >= bus__word__first .
H16:   word__1 <= bus__word__last .
H17:   word__1 >= bus__word__first .
H18:   word__1 <= bus__word__last .
        ->
C1:    word__1 >= bus__word__first .
C2:    word__1 <= bus__word__last .
 

For path(s) from start to run-time check associated with statement of line 140:

procedure_update_fin_4.
H1:    true .
H2:    for_fin >= fin__first .
H3:    for_fin <= fin__last .
H4:    idx >= bus__word_index__first .
H5:    idx <= bus__word_index__last .
H6:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H7:    1 >= bus__lru_subaddress_index__first .
H8:    1 <= bus__lru_subaddress_index__last .
H9:    idx >= bus__word_index__first .
H10:   idx <= bus__word_index__last .
H11:   bus_id >= bc1553__lru_name__first .
H12:   bus_id <= bc1553__lru_name__last .
H13:   word__1 >= bus__word__first .
H14:   word__1 <= bus__word__last .
H15:   word__1 >= bus__word__first .
H16:   word__1 <= bus__word__last .
H17:   word__1 >= bus__word__first .
H18:   word__1 <= bus__word__last .
H19:   word__1 >= bus__word__first .
H20:   word__1 <= bus__word__last .
H21:   steer_cfg__decode__fin_angle(word__1) >= 
           steer_cfg__fin_angle__first .
H22:   steer_cfg__decode__fin_angle(word__1) <= 
           steer_cfg__fin_angle__last .
        ->
C1:    steer_cfg__decode__fin_angle(word__1) >= angle__first .
C2:    steer_cfg__decode__fin_angle(word__1) <= angle__last .
 

For path(s) from start to run-time check associated with statement of line 141:

procedure_update_fin_5.
H1:    true .
H2:    for_fin >= fin__first .
H3:    for_fin <= fin__last .
H4:    idx >= bus__word_index__first .
H5:    idx <= bus__word_index__last .
H6:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H7:    1 >= bus__lru_subaddress_index__first .
H8:    1 <= bus__lru_subaddress_index__last .
H9:    idx >= bus__word_index__first .
H10:   idx <= bus__word_index__last .
H11:   bus_id >= bc1553__lru_name__first .
H12:   bus_id <= bc1553__lru_name__last .
H13:   word__1 >= bus__word__first .
H14:   word__1 <= bus__word__last .
H15:   word__1 >= bus__word__first .
H16:   word__1 <= bus__word__last .
H17:   word__1 >= bus__word__first .
H18:   word__1 <= bus__word__last .
H19:   word__1 >= bus__word__first .
H20:   word__1 <= bus__word__last .
H21:   steer_cfg__decode__fin_angle(word__1) >= 
           steer_cfg__fin_angle__first .
H22:   steer_cfg__decode__fin_angle(word__1) <= 
           steer_cfg__fin_angle__last .
H23:   steer_cfg__decode__fin_angle(word__1) >= angle__first .
H24:   steer_cfg__decode__fin_angle(word__1) <= angle__last .
H25:   steer_cfg__decode__fin_angle(word__1) >= angle__first .
H26:   steer_cfg__decode__fin_angle(word__1) <= angle__last .
        ->
C1:    steer_cfg__decode__fin_angle(word__1) >= angle__first .
C2:    steer_cfg__decode__fin_angle(word__1) <= angle__last .
C3:    for_fin >= fin__first .
C4:    for_fin <= fin__last .
 

For path(s) from start to finish:

procedure_update_fin_6.
*** true .          /* trivially true VC removed by Examiner */



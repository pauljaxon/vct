           *******************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:42.81

                          procedure if_steer.Poll




For path(s) from start to run-time check associated with statement of line 145:

procedure_poll_1.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H3:    true .
H4:    ibit_request >= ibit__phase__first .
H5:    ibit_request <= ibit__phase__last .
        ->
C1:    1 >= bus__lru_subaddress_index__first .
C2:    1 <= bus__lru_subaddress_index__last .
C3:    bus_id >= bc1553__lru_name__first .
C4:    bus_id <= bc1553__lru_name__last .
 

For path(s) from start to run-time check associated with statement of line 145:

procedure_poll_2.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H3:    true .
H4:    ibit_request >= ibit__phase__first .
H5:    ibit_request <= ibit__phase__last .
H6:    1 >= bus__lru_subaddress_index__first .
H7:    1 <= bus__lru_subaddress_index__last .
H8:    bus_id >= bc1553__lru_name__first .
H9:    bus_id <= bc1553__lru_name__last .
H10:   true .
        ->
C1:    bc1553__is_valid(bus_id, 1, bus__inputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
C2:    bc1553__is_valid(bus_id, 1, bus__inputs) -> ((bus_id >= 
           bc1553__lru_name__first) and (bus_id <= 
           bc1553__lru_name__last)) .
 

For path(s) from start to run-time check associated with statement of line 150:

procedure_poll_3.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H3:    true .
H4:    ibit_request >= ibit__phase__first .
H5:    ibit_request <= ibit__phase__last .
H6:    1 >= bus__lru_subaddress_index__first .
H7:    1 <= bus__lru_subaddress_index__last .
H8:    bus_id >= bc1553__lru_name__first .
H9:    bus_id <= bc1553__lru_name__last .
H10:   true .
H11:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H12:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((bus_id >= 
           bc1553__lru_name__first) and (bus_id <= 
           bc1553__lru_name__last)) .
H13:   bc1553__is_valid(bus_id, 1, bus__inputs) -> true .
H14:   bc1553__is_valid(bus_id, 1, bus__inputs) .
H15:   bc1553__is_fresh(bus_id, 1, bus__inputs) .
        ->
C1:    1 >= bus__word_index__first .
C2:    1 <= bus__word_index__last .
C3:    steer_cfg__port >= fin__first .
C4:    steer_cfg__port <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 152:

procedure_poll_4.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H3:    true .
H4:    ibit_request >= ibit__phase__first .
H5:    ibit_request <= ibit__phase__last .
H6:    1 >= bus__lru_subaddress_index__first .
H7:    1 <= bus__lru_subaddress_index__last .
H8:    bus_id >= bc1553__lru_name__first .
H9:    bus_id <= bc1553__lru_name__last .
H10:   true .
H11:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H12:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((bus_id >= 
           bc1553__lru_name__first) and (bus_id <= 
           bc1553__lru_name__last)) .
H13:   bc1553__is_valid(bus_id, 1, bus__inputs) -> true .
H14:   bc1553__is_valid(bus_id, 1, bus__inputs) .
H15:   bc1553__is_fresh(bus_id, 1, bus__inputs) .
H16:   1 >= bus__word_index__first .
H17:   1 <= bus__word_index__last .
H18:   steer_cfg__port >= fin__first .
H19:   steer_cfg__port <= fin__last .
H20:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__1, [
           i___1]) >= angle__first) and (element(last_fins__1, [
           i___1]) <= angle__last))) .
        ->
C1:    2 >= bus__word_index__first .
C2:    2 <= bus__word_index__last .
C3:    steer_cfg__starboard >= fin__first .
C4:    steer_cfg__starboard <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 154:

procedure_poll_5.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H3:    true .
H4:    ibit_request >= ibit__phase__first .
H5:    ibit_request <= ibit__phase__last .
H6:    1 >= bus__lru_subaddress_index__first .
H7:    1 <= bus__lru_subaddress_index__last .
H8:    bus_id >= bc1553__lru_name__first .
H9:    bus_id <= bc1553__lru_name__last .
H10:   true .
H11:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H12:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((bus_id >= 
           bc1553__lru_name__first) and (bus_id <= 
           bc1553__lru_name__last)) .
H13:   bc1553__is_valid(bus_id, 1, bus__inputs) -> true .
H14:   bc1553__is_valid(bus_id, 1, bus__inputs) .
H15:   bc1553__is_fresh(bus_id, 1, bus__inputs) .
H16:   1 >= bus__word_index__first .
H17:   1 <= bus__word_index__last .
H18:   steer_cfg__port >= fin__first .
H19:   steer_cfg__port <= fin__last .
H20:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__1, [
           i___1]) >= angle__first) and (element(last_fins__1, [
           i___1]) <= angle__last))) .
H21:   2 >= bus__word_index__first .
H22:   2 <= bus__word_index__last .
H23:   steer_cfg__starboard >= fin__first .
H24:   steer_cfg__starboard <= fin__last .
H25:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__2, [
           i___1]) >= angle__first) and (element(last_fins__2, [
           i___1]) <= angle__last))) .
        ->
C1:    3 >= bus__word_index__first .
C2:    3 <= bus__word_index__last .
C3:    steer_cfg__top >= fin__first .
C4:    steer_cfg__top <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 156:

procedure_poll_6.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H3:    true .
H4:    ibit_request >= ibit__phase__first .
H5:    ibit_request <= ibit__phase__last .
H6:    1 >= bus__lru_subaddress_index__first .
H7:    1 <= bus__lru_subaddress_index__last .
H8:    bus_id >= bc1553__lru_name__first .
H9:    bus_id <= bc1553__lru_name__last .
H10:   true .
H11:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H12:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((bus_id >= 
           bc1553__lru_name__first) and (bus_id <= 
           bc1553__lru_name__last)) .
H13:   bc1553__is_valid(bus_id, 1, bus__inputs) -> true .
H14:   bc1553__is_valid(bus_id, 1, bus__inputs) .
H15:   bc1553__is_fresh(bus_id, 1, bus__inputs) .
H16:   1 >= bus__word_index__first .
H17:   1 <= bus__word_index__last .
H18:   steer_cfg__port >= fin__first .
H19:   steer_cfg__port <= fin__last .
H20:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__1, [
           i___1]) >= angle__first) and (element(last_fins__1, [
           i___1]) <= angle__last))) .
H21:   2 >= bus__word_index__first .
H22:   2 <= bus__word_index__last .
H23:   steer_cfg__starboard >= fin__first .
H24:   steer_cfg__starboard <= fin__last .
H25:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__2, [
           i___1]) >= angle__first) and (element(last_fins__2, [
           i___1]) <= angle__last))) .
H26:   3 >= bus__word_index__first .
H27:   3 <= bus__word_index__last .
H28:   steer_cfg__top >= fin__first .
H29:   steer_cfg__top <= fin__last .
H30:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__3, [
           i___1]) >= angle__first) and (element(last_fins__3, [
           i___1]) <= angle__last))) .
        ->
C1:    4 >= bus__word_index__first .
C2:    4 <= bus__word_index__last .
C3:    steer_cfg__bottom >= fin__first .
C4:    steer_cfg__bottom <= fin__last .
 

For path(s) from start to run-time check associated with statement of line 160:

procedure_poll_7.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H3:    true .
H4:    ibit_request >= ibit__phase__first .
H5:    ibit_request <= ibit__phase__last .
H6:    1 >= bus__lru_subaddress_index__first .
H7:    1 <= bus__lru_subaddress_index__last .
H8:    bus_id >= bc1553__lru_name__first .
H9:    bus_id <= bc1553__lru_name__last .
H10:   true .
H11:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H12:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((bus_id >= 
           bc1553__lru_name__first) and (bus_id <= 
           bc1553__lru_name__last)) .
H13:   bc1553__is_valid(bus_id, 1, bus__inputs) -> true .
H14:   bc1553__is_valid(bus_id, 1, bus__inputs) .
H15:   bc1553__is_fresh(bus_id, 1, bus__inputs) .
H16:   1 >= bus__word_index__first .
H17:   1 <= bus__word_index__last .
H18:   steer_cfg__port >= fin__first .
H19:   steer_cfg__port <= fin__last .
H20:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__1, [
           i___1]) >= angle__first) and (element(last_fins__1, [
           i___1]) <= angle__last))) .
H21:   2 >= bus__word_index__first .
H22:   2 <= bus__word_index__last .
H23:   steer_cfg__starboard >= fin__first .
H24:   steer_cfg__starboard <= fin__last .
H25:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__2, [
           i___1]) >= angle__first) and (element(last_fins__2, [
           i___1]) <= angle__last))) .
H26:   3 >= bus__word_index__first .
H27:   3 <= bus__word_index__last .
H28:   steer_cfg__top >= fin__first .
H29:   steer_cfg__top <= fin__last .
H30:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__3, [
           i___1]) >= angle__first) and (element(last_fins__3, [
           i___1]) <= angle__last))) .
H31:   4 >= bus__word_index__first .
H32:   4 <= bus__word_index__last .
H33:   steer_cfg__bottom >= fin__first .
H34:   steer_cfg__bottom <= fin__last .
H35:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__4, [
           i___1]) >= angle__first) and (element(last_fins__4, [
           i___1]) <= angle__last))) .
        ->
C1:    1 >= bus__lru_subaddress_index__first .
C2:    1 <= bus__lru_subaddress_index__last .
C3:    5 >= bus__word_index__first .
C4:    5 <= bus__word_index__last .
C5:    bus_id >= bc1553__lru_name__first .
C6:    bus_id <= bc1553__lru_name__last .
 

For path(s) from start to run-time check associated with statement of line 160:

procedure_poll_8.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H3:    true .
H4:    ibit_request >= ibit__phase__first .
H5:    ibit_request <= ibit__phase__last .
H6:    1 >= bus__lru_subaddress_index__first .
H7:    1 <= bus__lru_subaddress_index__last .
H8:    bus_id >= bc1553__lru_name__first .
H9:    bus_id <= bc1553__lru_name__last .
H10:   true .
H11:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H12:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((bus_id >= 
           bc1553__lru_name__first) and (bus_id <= 
           bc1553__lru_name__last)) .
H13:   bc1553__is_valid(bus_id, 1, bus__inputs) -> true .
H14:   bc1553__is_valid(bus_id, 1, bus__inputs) .
H15:   bc1553__is_fresh(bus_id, 1, bus__inputs) .
H16:   1 >= bus__word_index__first .
H17:   1 <= bus__word_index__last .
H18:   steer_cfg__port >= fin__first .
H19:   steer_cfg__port <= fin__last .
H20:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__1, [
           i___1]) >= angle__first) and (element(last_fins__1, [
           i___1]) <= angle__last))) .
H21:   2 >= bus__word_index__first .
H22:   2 <= bus__word_index__last .
H23:   steer_cfg__starboard >= fin__first .
H24:   steer_cfg__starboard <= fin__last .
H25:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__2, [
           i___1]) >= angle__first) and (element(last_fins__2, [
           i___1]) <= angle__last))) .
H26:   3 >= bus__word_index__first .
H27:   3 <= bus__word_index__last .
H28:   steer_cfg__top >= fin__first .
H29:   steer_cfg__top <= fin__last .
H30:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__3, [
           i___1]) >= angle__first) and (element(last_fins__3, [
           i___1]) <= angle__last))) .
H31:   4 >= bus__word_index__first .
H32:   4 <= bus__word_index__last .
H33:   steer_cfg__bottom >= fin__first .
H34:   steer_cfg__bottom <= fin__last .
H35:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__4, [
           i___1]) >= angle__first) and (element(last_fins__4, [
           i___1]) <= angle__last))) .
H36:   1 >= bus__lru_subaddress_index__first .
H37:   1 <= bus__lru_subaddress_index__last .
H38:   5 >= bus__word_index__first .
H39:   5 <= bus__word_index__last .
H40:   bus_id >= bc1553__lru_name__first .
H41:   bus_id <= bc1553__lru_name__last .
H42:   datum__5 >= bus__word__first .
H43:   datum__5 <= bus__word__last .
        ->
C1:    datum__5 >= bus__word__first .
C2:    datum__5 <= bus__word__last .
 

For path(s) from start to run-time check associated with statement of line 166:

procedure_poll_9.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H3:    true .
H4:    ibit_request >= ibit__phase__first .
H5:    ibit_request <= ibit__phase__last .
H6:    1 >= bus__lru_subaddress_index__first .
H7:    1 <= bus__lru_subaddress_index__last .
H8:    bus_id >= bc1553__lru_name__first .
H9:    bus_id <= bc1553__lru_name__last .
H10:   true .
H11:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H12:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((bus_id >= 
           bc1553__lru_name__first) and (bus_id <= 
           bc1553__lru_name__last)) .
H13:   bc1553__is_valid(bus_id, 1, bus__inputs) -> true .
H14:   bc1553__is_valid(bus_id, 1, bus__inputs) .
H15:   bc1553__is_fresh(bus_id, 1, bus__inputs) .
H16:   1 >= bus__word_index__first .
H17:   1 <= bus__word_index__last .
H18:   steer_cfg__port >= fin__first .
H19:   steer_cfg__port <= fin__last .
H20:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__1, [
           i___1]) >= angle__first) and (element(last_fins__1, [
           i___1]) <= angle__last))) .
H21:   2 >= bus__word_index__first .
H22:   2 <= bus__word_index__last .
H23:   steer_cfg__starboard >= fin__first .
H24:   steer_cfg__starboard <= fin__last .
H25:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__2, [
           i___1]) >= angle__first) and (element(last_fins__2, [
           i___1]) <= angle__last))) .
H26:   3 >= bus__word_index__first .
H27:   3 <= bus__word_index__last .
H28:   steer_cfg__top >= fin__first .
H29:   steer_cfg__top <= fin__last .
H30:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__3, [
           i___1]) >= angle__first) and (element(last_fins__3, [
           i___1]) <= angle__last))) .
H31:   4 >= bus__word_index__first .
H32:   4 <= bus__word_index__last .
H33:   steer_cfg__bottom >= fin__first .
H34:   steer_cfg__bottom <= fin__last .
H35:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__4, [
           i___1]) >= angle__first) and (element(last_fins__4, [
           i___1]) <= angle__last))) .
H36:   1 >= bus__lru_subaddress_index__first .
H37:   1 <= bus__lru_subaddress_index__last .
H38:   5 >= bus__word_index__first .
H39:   5 <= bus__word_index__last .
H40:   bus_id >= bc1553__lru_name__first .
H41:   bus_id <= bc1553__lru_name__last .
H42:   datum__5 >= bus__word__first .
H43:   datum__5 <= bus__word__last .
H44:   datum__5 >= bus__word__first .
H45:   datum__5 <= bus__word__last .
H46:   datum__5 >= bus__word__first .
H47:   datum__5 <= bus__word__last .
        ->
C1:    ibit_request >= ibit__phase__first .
C2:    ibit_request <= ibit__phase__last .
C3:    datum__5 >= systemtypes__unsigned16__first .
C4:    datum__5 <= systemtypes__unsigned16__last .
 

For path(s) from start to run-time check associated with statement of line 166:

procedure_poll_10.
H1:    true .
H2:    for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins, [
           i___1]) >= angle__first) and (element(last_fins, [
           i___1]) <= angle__last))) .
H3:    true .
H4:    ibit_request >= ibit__phase__first .
H5:    ibit_request <= ibit__phase__last .
H6:    1 >= bus__lru_subaddress_index__first .
H7:    1 <= bus__lru_subaddress_index__last .
H8:    bus_id >= bc1553__lru_name__first .
H9:    bus_id <= bc1553__lru_name__last .
H10:   true .
H11:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((1 >= 
           bus__lru_subaddress_index__first) and (1 <= 
           bus__lru_subaddress_index__last)) .
H12:   bc1553__is_valid(bus_id, 1, bus__inputs) -> ((bus_id >= 
           bc1553__lru_name__first) and (bus_id <= 
           bc1553__lru_name__last)) .
H13:   bc1553__is_valid(bus_id, 1, bus__inputs) -> true .
H14:   bc1553__is_valid(bus_id, 1, bus__inputs) .
H15:   bc1553__is_fresh(bus_id, 1, bus__inputs) .
H16:   1 >= bus__word_index__first .
H17:   1 <= bus__word_index__last .
H18:   steer_cfg__port >= fin__first .
H19:   steer_cfg__port <= fin__last .
H20:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__1, [
           i___1]) >= angle__first) and (element(last_fins__1, [
           i___1]) <= angle__last))) .
H21:   2 >= bus__word_index__first .
H22:   2 <= bus__word_index__last .
H23:   steer_cfg__starboard >= fin__first .
H24:   steer_cfg__starboard <= fin__last .
H25:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__2, [
           i___1]) >= angle__first) and (element(last_fins__2, [
           i___1]) <= angle__last))) .
H26:   3 >= bus__word_index__first .
H27:   3 <= bus__word_index__last .
H28:   steer_cfg__top >= fin__first .
H29:   steer_cfg__top <= fin__last .
H30:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__3, [
           i___1]) >= angle__first) and (element(last_fins__3, [
           i___1]) <= angle__last))) .
H31:   4 >= bus__word_index__first .
H32:   4 <= bus__word_index__last .
H33:   steer_cfg__bottom >= fin__first .
H34:   steer_cfg__bottom <= fin__last .
H35:   for_all(i___1: steer_cfg__fin, ((i___1 >= fin__first) and (
           i___1 <= fin__last)) -> ((element(last_fins__4, [
           i___1]) >= angle__first) and (element(last_fins__4, [
           i___1]) <= angle__last))) .
H36:   1 >= bus__lru_subaddress_index__first .
H37:   1 <= bus__lru_subaddress_index__last .
H38:   5 >= bus__word_index__first .
H39:   5 <= bus__word_index__last .
H40:   bus_id >= bc1553__lru_name__first .
H41:   bus_id <= bc1553__lru_name__last .
H42:   datum__5 >= bus__word__first .
H43:   datum__5 <= bus__word__last .
H44:   datum__5 >= bus__word__first .
H45:   datum__5 <= bus__word__last .
H46:   datum__5 >= bus__word__first .
H47:   datum__5 <= bus__word__last .
H48:   ibit_request >= ibit__phase__first .
H49:   ibit_request <= ibit__phase__last .
H50:   datum__5 >= systemtypes__unsigned16__first .
H51:   datum__5 <= systemtypes__unsigned16__last .
H52:   ibit_request__6 >= ibit__phase__first .
H53:   ibit_request__6 <= ibit__phase__last .
        ->
C1:    ibit_request__6 >= ibit__phase__first .
C2:    ibit_request__6 <= ibit__phase__last .
 

For path(s) from start to finish:

procedure_poll_11.
*** true .          /* trivially true VC removed by Examiner */


procedure_poll_12.
*** true .          /* trivially true VC removed by Examiner */


For checks of refinement integrity: 

procedure_poll_13.
*** true .          /* trivially true VC removed by Examiner */


procedure_poll_14.
*** true .          /* trivially true VC removed by Examiner */



           /*********************************************************/
                           /*Proof Rule Declarations*/
 /*SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331*/
      /*Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 25-NOV-2009 14:04:43.02*/

                            /*procedure motor.Init*/


rule_family init_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

init_rules(1): bus_id may_be_replaced_by rt1553__motor.
init_rules(2): integer__size >= 0 may_be_deduced.
init_rules(3): integer__first may_be_replaced_by -2147483648.
init_rules(4): integer__last may_be_replaced_by 2147483647.
init_rules(5): integer__base__first may_be_replaced_by -2147483648.
init_rules(6): integer__base__last may_be_replaced_by 2147483647.
init_rules(7): systemtypes__unsigned16__size >= 0 may_be_deduced.
init_rules(8): systemtypes__unsigned16__first may_be_replaced_by 0.
init_rules(9): systemtypes__unsigned16__last may_be_replaced_by 65535.
init_rules(10): systemtypes__unsigned16__base__first may_be_replaced_by -2147483648.
init_rules(11): systemtypes__unsigned16__base__last may_be_replaced_by 2147483647.
init_rules(12): measuretypes__newton__size >= 0 may_be_deduced.
init_rules(13): measuretypes__newton__first may_be_replaced_by -1000000.
init_rules(14): measuretypes__newton__last may_be_replaced_by 1000000.
init_rules(15): measuretypes__newton__base__first may_be_replaced_by -2147483648.
init_rules(16): measuretypes__newton__base__last may_be_replaced_by 2147483647.
init_rules(17): clock__millisecond__size >= 0 may_be_deduced.
init_rules(18): clock__millisecond__first may_be_replaced_by 0.
init_rules(19): clock__millisecond__last may_be_replaced_by 8640000.
init_rules(20): clock__millisecond__base__first may_be_replaced_by -2147483648.
init_rules(21): clock__millisecond__base__last may_be_replaced_by 2147483647.
init_rules(22): bus__all_msg_index__size >= 0 may_be_deduced.
init_rules(23): bus__all_msg_index__first may_be_replaced_by 0.
init_rules(24): bus__all_msg_index__last may_be_replaced_by 63.
init_rules(25): bus__all_msg_index__base__first may_be_replaced_by -32768.
init_rules(26): bus__all_msg_index__base__last may_be_replaced_by 32767.
init_rules(27): bus__lru_subaddress_index__size >= 0 may_be_deduced.
init_rules(28): bus__lru_subaddress_index__first may_be_replaced_by 1.
init_rules(29): bus__lru_subaddress_index__last may_be_replaced_by 8.
init_rules(30): bus__lru_subaddress_index__base__first may_be_replaced_by -32768.
init_rules(31): bus__lru_subaddress_index__base__last may_be_replaced_by 32767.
init_rules(32): rt1553__lru_name__size >= 0 may_be_deduced.
init_rules(33): rt1553__lru_name__first may_be_replaced_by rt1553__barometer.
init_rules(34): rt1553__lru_name__last may_be_replaced_by rt1553__warhead.
init_rules(35): rt1553__lru_name__base__first may_be_replaced_by rt1553__barometer.
init_rules(36): rt1553__lru_name__base__last may_be_replaced_by rt1553__warhead.
init_rules(37): rt1553__lru_name__pos(rt1553__lru_name__first) may_be_replaced_by 0.
init_rules(38): rt1553__lru_name__pos(rt1553__barometer) may_be_replaced_by 0.
init_rules(39): rt1553__lru_name__val(0) may_be_replaced_by 
     rt1553__barometer.
init_rules(40): rt1553__lru_name__pos(rt1553__asi) may_be_replaced_by 1.
init_rules(41): rt1553__lru_name__val(1) may_be_replaced_by 
     rt1553__asi.
init_rules(42): rt1553__lru_name__pos(rt1553__ins) may_be_replaced_by 2.
init_rules(43): rt1553__lru_name__val(2) may_be_replaced_by 
     rt1553__ins.
init_rules(44): rt1553__lru_name__pos(rt1553__compass) may_be_replaced_by 3.
init_rules(45): rt1553__lru_name__val(3) may_be_replaced_by 
     rt1553__compass.
init_rules(46): rt1553__lru_name__pos(rt1553__fuel) may_be_replaced_by 4.
init_rules(47): rt1553__lru_name__val(4) may_be_replaced_by 
     rt1553__fuel.
init_rules(48): rt1553__lru_name__pos(rt1553__fuze) may_be_replaced_by 5.
init_rules(49): rt1553__lru_name__val(5) may_be_replaced_by 
     rt1553__fuze.
init_rules(50): rt1553__lru_name__pos(rt1553__radar) may_be_replaced_by 6.
init_rules(51): rt1553__lru_name__val(6) may_be_replaced_by 
     rt1553__radar.
init_rules(52): rt1553__lru_name__pos(rt1553__infrared) may_be_replaced_by 7.
init_rules(53): rt1553__lru_name__val(7) may_be_replaced_by 
     rt1553__infrared.
init_rules(54): rt1553__lru_name__pos(rt1553__fins) may_be_replaced_by 8.
init_rules(55): rt1553__lru_name__val(8) may_be_replaced_by 
     rt1553__fins.
init_rules(56): rt1553__lru_name__pos(rt1553__motor) may_be_replaced_by 9.
init_rules(57): rt1553__lru_name__val(9) may_be_replaced_by 
     rt1553__motor.
init_rules(58): rt1553__lru_name__pos(rt1553__destruct) may_be_replaced_by 10.
init_rules(59): rt1553__lru_name__val(10) may_be_replaced_by 
     rt1553__destruct.
init_rules(60): rt1553__lru_name__pos(rt1553__warhead) may_be_replaced_by 11.
init_rules(61): rt1553__lru_name__val(11) may_be_replaced_by 
     rt1553__warhead.
init_rules(62): rt1553__lru_name__pos(rt1553__lru_name__last) may_be_replaced_by 11.
init_rules(63): rt1553__lru_name__pos(succ(X)) may_be_replaced_by 
     rt1553__lru_name__pos(X) + 1
     if [X <=rt1553__warhead, X <> rt1553__warhead].
init_rules(64): rt1553__lru_name__pos(pred(X)) may_be_replaced_by 
     rt1553__lru_name__pos(X) - 1
     if [X >=rt1553__barometer, X <> rt1553__barometer].
init_rules(65): rt1553__lru_name__pos(X) >= 0 may_be_deduced_from
     [rt1553__barometer <= X, X <= rt1553__warhead].
init_rules(66): rt1553__lru_name__pos(X) <= 11 may_be_deduced_from
     [rt1553__barometer <= X, X <= rt1553__warhead].
init_rules(67): rt1553__lru_name__val(X) >= rt1553__barometer may_be_deduced_from
     [0 <= X, X <= 11].
init_rules(68): rt1553__lru_name__val(X) <= rt1553__warhead may_be_deduced_from
     [0 <= X, X <= 11].
init_rules(69): succ(rt1553__lru_name__val(X)) may_be_replaced_by 
     rt1553__lru_name__val(X+1)
     if [0 <= X, X < 11].
init_rules(70): pred(rt1553__lru_name__val(X)) may_be_replaced_by 
     rt1553__lru_name__val(X-1)
     if [0 < X, X <= 11].
init_rules(71): rt1553__lru_name__pos(rt1553__lru_name__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 11].
init_rules(72): rt1553__lru_name__val(rt1553__lru_name__pos(X)) may_be_replaced_by X
     if [rt1553__barometer <= X, X <= rt1553__warhead].
init_rules(73): rt1553__lru_name__pos(X) <= rt1553__lru_name__pos(Y) & X <= Y are_interchangeable 
     if [rt1553__barometer <= X, X <= rt1553__warhead, 
     rt1553__barometer <= Y, Y <= rt1553__warhead].
init_rules(74): rt1553__lru_name__val(X) <= rt1553__lru_name__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 11, 0 <= Y, Y <= 11].
init_rules(75): power__size >= 0 may_be_deduced.
init_rules(76): power__first may_be_replaced_by 0.
init_rules(77): power__last may_be_replaced_by 35000.
init_rules(78): power__base__first may_be_replaced_by -2147483648.
init_rules(79): power__base__last may_be_replaced_by 2147483647.

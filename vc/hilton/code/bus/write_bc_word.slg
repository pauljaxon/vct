*****************************************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
*****************************************************************************


CREATED 25-NOV-2009, 14:04:37  SIMPLIFIED 25-NOV-2009, 14:18:37

SPARK Simplifier Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.

procedure bus.Write_BC_Word






@@@@@@@@@@  VC: procedure_write_bc_word_1.  @@@@@@@@@@
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(i___2 : integer, word_index__first <= i___2 and i___2 
          <= word_index__last -> for_all(i___1 : integer, 
          valid_msg_index__first <= i___1 and i___1 <= valid_msg_index__last -> 
          word__first <= element(fld_data(element(shadow_inputs, [i___1])), [
          i___2]) and element(fld_data(element(shadow_inputs, [i___1])), [i___2]
          ) <= word__last))
***  Proved C1:  src >= lru_index__first
     using hypothesis H8.
***  Proved C2:  src <= lru_index__last
     using hypothesis H9.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_bc_word_2.  @@@@@@@@@@
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(i___2 : integer, word_index__first <= i___2 and i___2 
          <= word_index__last -> for_all(i___1 : integer, 
          valid_msg_index__first <= i___1 and i___1 <= valid_msg_index__last -> 
          word__first <= element(fld_data(element(shadow_inputs, [i___1])), [
          i___2]) and element(fld_data(element(shadow_inputs, [i___1])), [i___2]
          ) <= word__last))
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H15).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H15).
---  Hypothesis H26 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H15).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H18).
-S-  Applied substitution rule write_bc_wor_rules(29).
     This was achieved by replacing all occurrences of valid_msg_index__first 
          by:
          1.
<S>  New H10:  for_all(i___2 : integer, word_index__first <= i___2 and i___2 <= 
          word_index__last -> for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          valid_msg_index__last -> word__first <= element(fld_data(element(
          shadow_inputs, [i___1])), [i___2]) and element(fld_data(element(
          shadow_inputs, [i___1])), [i___2]) <= word__last))
<S>  New H19:  not (fld_initial(element(rt_to_bc, [src])) < 1 or fld_initial(
          element(rt_to_bc, [src])) > valid_msg_index__last)
<S>  New C1:  fld_initial(element(rt_to_bc, [src])) + (subaddress_idx - 1) >= 1
-S-  Applied substitution rule write_bc_wor_rules(30).
     This was achieved by replacing all occurrences of valid_msg_index__last by:
          63.
<S>  New H10:  for_all(i___2 : integer, word_index__first <= i___2 and i___2 <= 
          word_index__last -> for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          63 -> word__first <= element(fld_data(element(shadow_inputs, [i___1]))
          , [i___2]) and element(fld_data(element(shadow_inputs, [i___1])), [
          i___2]) <= word__last))
<S>  New H19:  not (fld_initial(element(rt_to_bc, [src])) < 1 or fld_initial(
          element(rt_to_bc, [src])) > 63)
<S>  New C2:  fld_initial(element(rt_to_bc, [src])) + (subaddress_idx - 1) <= 63
-S-  Applied substitution rule write_bc_wor_rules(26).
     This was achieved by replacing all occurrences of 
          all_msg_index__base__first by:
          - 32768.
<S>  New C3:  subaddress_idx >= - 32767
-S-  Applied substitution rule write_bc_wor_rules(27).
     This was achieved by replacing all occurrences of 
          all_msg_index__base__last by:
          32767.
<S>  New C4:  subaddress_idx <= 32768
>>>  Restructured hypothesis H19 into:
     >>>  H19:  1 <= fld_initial(element(rt_to_bc, [src])) and fld_initial(
          element(rt_to_bc, [src])) <= 63
>>>  Restructured hypothesis H24 into:
     >>>  H24:  subaddress_idx <= fld_msg_count(element(rt_to_bc, [src]))
>>>  Restructured hypothesis H29 into:
     >>>  H29:  fld_initial(element(rt_to_bc, [src])) <= lru_start_index__last
>>>  Hypothesis H19 has now been split into two, giving:
     >>>  H19:  1 <= fld_initial(element(rt_to_bc, [src]))
     >>>  H34:  fld_initial(element(rt_to_bc, [src])) <= 63
-S-  Applied substitution rule write_bc_wor_rules(11).
     This was achieved by replacing all occurrences of word_index__first by:
          1.
<S>  New H4:  idx >= 1
<S>  New H10:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 
          word_index__last -> for_all(i___1 : integer, 1 <= i___1 and i___1 <= 
          63 -> word__first <= element(fld_data(element(shadow_inputs, [i___1]))
          , [i___2]) and element(fld_data(element(shadow_inputs, [i___1])), [
          i___2]) <= word__last))
-S-  Applied substitution rule write_bc_wor_rules(12).
     This was achieved by replacing all occurrences of word_index__last by:
          31.
<S>  New H5:  idx <= 31
<S>  New H10:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 31 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 63 -> word__first <= element(
          fld_data(element(shadow_inputs, [i___1])), [i___2]) and element(
          fld_data(element(shadow_inputs, [i___1])), [i___2]) <= word__last))
-S-  Applied substitution rule write_bc_wor_rules(17).
     This was achieved by replacing all occurrences of word__first by:
          0.
<S>  New H2:  data >= 0
<S>  New H10:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 31 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 63 -> 0 <= element(fld_data(
          element(shadow_inputs, [i___1])), [i___2]) and element(fld_data(
          element(shadow_inputs, [i___1])), [i___2]) <= word__last))
-S-  Applied substitution rule write_bc_wor_rules(18).
     This was achieved by replacing all occurrences of word__last by:
          65535.
<S>  New H3:  data <= 65535
<S>  New H10:  for_all(i___2 : integer, 1 <= i___2 and i___2 <= 31 -> for_all(
          i___1 : integer, 1 <= i___1 and i___1 <= 63 -> 0 <= element(fld_data(
          element(shadow_inputs, [i___1])), [i___2]) and element(fld_data(
          element(shadow_inputs, [i___1])), [i___2]) <= 65535))
-S-  Applied substitution rule write_bc_wor_rules(34).
     This was achieved by replacing all occurrences of 
          lru_subaddress_index__first by:
          1.
<S>  New H6:  subaddress_idx >= 1
<S>  New H15:  fld_msg_count(element(rt_to_bc, [src])) >= 1
-S-  Applied substitution rule write_bc_wor_rules(35).
     This was achieved by replacing all occurrences of 
          lru_subaddress_index__last by:
          8.
<S>  New H7:  subaddress_idx <= 8
<S>  New H16:  fld_msg_count(element(rt_to_bc, [src])) <= 8
-S-  Applied substitution rule write_bc_wor_rules(39).
     This was achieved by replacing all occurrences of lru_index__first by:
          1.
<S>  New H8:  src >= 1
-S-  Applied substitution rule write_bc_wor_rules(40).
     This was achieved by replacing all occurrences of lru_index__last by:
          12.
<S>  New H9:  src <= 12
-S-  Applied substitution rule write_bc_wor_rules(45).
     This was achieved by replacing all occurrences of lru_start_index__first 
          by:
          0.
<S>  New H17:  fld_initial(element(rt_to_bc, [src])) >= 0
-S-  Applied substitution rule write_bc_wor_rules(46).
     This was achieved by replacing all occurrences of lru_start_index__last by:
          55.
<S>  New H18:  fld_initial(element(rt_to_bc, [src])) <= 55
<S>  New H29:  fld_initial(element(rt_to_bc, [src])) <= 55
***  Proved C1:  fld_initial(element(rt_to_bc, [src])) + (subaddress_idx - 1) 
          >= 1
     using hypotheses H6 & H19.
***  Proved C2:  fld_initial(element(rt_to_bc, [src])) + (subaddress_idx - 1) 
          <= 63
     using hypotheses H7 & H18.
***  Proved C3:  subaddress_idx >= - 32767
     using hypothesis H6.
***  Proved C4:  subaddress_idx <= 32768
     using hypothesis H7.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_bc_word_3.  @@@@@@@@@@
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(i___2 : integer, word_index__first <= i___2 and i___2 
          <= word_index__last -> for_all(i___1 : integer, 
          valid_msg_index__first <= i___1 and i___1 <= valid_msg_index__last -> 
          word__first <= element(fld_data(element(shadow_inputs, [i___1])), [
          i___2]) and element(fld_data(element(shadow_inputs, [i___1])), [i___2]
          ) <= word__last))
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H15).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H15).
---  Hypothesis H26 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H15).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H18).
***  Proved C1:  data >= word__first
     using hypothesis H2.
***  Proved C2:  data <= word__last
     using hypothesis H3.
***  Proved C3:  idx >= word_index__first
     using hypothesis H4.
***  Proved C4:  idx <= word_index__last
     using hypothesis H5.
***  Proved C5:  fld_initial(element(rt_to_bc, [src])) + (subaddress_idx - 1) 
          >= valid_msg_index__first
     using hypothesis H34.
***  Proved C6:  fld_initial(element(rt_to_bc, [src])) + (subaddress_idx - 1) 
          <= valid_msg_index__last
     using hypothesis H35.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_bc_word_4.  @@@@@@@@@@
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(i___2 : integer, word_index__first <= i___2 and i___2 
          <= word_index__last -> for_all(i___1 : integer, 
          valid_msg_index__first <= i___1 and i___1 <= valid_msg_index__last -> 
          word__first <= element(fld_data(element(shadow_inputs, [i___1])), [
          i___2]) and element(fld_data(element(shadow_inputs, [i___1])), [i___2]
          ) <= word__last))
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H9)
          .
---  Hypothesis H20 has been replaced by "true".  (It is already present, as 
          H15).
---  Hypothesis H21 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H22 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H23 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H15).
---  Hypothesis H26 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H30 has been replaced by "true".  (It is already present, as 
          H15).
---  Hypothesis H31 has been replaced by "true".  (It is already present, as 
          H16).
---  Hypothesis H32 has been replaced by "true".  (It is already present, as 
          H17).
---  Hypothesis H33 has been replaced by "true".  (It is already present, as 
          H18).
---  Hypothesis H38 has been replaced by "true".  (It is already present, as H2)
          .
---  Hypothesis H39 has been replaced by "true".  (It is already present, as H3)
          .
---  Hypothesis H40 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H41 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H42 has been replaced by "true".  (It is already present, as 
          H34).
---  Hypothesis H43 has been replaced by "true".  (It is already present, as 
          H35).
***  Proved C1:  fld_initial(element(rt_to_bc, [src])) + (subaddress_idx - 1) 
          >= valid_msg_index__first
     using hypothesis H34.
***  Proved C2:  fld_initial(element(rt_to_bc, [src])) + (subaddress_idx - 1) 
          <= valid_msg_index__last
     using hypothesis H35.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_bc_word_5.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_bc_word_6.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_bc_word_7.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_bc_word_8.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_bc_word_9.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_write_bc_word_10.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


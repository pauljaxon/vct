           *******************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:37.90

                        procedure bus.Write_RT_Word




For path(s) from start to run-time check associated with statement of line 130:

procedure_write_rt_word_1.
H1:    true .
H2:    data >= word__first .
H3:    data <= word__last .
H4:    idx >= word_index__first .
H5:    idx <= word_index__last .
H6:    subaddress_idx >= lru_subaddress_index__first .
H7:    subaddress_idx <= lru_subaddress_index__last .
H8:    dest >= lru_index__first .
H9:    dest <= lru_index__last .
H10:   for_all(i___2: word_index, ((i___2 >= word_index__first) and (
           i___2 <= word_index__last)) -> (for_all(i___1: 
           all_msg_index, ((i___1 >= valid_msg_index__first) and (
           i___1 <= valid_msg_index__last)) -> ((element(fld_data(element(
           shadow_outputs, [i___1])), [i___2]) >= word__first) and (element(
           fld_data(element(shadow_outputs, [i___1])), [
           i___2]) <= word__last))))) .
H11:   true .
H12:   true .
        ->
C1:    dest >= lru_index__first .
C2:    dest <= lru_index__last .
 

For path(s) from start to run-time check associated with statement of line 140:

procedure_write_rt_word_2.
H1:    true .
H2:    data >= word__first .
H3:    data <= word__last .
H4:    idx >= word_index__first .
H5:    idx <= word_index__last .
H6:    subaddress_idx >= lru_subaddress_index__first .
H7:    subaddress_idx <= lru_subaddress_index__last .
H8:    dest >= lru_index__first .
H9:    dest <= lru_index__last .
H10:   for_all(i___2: word_index, ((i___2 >= word_index__first) and (
           i___2 <= word_index__last)) -> (for_all(i___1: 
           all_msg_index, ((i___1 >= valid_msg_index__first) and (
           i___1 <= valid_msg_index__last)) -> ((element(fld_data(element(
           shadow_outputs, [i___1])), [i___2]) >= word__first) and (element(
           fld_data(element(shadow_outputs, [i___1])), [
           i___2]) <= word__last))))) .
H11:   true .
H12:   true .
H13:   dest >= lru_index__first .
H14:   dest <= lru_index__last .
H15:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H16:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H17:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H18:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H19:   not ((fld_initial(element(bc_to_rt, [dest])) < 
           valid_msg_index__first) or (fld_initial(element(
           bc_to_rt, [dest])) > valid_msg_index__last)) .
H20:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H21:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H22:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H23:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H24:   not (subaddress_idx > fld_msg_count(element(bc_to_rt, [
           dest]))) .
H25:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H26:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H27:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H28:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H29:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H30:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H31:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H32:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H33:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
        ->
C1:    fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) >= valid_msg_index__first .
C2:    fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) <= valid_msg_index__last .
C3:    subaddress_idx - 1 >= all_msg_index__base__first .
C4:    subaddress_idx - 1 <= all_msg_index__base__last .
 

For path(s) from start to run-time check associated with statement of line 142:

procedure_write_rt_word_3.
H1:    true .
H2:    data >= word__first .
H3:    data <= word__last .
H4:    idx >= word_index__first .
H5:    idx <= word_index__last .
H6:    subaddress_idx >= lru_subaddress_index__first .
H7:    subaddress_idx <= lru_subaddress_index__last .
H8:    dest >= lru_index__first .
H9:    dest <= lru_index__last .
H10:   for_all(i___2: word_index, ((i___2 >= word_index__first) and (
           i___2 <= word_index__last)) -> (for_all(i___1: 
           all_msg_index, ((i___1 >= valid_msg_index__first) and (
           i___1 <= valid_msg_index__last)) -> ((element(fld_data(element(
           shadow_outputs, [i___1])), [i___2]) >= word__first) and (element(
           fld_data(element(shadow_outputs, [i___1])), [
           i___2]) <= word__last))))) .
H11:   true .
H12:   true .
H13:   dest >= lru_index__first .
H14:   dest <= lru_index__last .
H15:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H16:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H17:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H18:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H19:   not ((fld_initial(element(bc_to_rt, [dest])) < 
           valid_msg_index__first) or (fld_initial(element(
           bc_to_rt, [dest])) > valid_msg_index__last)) .
H20:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H21:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H22:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H23:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H24:   not (subaddress_idx > fld_msg_count(element(bc_to_rt, [
           dest]))) .
H25:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H26:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H27:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H28:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H29:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H30:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H31:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H32:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H33:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H34:   fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) >= valid_msg_index__first .
H35:   fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) <= valid_msg_index__last .
H36:   subaddress_idx - 1 >= all_msg_index__base__first .
H37:   subaddress_idx - 1 <= all_msg_index__base__last .
        ->
C1:    data >= word__first .
C2:    data <= word__last .
C3:    idx >= word_index__first .
C4:    idx <= word_index__last .
C5:    fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) >= valid_msg_index__first .
C6:    fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) <= valid_msg_index__last .
 

For path(s) from start to run-time check associated with statement of line 143:

procedure_write_rt_word_4.
H1:    true .
H2:    data >= word__first .
H3:    data <= word__last .
H4:    idx >= word_index__first .
H5:    idx <= word_index__last .
H6:    subaddress_idx >= lru_subaddress_index__first .
H7:    subaddress_idx <= lru_subaddress_index__last .
H8:    dest >= lru_index__first .
H9:    dest <= lru_index__last .
H10:   for_all(i___2: word_index, ((i___2 >= word_index__first) and (
           i___2 <= word_index__last)) -> (for_all(i___1: 
           all_msg_index, ((i___1 >= valid_msg_index__first) and (
           i___1 <= valid_msg_index__last)) -> ((element(fld_data(element(
           shadow_outputs, [i___1])), [i___2]) >= word__first) and (element(
           fld_data(element(shadow_outputs, [i___1])), [
           i___2]) <= word__last))))) .
H11:   true .
H12:   true .
H13:   dest >= lru_index__first .
H14:   dest <= lru_index__last .
H15:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H16:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H17:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H18:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H19:   not ((fld_initial(element(bc_to_rt, [dest])) < 
           valid_msg_index__first) or (fld_initial(element(
           bc_to_rt, [dest])) > valid_msg_index__last)) .
H20:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H21:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H22:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H23:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H24:   not (subaddress_idx > fld_msg_count(element(bc_to_rt, [
           dest]))) .
H25:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H26:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H27:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H28:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H29:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H30:   fld_msg_count(element(bc_to_rt, [dest])) >= 
           lru_subaddress_index__first .
H31:   fld_msg_count(element(bc_to_rt, [dest])) <= 
           lru_subaddress_index__last .
H32:   fld_initial(element(bc_to_rt, [dest])) >= 
           lru_start_index__first .
H33:   fld_initial(element(bc_to_rt, [dest])) <= 
           lru_start_index__last .
H34:   fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) >= valid_msg_index__first .
H35:   fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) <= valid_msg_index__last .
H36:   subaddress_idx - 1 >= all_msg_index__base__first .
H37:   subaddress_idx - 1 <= all_msg_index__base__last .
H38:   data >= word__first .
H39:   data <= word__last .
H40:   idx >= word_index__first .
H41:   idx <= word_index__last .
H42:   fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) >= valid_msg_index__first .
H43:   fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) <= valid_msg_index__last .
        ->
C1:    fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) >= valid_msg_index__first .
C2:    fld_initial(element(bc_to_rt, [dest])) + (
           subaddress_idx - 1) <= valid_msg_index__last .
 

For path(s) from start to finish:

procedure_write_rt_word_5.
*** true .          /* trivially true VC removed by Examiner */


procedure_write_rt_word_6.
*** true .          /* trivially true VC removed by Examiner */


procedure_write_rt_word_7.
*** true .          /* trivially true VC removed by Examiner */


procedure_write_rt_word_8.
*** true .          /* trivially true VC removed by Examiner */


For checks of refinement integrity: 

procedure_write_rt_word_9.
*** true .          /* trivially true VC removed by Examiner */


procedure_write_rt_word_10.
*** true .          /* trivially true VC removed by Examiner */



*****************************************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
*****************************************************************************


CREATED 25-NOV-2009, 14:04:39  SIMPLIFIED 25-NOV-2009, 14:18:41

SPARK Simplifier Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.

procedure bit_machine.Step






@@@@@@@@@@  VC: procedure_step_1.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  ibit__phase__first <= fld_current_phase(state)
***  Proved C1:  fld_ticks(state) + 1 >= systemtypes__unsigned16__first
     using hypothesis H5.
-S-  Applied substitution rule step_rules(8).
     This was achieved by replacing all occurrences of 
          systemtypes__unsigned16__last by:
          65535.
<S>  New H3:  fld_ticks_to_complete(state) <= 65535
<S>  New H6:  fld_ticks(state) <= 65535
<S>  New C2:  fld_ticks(state) <= 65534
-S-  Applied substitution rule step_rules(7).
     This was achieved by replacing all occurrences of 
          systemtypes__unsigned16__first by:
          0.
<S>  New H2:  fld_ticks_to_complete(state) >= 0
<S>  New H5:  fld_ticks(state) >= 0
-S-  Applied substitution rule step_rules(12).
     This was achieved by replacing all occurrences of ibit__phase__first by:
          ibit__off.
<S>  New H7:  ibit__off <= fld_current_phase(state)
-S-  Applied substitution rule step_rules(13).
     This was achieved by replacing all occurrences of ibit__phase__last by:
          ibit__timeout.
<S>  New H8:  fld_current_phase(state) <= ibit__timeout
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H4 (true-hypothesis).
     +++  New H10:  integer__size >= 0
     +++  New H11:  systemtypes__unsigned16__size >= 0
     +++  New H12:  ibit__phase__size >= 0
     +++  New H13:  machine__size >= 0


@@@@@@@@@@  VC: procedure_step_2.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  ibit__phase__first <= fld_current_phase(state)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  fld_ticks(state) + 1 >= fld_ticks_to_complete(state)
-S-  Applied substitution rule step_rules(7).
     This was achieved by replacing all occurrences of 
          systemtypes__unsigned16__first by:
          0.
<S>  New H2:  fld_ticks_to_complete(state) >= 0
<S>  New H5:  fld_ticks(state) >= 0
<S>  New H10:  fld_ticks(state) >= - 1
<S>  New C1:  true
-S-  Applied substitution rule step_rules(8).
     This was achieved by replacing all occurrences of 
          systemtypes__unsigned16__last by:
          65535.
<S>  New H3:  fld_ticks_to_complete(state) <= 65535
<S>  New H6:  fld_ticks(state) <= 65535
<S>  New H11:  fld_ticks(state) <= 65534
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_step_3.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  ibit__phase__first <= fld_current_phase(state)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  fld_ticks(state) + 1 >= fld_ticks_to_complete(state)
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  fld_fail_bit(state)
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  ibit__phase__first <= ibit__fail
***  Proved C1:  ibit__phase__first <= ibit__fail
     using hypotheses H7 & H9.
-S-  Applied substitution rule step_rules(13).
     This was achieved by replacing all occurrences of ibit__phase__last by:
          ibit__timeout.
<S>  New H8:  fld_current_phase(state) <= ibit__timeout
<S>  New C2:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_step_4.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  ibit__phase__first <= fld_current_phase(state)
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  fld_ticks(state) + 1 >= fld_ticks_to_complete(state)
%%%  Simplified H15 on reading formula in, to give:
     %%%  H15:  not fld_fail_bit(state)
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  ibit__phase__first <= ibit__pass
***  Proved C1:  ibit__phase__first <= ibit__pass
     using hypotheses H7 & H9.
-S-  Applied substitution rule step_rules(13).
     This was achieved by replacing all occurrences of ibit__phase__last by:
          ibit__timeout.
<S>  New H8:  fld_current_phase(state) <= ibit__timeout
<S>  New C2:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_step_5.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  ibit__phase__first <= fld_current_phase(state)
-S-  Applied substitution rule step_rules(7).
     This was achieved by replacing all occurrences of 
          systemtypes__unsigned16__first by:
          0.
<S>  New H2:  fld_ticks_to_complete(state) >= 0
<S>  New H5:  fld_ticks(state) >= 0
<S>  New C1:  true
-S-  Applied substitution rule step_rules(8).
     This was achieved by replacing all occurrences of 
          systemtypes__unsigned16__last by:
          65535.
<S>  New H3:  fld_ticks_to_complete(state) <= 65535
<S>  New H6:  fld_ticks(state) <= 65535
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_step_6.  @@@@@@@@@@
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  ibit__phase__first <= fld_current_phase(state)
-S-  Applied substitution rule step_rules(7).
     This was achieved by replacing all occurrences of 
          systemtypes__unsigned16__first by:
          0.
<S>  New H2:  fld_ticks_to_complete(state) >= 0
<S>  New H5:  fld_ticks(state) >= 0
<S>  New C1:  true
-S-  Applied substitution rule step_rules(8).
     This was achieved by replacing all occurrences of 
          systemtypes__unsigned16__last by:
          65535.
<S>  New H3:  fld_ticks_to_complete(state) <= 65535
<S>  New H6:  fld_ticks(state) <= 65535
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_step_7.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_step_8.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_step_9.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_step_10.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_step_11.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_step_12.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


           *******************************************************
                            Listing of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:40.39

Line
   1  -- Fuel simulator
   2  --
   3  -- $Log: fuel.ads,v $
   4  -- Revision 1.1.1.1  2004/01/12 19:29:12  adi
   5  -- Added from tarfile
   6  --
   7  --
   8  -- Revision 1.2  2003/08/17 11:57:14  adi
   9  -- Derived from ins
  10  --
  11  -- Revision 1.1  2003/08/12 18:30:03  adi
  12  -- Initial revision
  13  --
  14  --
  15  with MeasureTypes,Clock;
  16  use type MeasureTypes.Kilo;
  17  use type Measuretypes.Gram_Per_Sec;
  18  use type Clock.Millisecond;
  19  --# inherit MeasureTypes, Bus, Rt1553,
  20  --#         Clock, Clock_Utils, SystemTypes,
  21  --#         IBIT, Bit_Machine;
  22  package Fuel
  23    --# own State;
  24    --# initializes State;
  25  is
  26     -- Type renamings for brevity
  27     subtype Meter is Measuretypes.Meter;
  28     subtype Meter_Per_Sec is MeasureTypes.Meter_Per_Sec;
  29  
  30     -- Cycle the reading of data from the bus
  31     -- and writing of data to the bus
  32     procedure Cycle;
  33     --# global in out State;
  34     --#        in out Clock.Time;
  35     --#        in Bus.Outputs;
  36     --#        in out Bus.Inputs;
  37     --# derives State from *, Bus.Outputs &
  38     --#        Bus.Inputs from *, Clock.Time, State &
  39     --#        Clock.Time from *;
  40  
  41     -- Set the current fuel level
  42     procedure Set_Level(level : in Measuretypes.Kilo);
  43     --# global in out State, Clock.Time;
  44     --# derives Clock.Time from * &
  45     --#         State from *, Clock.Time, level;
  46  
  47     -- Set the current burn rate
  48     procedure Set_Rate(Rate : in Measuretypes.Gram_Per_Sec);
  49     --# global in out State, Clock.Time;
  50     --# derives Clock.Time from * &
  51     --#         State from *, Clock.Time, rate;
  52  
  53     -- Read the current level
  54     procedure Read_Level(level : out Measuretypes.Kilo);
  55     --# global in     State;
  56     --#        in out Clock.Time;
  57     --# derives Clock.Time from * &
  58     --#         level from State, Clock.Time;
  59  
  60     -- Cause the next BIT to fail
  61     procedure Fail_Next_Bit;
  62     --# global in out State;
  63     --# derives State from *;
  64  
  65     procedure Init;
  66     --# global out State;
  67     --#        in out Bus.Inputs;
  68     --# derives State from &
  69     --#         Bus.Inputs from *;
  70  
  71     -- Test stub
  72     procedure Command;
  73     --# derives;
  74  end Fuel;
No summarized warnings



--End of file--------------------------------------------------

           /*********************************************************/
                           /*Proof Rule Declarations*/
 /*SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331*/
      /*Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 25-NOV-2009 14:04:38.35*/

                          /*function bc1553.Is_Valid*/


rule_family is_valid_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

is_valid_rules(1): bus__lru_index__first <= element(lru_names, [I]) may_be_deduced_from [barometer <= I, I <= warhead].
is_valid_rules(2): element(lru_names, [I]) <= bus__lru_index__last may_be_deduced_from [barometer <= I, I <= warhead].
is_valid_rules(3): bus__all_msg_index__size >= 0 may_be_deduced.
is_valid_rules(4): bus__all_msg_index__first may_be_replaced_by 0.
is_valid_rules(5): bus__all_msg_index__last may_be_replaced_by 63.
is_valid_rules(6): bus__all_msg_index__base__first may_be_replaced_by -32768.
is_valid_rules(7): bus__all_msg_index__base__last may_be_replaced_by 32767.
is_valid_rules(8): bus__lru_subaddress_index__size >= 0 may_be_deduced.
is_valid_rules(9): bus__lru_subaddress_index__first may_be_replaced_by 1.
is_valid_rules(10): bus__lru_subaddress_index__last may_be_replaced_by 8.
is_valid_rules(11): bus__lru_subaddress_index__base__first may_be_replaced_by -32768.
is_valid_rules(12): bus__lru_subaddress_index__base__last may_be_replaced_by 32767.
is_valid_rules(13): bus__lru_index__size >= 0 may_be_deduced.
is_valid_rules(14): bus__lru_index__first may_be_replaced_by 1.
is_valid_rules(15): bus__lru_index__last may_be_replaced_by 12.
is_valid_rules(16): bus__lru_index__base__first <= bus__lru_index__base__last may_be_deduced.
is_valid_rules(17): bus__lru_index__base__first <= bus__lru_index__first may_be_deduced.
is_valid_rules(18): bus__lru_index__base__last >= bus__lru_index__last may_be_deduced.
is_valid_rules(19): lru_name__size >= 0 may_be_deduced.
is_valid_rules(20): lru_name__first may_be_replaced_by barometer.
is_valid_rules(21): lru_name__last may_be_replaced_by warhead.
is_valid_rules(22): lru_name__base__first may_be_replaced_by barometer.
is_valid_rules(23): lru_name__base__last may_be_replaced_by warhead.
is_valid_rules(24): lru_name__pos(lru_name__first) may_be_replaced_by 0.
is_valid_rules(25): lru_name__pos(barometer) may_be_replaced_by 0.
is_valid_rules(26): lru_name__val(0) may_be_replaced_by barometer.
is_valid_rules(27): lru_name__pos(asi) may_be_replaced_by 1.
is_valid_rules(28): lru_name__val(1) may_be_replaced_by asi.
is_valid_rules(29): lru_name__pos(ins) may_be_replaced_by 2.
is_valid_rules(30): lru_name__val(2) may_be_replaced_by ins.
is_valid_rules(31): lru_name__pos(compass) may_be_replaced_by 3.
is_valid_rules(32): lru_name__val(3) may_be_replaced_by compass.
is_valid_rules(33): lru_name__pos(fuel) may_be_replaced_by 4.
is_valid_rules(34): lru_name__val(4) may_be_replaced_by fuel.
is_valid_rules(35): lru_name__pos(fuze) may_be_replaced_by 5.
is_valid_rules(36): lru_name__val(5) may_be_replaced_by fuze.
is_valid_rules(37): lru_name__pos(radar) may_be_replaced_by 6.
is_valid_rules(38): lru_name__val(6) may_be_replaced_by radar.
is_valid_rules(39): lru_name__pos(infrared) may_be_replaced_by 7.
is_valid_rules(40): lru_name__val(7) may_be_replaced_by infrared.
is_valid_rules(41): lru_name__pos(fins) may_be_replaced_by 8.
is_valid_rules(42): lru_name__val(8) may_be_replaced_by fins.
is_valid_rules(43): lru_name__pos(motor) may_be_replaced_by 9.
is_valid_rules(44): lru_name__val(9) may_be_replaced_by motor.
is_valid_rules(45): lru_name__pos(destruct) may_be_replaced_by 10.
is_valid_rules(46): lru_name__val(10) may_be_replaced_by destruct.
is_valid_rules(47): lru_name__pos(warhead) may_be_replaced_by 11.
is_valid_rules(48): lru_name__val(11) may_be_replaced_by warhead.
is_valid_rules(49): lru_name__pos(lru_name__last) may_be_replaced_by 11.
is_valid_rules(50): lru_name__pos(succ(X)) may_be_replaced_by 
     lru_name__pos(X) + 1
     if [X <=warhead, X <> warhead].
is_valid_rules(51): lru_name__pos(pred(X)) may_be_replaced_by 
     lru_name__pos(X) - 1
     if [X >=barometer, X <> barometer].
is_valid_rules(52): lru_name__pos(X) >= 0 may_be_deduced_from
     [barometer <= X, X <= warhead].
is_valid_rules(53): lru_name__pos(X) <= 11 may_be_deduced_from
     [barometer <= X, X <= warhead].
is_valid_rules(54): lru_name__val(X) >= barometer may_be_deduced_from
     [0 <= X, X <= 11].
is_valid_rules(55): lru_name__val(X) <= warhead may_be_deduced_from
     [0 <= X, X <= 11].
is_valid_rules(56): succ(lru_name__val(X)) may_be_replaced_by 
     lru_name__val(X+1)
     if [0 <= X, X < 11].
is_valid_rules(57): pred(lru_name__val(X)) may_be_replaced_by 
     lru_name__val(X-1)
     if [0 < X, X <= 11].
is_valid_rules(58): lru_name__pos(lru_name__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 11].
is_valid_rules(59): lru_name__val(lru_name__pos(X)) may_be_replaced_by X
     if [barometer <= X, X <= warhead].
is_valid_rules(60): lru_name__pos(X) <= lru_name__pos(Y) & X <= Y are_interchangeable 
     if [barometer <= X, X <= warhead, barometer <= Y, Y <= 
     warhead].
is_valid_rules(61): lru_name__val(X) <= lru_name__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 11, 0 <= Y, Y <= 11].

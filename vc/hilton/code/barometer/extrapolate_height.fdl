           {*******************************************************}
                               {FDL Declarations}
 {SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331}
      {Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.}
           {*******************************************************}


                        {DATE : 25-NOV-2009 14:04:39.09}

                   {procedure barometer.Extrapolate_Height}


title procedure extrapolate_height;

  function round__(real) : integer;
  type measuretypes__meter = integer;
  type measuretypes__meter_per_sec = integer;
  type clock__millisecond = integer;
  const pos_meter__base__last : integer = pending; 
  const pos_meter__base__first : integer = pending; 
  const meter_per_sec__base__last : integer = pending; 
  const meter_per_sec__base__first : integer = pending; 
  const meter__base__last : integer = pending; 
  const meter__base__first : integer = pending; 
  const clock__millisecond__base__last : integer = pending; 
  const clock__millisecond__base__first : integer = pending; 
  const measuretypes__meter_per_sec__base__last : integer = pending; 
  const measuretypes__meter_per_sec__base__first : integer = pending; 
  const measuretypes__meter__base__last : integer = pending; 
  const measuretypes__meter__base__first : integer = pending; 
  const pos_meter__size : integer = pending; 
  const pos_meter__last : integer = pending; 
  const pos_meter__first : integer = pending; 
  const meter_per_sec__size : integer = pending; 
  const meter_per_sec__last : integer = pending; 
  const meter_per_sec__first : integer = pending; 
  const meter__size : integer = pending; 
  const meter__last : integer = pending; 
  const meter__first : integer = pending; 
  const clock__millisecond__size : integer = pending; 
  const clock__millisecond__last : integer = pending; 
  const clock__millisecond__first : integer = pending; 
  const measuretypes__meter_per_sec__size : integer = pending; 
  const measuretypes__meter_per_sec__last : integer = pending; 
  const measuretypes__meter_per_sec__first : integer = pending; 
  const measuretypes__meter__size : integer = pending; 
  const measuretypes__meter__last : integer = pending; 
  const measuretypes__meter__first : integer = pending; 
  var last_altitude : integer;
  var last_time : integer;
  var last_velocity : integer;
  var time_now : integer;
  var time_valid : boolean;
  function clock_utils__delta_time(integer, integer) : integer;
  var time_valid__1 : boolean;
  var time_now__1 : integer;

end;

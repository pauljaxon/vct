           /*********************************************************/
                           /*Proof Rule Declarations*/
 /*SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331*/
      /*Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 25-NOV-2009 14:04:41.27*/

                           /*procedure Radar.Sweep*/


rule_family sweep_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

sweep_rules(1): state_types__word__first <= element(state_types__radar_values, [I]) may_be_deduced_from [state_types__rad_inactive <= I, I <= state_types__sweep].
sweep_rules(2): element(state_types__radar_values, [I]) <= 
     state_types__word__last may_be_deduced_from [state_types__rad_inactive <= I, I <= state_types__sweep].
sweep_rules(3): bus_id may_be_replaced_by rt1553__radar.
sweep_rules(4): integer__size >= 0 may_be_deduced.
sweep_rules(5): integer__first may_be_replaced_by -2147483648.
sweep_rules(6): integer__last may_be_replaced_by 2147483647.
sweep_rules(7): integer__base__first may_be_replaced_by -2147483648.
sweep_rules(8): integer__base__last may_be_replaced_by 2147483647.
sweep_rules(9): state_types__word__size >= 0 may_be_deduced.
sweep_rules(10): state_types__word__first may_be_replaced_by 0.
sweep_rules(11): state_types__word__last may_be_replaced_by 65535.
sweep_rules(12): state_types__word__base__first may_be_replaced_by -2147483648.
sweep_rules(13): state_types__word__base__last may_be_replaced_by 2147483647.
sweep_rules(14): state_types__radar__size >= 0 may_be_deduced.
sweep_rules(15): state_types__radar__first may_be_replaced_by state_types__rad_inactive.
sweep_rules(16): state_types__radar__last may_be_replaced_by state_types__sweep.
sweep_rules(17): state_types__radar__base__first may_be_replaced_by state_types__rad_inactive.
sweep_rules(18): state_types__radar__base__last may_be_replaced_by state_types__sweep.
sweep_rules(19): state_types__radar__pos(state_types__radar__first) may_be_replaced_by 0.
sweep_rules(20): state_types__radar__pos(
     state_types__rad_inactive) may_be_replaced_by 0.
sweep_rules(21): state_types__radar__val(0) may_be_replaced_by 
     state_types__rad_inactive.
sweep_rules(22): state_types__radar__pos(state_types__ping) may_be_replaced_by 1.
sweep_rules(23): state_types__radar__val(1) may_be_replaced_by 
     state_types__ping.
sweep_rules(24): state_types__radar__pos(state_types__sweep) may_be_replaced_by 2.
sweep_rules(25): state_types__radar__val(2) may_be_replaced_by 
     state_types__sweep.
sweep_rules(26): state_types__radar__pos(state_types__radar__last) may_be_replaced_by 2.
sweep_rules(27): state_types__radar__pos(succ(X)) may_be_replaced_by 
     state_types__radar__pos(X) + 1
     if [X <=state_types__sweep, X <> state_types__sweep].
sweep_rules(28): state_types__radar__pos(pred(X)) may_be_replaced_by 
     state_types__radar__pos(X) - 1
     if [X >=state_types__rad_inactive, X <> 
     state_types__rad_inactive].
sweep_rules(29): state_types__radar__pos(X) >= 0 may_be_deduced_from
     [state_types__rad_inactive <= X, X <= state_types__sweep].
sweep_rules(30): state_types__radar__pos(X) <= 2 may_be_deduced_from
     [state_types__rad_inactive <= X, X <= state_types__sweep].
sweep_rules(31): state_types__radar__val(X) >= 
     state_types__rad_inactive may_be_deduced_from
     [0 <= X, X <= 2].
sweep_rules(32): state_types__radar__val(X) <= state_types__sweep may_be_deduced_from
     [0 <= X, X <= 2].
sweep_rules(33): succ(state_types__radar__val(X)) may_be_replaced_by 
     state_types__radar__val(X+1)
     if [0 <= X, X < 2].
sweep_rules(34): pred(state_types__radar__val(X)) may_be_replaced_by 
     state_types__radar__val(X-1)
     if [0 < X, X <= 2].
sweep_rules(35): state_types__radar__pos(state_types__radar__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 2].
sweep_rules(36): state_types__radar__val(state_types__radar__pos(X)) may_be_replaced_by X
     if [state_types__rad_inactive <= X, X <= state_types__sweep].
sweep_rules(37): state_types__radar__pos(X) <= state_types__radar__pos(Y) & X <= Y are_interchangeable 
     if [state_types__rad_inactive <= X, X <= state_types__sweep, 
     state_types__rad_inactive <= Y, Y <= state_types__sweep].
sweep_rules(38): state_types__radar__val(X) <= state_types__radar__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 2, 0 <= Y, Y <= 2].
sweep_rules(39): measuretypes__meter__size >= 0 may_be_deduced.
sweep_rules(40): measuretypes__meter__first may_be_replaced_by -200000.
sweep_rules(41): measuretypes__meter__last may_be_replaced_by 200000.
sweep_rules(42): measuretypes__meter__base__first may_be_replaced_by -2147483648.
sweep_rules(43): measuretypes__meter__base__last may_be_replaced_by 2147483647.
sweep_rules(44): measuretypes__meter_per_sec__size >= 0 may_be_deduced.
sweep_rules(45): measuretypes__meter_per_sec__first may_be_replaced_by -5000.
sweep_rules(46): measuretypes__meter_per_sec__last may_be_replaced_by 5000.
sweep_rules(47): measuretypes__meter_per_sec__base__first may_be_replaced_by -2147483648.
sweep_rules(48): measuretypes__meter_per_sec__base__last may_be_replaced_by 2147483647.
sweep_rules(49): measuretypes__bit_range__size >= 0 may_be_deduced.
sweep_rules(50): measuretypes__bit_range__first may_be_replaced_by 0.
sweep_rules(51): measuretypes__bit_range__last may_be_replaced_by 255.
sweep_rules(52): measuretypes__bit_range__base__first <= 
     measuretypes__bit_range__base__last may_be_deduced.
sweep_rules(53): measuretypes__bit_range__base__first <= 
     measuretypes__bit_range__first may_be_deduced.
sweep_rules(54): measuretypes__bit_range__base__last >= 
     measuretypes__bit_range__last may_be_deduced.
sweep_rules(55): measuretypes__bit4_range__size >= 0 may_be_deduced.
sweep_rules(56): measuretypes__bit4_range__first may_be_replaced_by 0.
sweep_rules(57): measuretypes__bit4_range__last may_be_replaced_by 3.
sweep_rules(58): measuretypes__bit4_range__base__first <= 
     measuretypes__bit4_range__base__last may_be_deduced.
sweep_rules(59): measuretypes__bit4_range__base__first <= 
     measuretypes__bit4_range__first may_be_deduced.
sweep_rules(60): measuretypes__bit4_range__base__last >= 
     measuretypes__bit4_range__last may_be_deduced.
sweep_rules(61): bus__word_index__size >= 0 may_be_deduced.
sweep_rules(62): bus__word_index__first may_be_replaced_by 1.
sweep_rules(63): bus__word_index__last may_be_replaced_by 31.
sweep_rules(64): bus__word_index__base__first <= bus__word_index__base__last may_be_deduced.
sweep_rules(65): bus__word_index__base__first <= bus__word_index__first may_be_deduced.
sweep_rules(66): bus__word_index__base__last >= bus__word_index__last may_be_deduced.
sweep_rules(67): bus__word__size >= 0 may_be_deduced.
sweep_rules(68): bus__word__first may_be_replaced_by 0.
sweep_rules(69): bus__word__last may_be_replaced_by 65535.
sweep_rules(70): bus__word__base__first may_be_replaced_by -2147483648.
sweep_rules(71): bus__word__base__last may_be_replaced_by 2147483647.
sweep_rules(72): bus__all_msg_index__size >= 0 may_be_deduced.
sweep_rules(73): bus__all_msg_index__first may_be_replaced_by 0.
sweep_rules(74): bus__all_msg_index__last may_be_replaced_by 63.
sweep_rules(75): bus__all_msg_index__base__first may_be_replaced_by -32768.
sweep_rules(76): bus__all_msg_index__base__last may_be_replaced_by 32767.
sweep_rules(77): bus__lru_subaddress_index__size >= 0 may_be_deduced.
sweep_rules(78): bus__lru_subaddress_index__first may_be_replaced_by 1.
sweep_rules(79): bus__lru_subaddress_index__last may_be_replaced_by 8.
sweep_rules(80): bus__lru_subaddress_index__base__first may_be_replaced_by -32768.
sweep_rules(81): bus__lru_subaddress_index__base__last may_be_replaced_by 32767.
sweep_rules(82): rt1553__lru_name__size >= 0 may_be_deduced.
sweep_rules(83): rt1553__lru_name__first may_be_replaced_by rt1553__barometer.
sweep_rules(84): rt1553__lru_name__last may_be_replaced_by rt1553__warhead.
sweep_rules(85): rt1553__lru_name__base__first may_be_replaced_by rt1553__barometer.
sweep_rules(86): rt1553__lru_name__base__last may_be_replaced_by rt1553__warhead.
sweep_rules(87): rt1553__lru_name__pos(rt1553__lru_name__first) may_be_replaced_by 0.
sweep_rules(88): rt1553__lru_name__pos(rt1553__barometer) may_be_replaced_by 0.
sweep_rules(89): rt1553__lru_name__val(0) may_be_replaced_by 
     rt1553__barometer.
sweep_rules(90): rt1553__lru_name__pos(rt1553__asi) may_be_replaced_by 1.
sweep_rules(91): rt1553__lru_name__val(1) may_be_replaced_by 
     rt1553__asi.
sweep_rules(92): rt1553__lru_name__pos(rt1553__ins) may_be_replaced_by 2.
sweep_rules(93): rt1553__lru_name__val(2) may_be_replaced_by 
     rt1553__ins.
sweep_rules(94): rt1553__lru_name__pos(rt1553__compass) may_be_replaced_by 3.
sweep_rules(95): rt1553__lru_name__val(3) may_be_replaced_by 
     rt1553__compass.
sweep_rules(96): rt1553__lru_name__pos(rt1553__fuel) may_be_replaced_by 4.
sweep_rules(97): rt1553__lru_name__val(4) may_be_replaced_by 
     rt1553__fuel.
sweep_rules(98): rt1553__lru_name__pos(rt1553__fuze) may_be_replaced_by 5.
sweep_rules(99): rt1553__lru_name__val(5) may_be_replaced_by 
     rt1553__fuze.
sweep_rules(100): rt1553__lru_name__pos(rt1553__radar) may_be_replaced_by 6.
sweep_rules(101): rt1553__lru_name__val(6) may_be_replaced_by 
     rt1553__radar.
sweep_rules(102): rt1553__lru_name__pos(rt1553__infrared) may_be_replaced_by 7.
sweep_rules(103): rt1553__lru_name__val(7) may_be_replaced_by 
     rt1553__infrared.
sweep_rules(104): rt1553__lru_name__pos(rt1553__fins) may_be_replaced_by 8.
sweep_rules(105): rt1553__lru_name__val(8) may_be_replaced_by 
     rt1553__fins.
sweep_rules(106): rt1553__lru_name__pos(rt1553__motor) may_be_replaced_by 9.
sweep_rules(107): rt1553__lru_name__val(9) may_be_replaced_by 
     rt1553__motor.
sweep_rules(108): rt1553__lru_name__pos(rt1553__destruct) may_be_replaced_by 10.
sweep_rules(109): rt1553__lru_name__val(10) may_be_replaced_by 
     rt1553__destruct.
sweep_rules(110): rt1553__lru_name__pos(rt1553__warhead) may_be_replaced_by 11.
sweep_rules(111): rt1553__lru_name__val(11) may_be_replaced_by 
     rt1553__warhead.
sweep_rules(112): rt1553__lru_name__pos(rt1553__lru_name__last) may_be_replaced_by 11.
sweep_rules(113): rt1553__lru_name__pos(succ(X)) may_be_replaced_by 
     rt1553__lru_name__pos(X) + 1
     if [X <=rt1553__warhead, X <> rt1553__warhead].
sweep_rules(114): rt1553__lru_name__pos(pred(X)) may_be_replaced_by 
     rt1553__lru_name__pos(X) - 1
     if [X >=rt1553__barometer, X <> rt1553__barometer].
sweep_rules(115): rt1553__lru_name__pos(X) >= 0 may_be_deduced_from
     [rt1553__barometer <= X, X <= rt1553__warhead].
sweep_rules(116): rt1553__lru_name__pos(X) <= 11 may_be_deduced_from
     [rt1553__barometer <= X, X <= rt1553__warhead].
sweep_rules(117): rt1553__lru_name__val(X) >= rt1553__barometer may_be_deduced_from
     [0 <= X, X <= 11].
sweep_rules(118): rt1553__lru_name__val(X) <= rt1553__warhead may_be_deduced_from
     [0 <= X, X <= 11].
sweep_rules(119): succ(rt1553__lru_name__val(X)) may_be_replaced_by 
     rt1553__lru_name__val(X+1)
     if [0 <= X, X < 11].
sweep_rules(120): pred(rt1553__lru_name__val(X)) may_be_replaced_by 
     rt1553__lru_name__val(X-1)
     if [0 < X, X <= 11].
sweep_rules(121): rt1553__lru_name__pos(rt1553__lru_name__val(X)) may_be_replaced_by X
     if [0 <= X, X <= 11].
sweep_rules(122): rt1553__lru_name__val(rt1553__lru_name__pos(X)) may_be_replaced_by X
     if [rt1553__barometer <= X, X <= rt1553__warhead].
sweep_rules(123): rt1553__lru_name__pos(X) <= rt1553__lru_name__pos(Y) & X <= Y are_interchangeable 
     if [rt1553__barometer <= X, X <= rt1553__warhead, 
     rt1553__barometer <= Y, Y <= rt1553__warhead].
sweep_rules(124): rt1553__lru_name__val(X) <= rt1553__lru_name__val(Y) & X <= Y are_interchangeable 
     if [0 <= X, X <= 11, 0 <= Y, Y <= 11].
sweep_rules(125): radar_cfg__sector_range__size >= 0 may_be_deduced.
sweep_rules(126): radar_cfg__sector_range__first may_be_replaced_by -20.
sweep_rules(127): radar_cfg__sector_range__last may_be_replaced_by 20.
sweep_rules(128): radar_cfg__sector_range__base__first <= 
     radar_cfg__sector_range__base__last may_be_deduced.
sweep_rules(129): radar_cfg__sector_range__base__first <= 
     radar_cfg__sector_range__first may_be_deduced.
sweep_rules(130): radar_cfg__sector_range__base__last >= 
     radar_cfg__sector_range__last may_be_deduced.
sweep_rules(131): meter__size >= 0 may_be_deduced.
sweep_rules(132): meter__first may_be_replaced_by -200000.
sweep_rules(133): meter__last may_be_replaced_by 200000.
sweep_rules(134): meter__base__first may_be_replaced_by -2147483648.
sweep_rules(135): meter__base__last may_be_replaced_by 2147483647.
sweep_rules(136): meter_per_sec__size >= 0 may_be_deduced.
sweep_rules(137): meter_per_sec__first may_be_replaced_by -5000.
sweep_rules(138): meter_per_sec__last may_be_replaced_by 5000.
sweep_rules(139): meter_per_sec__base__first may_be_replaced_by -2147483648.
sweep_rules(140): meter_per_sec__base__last may_be_replaced_by 2147483647.
sweep_rules(141): sector__size >= 0 may_be_deduced.
sweep_rules(142): sector__first may_be_replaced_by -20.
sweep_rules(143): sector__last may_be_replaced_by 20.
sweep_rules(144): sector__base__first <= sector__base__last may_be_deduced.
sweep_rules(145): sector__base__first <= sector__first may_be_deduced.
sweep_rules(146): sector__base__last >= sector__last may_be_deduced.
sweep_rules(147): ping__size >= 0 may_be_deduced.
sweep_rules(148): A = B may_be_deduced_from
     [goal(checktype(A,ping)),
      goal(checktype(B,ping)),
      fld_distance(A) = fld_distance(B),
      fld_rel_vel(A) = fld_rel_vel(B)].

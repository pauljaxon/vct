           *******************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:41.03

                       procedure Radar.Read_Location




For path(s) from start to run-time check associated with statement of line 68:

procedure_read_location_1.
H1:    true .
H2:    sx >= sector__first .
H3:    sx <= sector__last .
H4:    sy >= sector__first .
H5:    sy <= sector__last .
H6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H7:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
        ->
C1:    fld_distance(element(element(detect_points, [sx]), [
           sy])) >= meter__first .
C2:    fld_distance(element(element(detect_points, [sx]), [
           sy])) <= meter__last .
C3:    sy >= sector__first .
C4:    sy <= sector__last .
C5:    sx >= sector__first .
C6:    sx <= sector__last .
 

For path(s) from start to run-time check associated with statement of line 69:

procedure_read_location_2.
H1:    true .
H2:    sx >= sector__first .
H3:    sx <= sector__last .
H4:    sy >= sector__first .
H5:    sy <= sector__last .
H6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H7:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H8:    fld_distance(element(element(detect_points, [sx]), [
           sy])) >= meter__first .
H9:    fld_distance(element(element(detect_points, [sx]), [
           sy])) <= meter__last .
H10:   sy >= sector__first .
H11:   sy <= sector__last .
H12:   sx >= sector__first .
H13:   sx <= sector__last .
        ->
C1:    fld_rel_vel(element(element(detect_points, [sx]), [
           sy])) >= meter_per_sec__first .
C2:    fld_rel_vel(element(element(detect_points, [sx]), [
           sy])) <= meter_per_sec__last .
C3:    sy >= sector__first .
C4:    sy <= sector__last .
C5:    sx >= sector__first .
C6:    sx <= sector__last .
 

For path(s) from start to finish:

procedure_read_location_3.
*** true .          /* trivially true VC removed by Examiner */


For checks of refinement integrity: 

procedure_read_location_4.
*** true .          /* trivially true VC removed by Examiner */


procedure_read_location_5.
*** true .          /* trivially true VC removed by Examiner */



           *******************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:41.22

                     procedure Radar.Sweep.Derive_Grid




For path(s) from start to run-time check associated with statement of line 145:

procedure_derive_grid_1.
H1:    true .
H2:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H4:    x_start >= sector__first .
H5:    x_start <= sector__last .
H6:    x_end >= sector__first .
H7:    x_end <= sector__last .
H8:    y_start >= sector__first .
H9:    y_start <= sector__last .
H10:   y_end >= sector__first .
H11:   y_end <= sector__last .
        ->
C1:    x_end - x_start >= integer32__first .
C2:    x_end - x_start <= integer32__last .
C3:    x_start >= integer32__first .
C4:    x_start <= integer32__last .
C5:    x_end >= integer32__first .
C6:    x_end <= integer32__last .
 

For path(s) from start to run-time check associated with statement of line 146:

procedure_derive_grid_2.
H1:    true .
H2:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H4:    x_start >= sector__first .
H5:    x_start <= sector__last .
H6:    x_end >= sector__first .
H7:    x_end <= sector__last .
H8:    y_start >= sector__first .
H9:    y_start <= sector__last .
H10:   y_end >= sector__first .
H11:   y_end <= sector__last .
H12:   x_end - x_start >= integer32__first .
H13:   x_end - x_start <= integer32__last .
H14:   x_start >= integer32__first .
H15:   x_start <= integer32__last .
H16:   x_end >= integer32__first .
H17:   x_end <= integer32__last .
        ->
C1:    y_end - y_start >= integer32__first .
C2:    y_end - y_start <= integer32__last .
C3:    y_start >= integer32__first .
C4:    y_start <= integer32__last .
C5:    y_end >= integer32__first .
C6:    y_end <= integer32__last .
 

For path(s) from start to run-time check associated with statement of line 147:

procedure_derive_grid_3.
H1:    true .
H2:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H4:    x_start >= sector__first .
H5:    x_start <= sector__last .
H6:    x_end >= sector__first .
H7:    x_end <= sector__last .
H8:    y_start >= sector__first .
H9:    y_start <= sector__last .
H10:   y_end >= sector__first .
H11:   y_end <= sector__last .
H12:   x_end - x_start >= integer32__first .
H13:   x_end - x_start <= integer32__last .
H14:   x_start >= integer32__first .
H15:   x_start <= integer32__last .
H16:   x_end >= integer32__first .
H17:   x_end <= integer32__last .
H18:   y_end - y_start >= integer32__first .
H19:   y_end - y_start <= integer32__last .
H20:   y_start >= integer32__first .
H21:   y_start <= integer32__last .
H22:   y_end >= integer32__first .
H23:   y_end <= integer32__last .
        ->
C1:    x_end >= radar_cfg__sector_range__first .
C2:    x_end <= radar_cfg__sector_range__last .
C3:    x_start >= radar_cfg__sector_range__first .
C4:    x_start <= radar_cfg__sector_range__last .
 

For path(s) from start to run-time check associated with statement of line 147:

procedure_derive_grid_4.
H1:    true .
H2:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H4:    x_start >= sector__first .
H5:    x_start <= sector__last .
H6:    x_end >= sector__first .
H7:    x_end <= sector__last .
H8:    y_start >= sector__first .
H9:    y_start <= sector__last .
H10:   y_end >= sector__first .
H11:   y_end <= sector__last .
H12:   x_end - x_start >= integer32__first .
H13:   x_end - x_start <= integer32__last .
H14:   x_start >= integer32__first .
H15:   x_start <= integer32__last .
H16:   x_end >= integer32__first .
H17:   x_end <= integer32__last .
H18:   y_end - y_start >= integer32__first .
H19:   y_end - y_start <= integer32__last .
H20:   y_start >= integer32__first .
H21:   y_start <= integer32__last .
H22:   y_end >= integer32__first .
H23:   y_end <= integer32__last .
H24:   x_end >= radar_cfg__sector_range__first .
H25:   x_end <= radar_cfg__sector_range__last .
H26:   x_start >= radar_cfg__sector_range__first .
H27:   x_start <= radar_cfg__sector_range__last .
        ->
C1:    (x_start <= x_end) -> ((x_end >= sector__first) and (
           x_end <= sector__last)) .
C2:    (x_start <= x_end) -> ((x_start >= sector__first) and (
           x_start <= sector__last)) .
 

For path(s) from start to assertion of line 148:

procedure_derive_grid_5.
H1:    true .
H2:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H4:    x_start >= sector__first .
H5:    x_start <= sector__last .
H6:    x_end >= sector__first .
H7:    x_end <= sector__last .
H8:    y_start >= sector__first .
H9:    y_start <= sector__last .
H10:   y_end >= sector__first .
H11:   y_end <= sector__last .
H12:   x_end - x_start >= integer32__first .
H13:   x_end - x_start <= integer32__last .
H14:   x_start >= integer32__first .
H15:   x_start <= integer32__last .
H16:   x_end >= integer32__first .
H17:   x_end <= integer32__last .
H18:   y_end - y_start >= integer32__first .
H19:   y_end - y_start <= integer32__last .
H20:   y_start >= integer32__first .
H21:   y_start <= integer32__last .
H22:   y_end >= integer32__first .
H23:   y_end <= integer32__last .
H24:   x_end >= radar_cfg__sector_range__first .
H25:   x_end <= radar_cfg__sector_range__last .
H26:   x_start >= radar_cfg__sector_range__first .
H27:   x_start <= radar_cfg__sector_range__last .
H28:   (x_start <= x_end) -> ((x_end >= sector__first) and (
           x_end <= sector__last)) .
H29:   (x_start <= x_end) -> ((x_start >= sector__first) and (
           x_start <= sector__last)) .
H30:   x_start <= x_end .
        ->
C1:    x_start >= x_start .
C2:    x_start <= x_end .
C3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
C4:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
C5:    x_start >= sector__first .
C6:    x_start <= sector__last .
C7:    x_end >= sector__first .
C8:    x_end <= sector__last .
C9:    y_start >= sector__first .
C10:   y_start <= sector__last .
C11:   y_end >= sector__first .
C12:   y_end <= sector__last .
C13:   x_start >= sector__first .
C14:   x_start <= sector__last .
C15:   x_start >= x_start .
C16:   x_start <= x_end .
 

For path(s) from assertion of line 148 to assertion of line 148:

procedure_derive_grid_6.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H4:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H5:    x_start >= sector__first .
H6:    x_start <= sector__last .
H7:    x_end >= sector__first .
H8:    x_end <= sector__last .
H9:    y_start >= sector__first .
H10:   y_start <= sector__last .
H11:   y_end >= sector__first .
H12:   y_end <= sector__last .
H13:   loop__1__x >= sector__first .
H14:   loop__1__x <= sector__last .
H15:   loop__1__x >= x_start .
H16:   loop__1__x <= x_end .
H17:   loop__1__x - x_start >= integer32__first .
H18:   loop__1__x - x_start <= integer32__last .
H19:   x_start >= integer32__first .
H20:   x_start <= integer32__last .
H21:   loop__1__x >= integer32__first .
H22:   loop__1__x <= integer32__last .
H23:   dx >= integer32__first .
H24:   dx <= integer32__last .
H25:   loop__1__x - x_start >= integer32__first .
H26:   loop__1__x - x_start <= integer32__last .
H27:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           measuretypes__bit4_range__first .
H28:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           measuretypes__bit4_range__last .
H29:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           measuretypes__bit4_range__first .
H30:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           measuretypes__bit4_range__last .
H31:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           long_integer__base__first .
H32:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           long_integer__base__last .
H33:   dx + 1 <> 0 .
H34:   dx + 1 >= long_integer__base__first .
H35:   dx + 1 <= long_integer__base__last .
H36:   4 * (loop__1__x - x_start) >= long_integer__base__first .
H37:   4 * (loop__1__x - x_start) <= long_integer__base__last .
H38:   y_end >= radar_cfg__sector_range__first .
H39:   y_end <= radar_cfg__sector_range__last .
H40:   y_start >= radar_cfg__sector_range__first .
H41:   y_start <= radar_cfg__sector_range__last .
H42:   (y_start <= y_end) -> ((y_end >= sector__first) and (
           y_end <= sector__last)) .
H43:   (y_start <= y_end) -> ((y_start >= sector__first) and (
           y_start <= sector__last)) .
H44:   not (y_start <= y_end) .
H45:   not (loop__1__x = x_end) .
        ->
C1:    loop__1__x + 1 >= x_start .
C2:    loop__1__x + 1 <= x_end .
C3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
C4:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
C5:    x_start >= sector__first .
C6:    x_start <= sector__last .
C7:    x_end >= sector__first .
C8:    x_end <= sector__last .
C9:    y_start >= sector__first .
C10:   y_start <= sector__last .
C11:   y_end >= sector__first .
C12:   y_end <= sector__last .
C13:   loop__1__x + 1 >= sector__first .
C14:   loop__1__x + 1 <= sector__last .
C15:   loop__1__x + 1 >= x_start .
C16:   loop__1__x + 1 <= x_end .
 

For path(s) from assertion of line 152 to assertion of line 148:

procedure_derive_grid_7.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    loop__2__y >= y_start .
H4:    loop__2__y <= y_end .
H5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H7:    x_start >= sector__first .
H8:    x_start <= sector__last .
H9:    x_end >= sector__first .
H10:   x_end <= sector__last .
H11:   y_start >= sector__first .
H12:   y_start <= sector__last .
H13:   y_end >= sector__first .
H14:   y_end <= sector__last .
H15:   loop__2__y >= sector__first .
H16:   loop__2__y <= sector__last .
H17:   loop__2__y >= y_start .
H18:   loop__2__y <= y_end .
H19:   loop__1__x >= sector__first .
H20:   loop__1__x <= sector__last .
H21:   loop__1__x >= x_start .
H22:   loop__1__x <= x_end .
H23:   loop__2__y - y_start >= integer32__first .
H24:   loop__2__y - y_start <= integer32__last .
H25:   y_start >= integer32__first .
H26:   y_start <= integer32__last .
H27:   loop__2__y >= integer32__first .
H28:   loop__2__y <= integer32__last .
H29:   dy >= integer32__first .
H30:   dy <= integer32__last .
H31:   loop__2__y - y_start >= integer32__first .
H32:   loop__2__y - y_start <= integer32__last .
H33:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H34:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H35:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H36:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H37:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           long_integer__base__first .
H38:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           long_integer__base__last .
H39:   dy + 1 <> 0 .
H40:   dy + 1 >= long_integer__base__first .
H41:   dy + 1 <= long_integer__base__last .
H42:   4 * (loop__2__y - y_start) >= long_integer__base__first .
H43:   4 * (loop__2__y - y_start) <= long_integer__base__last .
H44:   loop__2__y >= sector__first .
H45:   loop__2__y <= sector__last .
H46:   loop__1__x >= sector__first .
H47:   loop__1__x <= sector__last .
H48:   fld_distance(element(element(detect_points, [
           loop__1__x]), [loop__2__y])) > 0 .
H49:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H50:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H51:   actual_x >= measuretypes__bit4_range__first .
H52:   actual_x <= measuretypes__bit4_range__last .
H53:   loop__2__y = y_end .
H54:   not (loop__1__x = x_end) .
        ->
C1:    loop__1__x + 1 >= x_start .
C2:    loop__1__x + 1 <= x_end .
C3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
C4:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
C5:    x_start >= sector__first .
C6:    x_start <= sector__last .
C7:    x_end >= sector__first .
C8:    x_end <= sector__last .
C9:    y_start >= sector__first .
C10:   y_start <= sector__last .
C11:   y_end >= sector__first .
C12:   y_end <= sector__last .
C13:   loop__1__x + 1 >= sector__first .
C14:   loop__1__x + 1 <= sector__last .
C15:   loop__1__x + 1 >= x_start .
C16:   loop__1__x + 1 <= x_end .
 

procedure_derive_grid_8.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    loop__2__y >= y_start .
H4:    loop__2__y <= y_end .
H5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H7:    x_start >= sector__first .
H8:    x_start <= sector__last .
H9:    x_end >= sector__first .
H10:   x_end <= sector__last .
H11:   y_start >= sector__first .
H12:   y_start <= sector__last .
H13:   y_end >= sector__first .
H14:   y_end <= sector__last .
H15:   loop__2__y >= sector__first .
H16:   loop__2__y <= sector__last .
H17:   loop__2__y >= y_start .
H18:   loop__2__y <= y_end .
H19:   loop__1__x >= sector__first .
H20:   loop__1__x <= sector__last .
H21:   loop__1__x >= x_start .
H22:   loop__1__x <= x_end .
H23:   loop__2__y - y_start >= integer32__first .
H24:   loop__2__y - y_start <= integer32__last .
H25:   y_start >= integer32__first .
H26:   y_start <= integer32__last .
H27:   loop__2__y >= integer32__first .
H28:   loop__2__y <= integer32__last .
H29:   dy >= integer32__first .
H30:   dy <= integer32__last .
H31:   loop__2__y - y_start >= integer32__first .
H32:   loop__2__y - y_start <= integer32__last .
H33:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H34:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H35:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H36:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H37:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           long_integer__base__first .
H38:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           long_integer__base__last .
H39:   dy + 1 <> 0 .
H40:   dy + 1 >= long_integer__base__first .
H41:   dy + 1 <= long_integer__base__last .
H42:   4 * (loop__2__y - y_start) >= long_integer__base__first .
H43:   4 * (loop__2__y - y_start) <= long_integer__base__last .
H44:   loop__2__y >= sector__first .
H45:   loop__2__y <= sector__last .
H46:   loop__1__x >= sector__first .
H47:   loop__1__x <= sector__last .
H48:   not (fld_distance(element(element(detect_points, [
           loop__1__x]), [loop__2__y])) > 0) .
H49:   loop__2__y = y_end .
H50:   not (loop__1__x = x_end) .
        ->
C1:    loop__1__x + 1 >= x_start .
C2:    loop__1__x + 1 <= x_end .
C3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
C4:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
C5:    x_start >= sector__first .
C6:    x_start <= sector__last .
C7:    x_end >= sector__first .
C8:    x_end <= sector__last .
C9:    y_start >= sector__first .
C10:   y_start <= sector__last .
C11:   y_end >= sector__first .
C12:   y_end <= sector__last .
C13:   loop__1__x + 1 >= sector__first .
C14:   loop__1__x + 1 <= sector__last .
C15:   loop__1__x + 1 >= x_start .
C16:   loop__1__x + 1 <= x_end .
 

For path(s) from assertion of line 148 to run-time check associated with statement of line 149:

procedure_derive_grid_9.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H4:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H5:    x_start >= sector__first .
H6:    x_start <= sector__last .
H7:    x_end >= sector__first .
H8:    x_end <= sector__last .
H9:    y_start >= sector__first .
H10:   y_start <= sector__last .
H11:   y_end >= sector__first .
H12:   y_end <= sector__last .
H13:   loop__1__x >= sector__first .
H14:   loop__1__x <= sector__last .
H15:   loop__1__x >= x_start .
H16:   loop__1__x <= x_end .
        ->
C1:    loop__1__x - x_start >= integer32__first .
C2:    loop__1__x - x_start <= integer32__last .
C3:    x_start >= integer32__first .
C4:    x_start <= integer32__last .
C5:    loop__1__x >= integer32__first .
C6:    loop__1__x <= integer32__last .
 

For path(s) from assertion of line 148 to run-time check associated with statement of line 150:

procedure_derive_grid_10.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H4:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H5:    x_start >= sector__first .
H6:    x_start <= sector__last .
H7:    x_end >= sector__first .
H8:    x_end <= sector__last .
H9:    y_start >= sector__first .
H10:   y_start <= sector__last .
H11:   y_end >= sector__first .
H12:   y_end <= sector__last .
H13:   loop__1__x >= sector__first .
H14:   loop__1__x <= sector__last .
H15:   loop__1__x >= x_start .
H16:   loop__1__x <= x_end .
H17:   loop__1__x - x_start >= integer32__first .
H18:   loop__1__x - x_start <= integer32__last .
H19:   x_start >= integer32__first .
H20:   x_start <= integer32__last .
H21:   loop__1__x >= integer32__first .
H22:   loop__1__x <= integer32__last .
H23:   dx >= integer32__first .
H24:   dx <= integer32__last .
H25:   loop__1__x - x_start >= integer32__first .
H26:   loop__1__x - x_start <= integer32__last .
        ->
C1:    4 * (loop__1__x - x_start) div (dx + 1) >= 
           measuretypes__bit4_range__first .
C2:    4 * (loop__1__x - x_start) div (dx + 1) <= 
           measuretypes__bit4_range__last .
C3:    4 * (loop__1__x - x_start) div (dx + 1) >= 
           measuretypes__bit4_range__first .
C4:    4 * (loop__1__x - x_start) div (dx + 1) <= 
           measuretypes__bit4_range__last .
C5:    4 * (loop__1__x - x_start) div (dx + 1) >= 
           long_integer__base__first .
C6:    4 * (loop__1__x - x_start) div (dx + 1) <= 
           long_integer__base__last .
C7:    dx + 1 <> 0 .
C8:    dx + 1 >= long_integer__base__first .
C9:    dx + 1 <= long_integer__base__last .
C10:   4 * (loop__1__x - x_start) >= long_integer__base__first .
C11:   4 * (loop__1__x - x_start) <= long_integer__base__last .
 

For path(s) from assertion of line 148 to run-time check associated with statement of line 151:

procedure_derive_grid_11.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H4:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H5:    x_start >= sector__first .
H6:    x_start <= sector__last .
H7:    x_end >= sector__first .
H8:    x_end <= sector__last .
H9:    y_start >= sector__first .
H10:   y_start <= sector__last .
H11:   y_end >= sector__first .
H12:   y_end <= sector__last .
H13:   loop__1__x >= sector__first .
H14:   loop__1__x <= sector__last .
H15:   loop__1__x >= x_start .
H16:   loop__1__x <= x_end .
H17:   loop__1__x - x_start >= integer32__first .
H18:   loop__1__x - x_start <= integer32__last .
H19:   x_start >= integer32__first .
H20:   x_start <= integer32__last .
H21:   loop__1__x >= integer32__first .
H22:   loop__1__x <= integer32__last .
H23:   dx >= integer32__first .
H24:   dx <= integer32__last .
H25:   loop__1__x - x_start >= integer32__first .
H26:   loop__1__x - x_start <= integer32__last .
H27:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           measuretypes__bit4_range__first .
H28:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           measuretypes__bit4_range__last .
H29:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           measuretypes__bit4_range__first .
H30:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           measuretypes__bit4_range__last .
H31:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           long_integer__base__first .
H32:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           long_integer__base__last .
H33:   dx + 1 <> 0 .
H34:   dx + 1 >= long_integer__base__first .
H35:   dx + 1 <= long_integer__base__last .
H36:   4 * (loop__1__x - x_start) >= long_integer__base__first .
H37:   4 * (loop__1__x - x_start) <= long_integer__base__last .
        ->
C1:    y_end >= radar_cfg__sector_range__first .
C2:    y_end <= radar_cfg__sector_range__last .
C3:    y_start >= radar_cfg__sector_range__first .
C4:    y_start <= radar_cfg__sector_range__last .
 

For path(s) from assertion of line 148 to run-time check associated with statement of line 151:

procedure_derive_grid_12.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H4:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H5:    x_start >= sector__first .
H6:    x_start <= sector__last .
H7:    x_end >= sector__first .
H8:    x_end <= sector__last .
H9:    y_start >= sector__first .
H10:   y_start <= sector__last .
H11:   y_end >= sector__first .
H12:   y_end <= sector__last .
H13:   loop__1__x >= sector__first .
H14:   loop__1__x <= sector__last .
H15:   loop__1__x >= x_start .
H16:   loop__1__x <= x_end .
H17:   loop__1__x - x_start >= integer32__first .
H18:   loop__1__x - x_start <= integer32__last .
H19:   x_start >= integer32__first .
H20:   x_start <= integer32__last .
H21:   loop__1__x >= integer32__first .
H22:   loop__1__x <= integer32__last .
H23:   dx >= integer32__first .
H24:   dx <= integer32__last .
H25:   loop__1__x - x_start >= integer32__first .
H26:   loop__1__x - x_start <= integer32__last .
H27:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           measuretypes__bit4_range__first .
H28:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           measuretypes__bit4_range__last .
H29:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           measuretypes__bit4_range__first .
H30:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           measuretypes__bit4_range__last .
H31:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           long_integer__base__first .
H32:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           long_integer__base__last .
H33:   dx + 1 <> 0 .
H34:   dx + 1 >= long_integer__base__first .
H35:   dx + 1 <= long_integer__base__last .
H36:   4 * (loop__1__x - x_start) >= long_integer__base__first .
H37:   4 * (loop__1__x - x_start) <= long_integer__base__last .
H38:   y_end >= radar_cfg__sector_range__first .
H39:   y_end <= radar_cfg__sector_range__last .
H40:   y_start >= radar_cfg__sector_range__first .
H41:   y_start <= radar_cfg__sector_range__last .
        ->
C1:    (y_start <= y_end) -> ((y_end >= sector__first) and (
           y_end <= sector__last)) .
C2:    (y_start <= y_end) -> ((y_start >= sector__first) and (
           y_start <= sector__last)) .
 

For path(s) from assertion of line 148 to assertion of line 152:

procedure_derive_grid_13.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H4:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H5:    x_start >= sector__first .
H6:    x_start <= sector__last .
H7:    x_end >= sector__first .
H8:    x_end <= sector__last .
H9:    y_start >= sector__first .
H10:   y_start <= sector__last .
H11:   y_end >= sector__first .
H12:   y_end <= sector__last .
H13:   loop__1__x >= sector__first .
H14:   loop__1__x <= sector__last .
H15:   loop__1__x >= x_start .
H16:   loop__1__x <= x_end .
H17:   loop__1__x - x_start >= integer32__first .
H18:   loop__1__x - x_start <= integer32__last .
H19:   x_start >= integer32__first .
H20:   x_start <= integer32__last .
H21:   loop__1__x >= integer32__first .
H22:   loop__1__x <= integer32__last .
H23:   dx >= integer32__first .
H24:   dx <= integer32__last .
H25:   loop__1__x - x_start >= integer32__first .
H26:   loop__1__x - x_start <= integer32__last .
H27:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           measuretypes__bit4_range__first .
H28:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           measuretypes__bit4_range__last .
H29:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           measuretypes__bit4_range__first .
H30:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           measuretypes__bit4_range__last .
H31:   4 * (loop__1__x - x_start) div (dx + 1) >= 
           long_integer__base__first .
H32:   4 * (loop__1__x - x_start) div (dx + 1) <= 
           long_integer__base__last .
H33:   dx + 1 <> 0 .
H34:   dx + 1 >= long_integer__base__first .
H35:   dx + 1 <= long_integer__base__last .
H36:   4 * (loop__1__x - x_start) >= long_integer__base__first .
H37:   4 * (loop__1__x - x_start) <= long_integer__base__last .
H38:   y_end >= radar_cfg__sector_range__first .
H39:   y_end <= radar_cfg__sector_range__last .
H40:   y_start >= radar_cfg__sector_range__first .
H41:   y_start <= radar_cfg__sector_range__last .
H42:   (y_start <= y_end) -> ((y_end >= sector__first) and (
           y_end <= sector__last)) .
H43:   (y_start <= y_end) -> ((y_start >= sector__first) and (
           y_start <= sector__last)) .
H44:   y_start <= y_end .
        ->
C1:    loop__1__x >= x_start .
C2:    loop__1__x <= x_end .
C3:    y_start >= y_start .
C4:    y_start <= y_end .
C5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
C6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
C7:    x_start >= sector__first .
C8:    x_start <= sector__last .
C9:    x_end >= sector__first .
C10:   x_end <= sector__last .
C11:   y_start >= sector__first .
C12:   y_start <= sector__last .
C13:   y_end >= sector__first .
C14:   y_end <= sector__last .
C15:   y_start >= sector__first .
C16:   y_start <= sector__last .
C17:   y_start >= y_start .
C18:   y_start <= y_end .
C19:   loop__1__x >= sector__first .
C20:   loop__1__x <= sector__last .
C21:   loop__1__x >= x_start .
C22:   loop__1__x <= x_end .
 

For path(s) from assertion of line 152 to assertion of line 152:

procedure_derive_grid_14.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    loop__2__y >= y_start .
H4:    loop__2__y <= y_end .
H5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H7:    x_start >= sector__first .
H8:    x_start <= sector__last .
H9:    x_end >= sector__first .
H10:   x_end <= sector__last .
H11:   y_start >= sector__first .
H12:   y_start <= sector__last .
H13:   y_end >= sector__first .
H14:   y_end <= sector__last .
H15:   loop__2__y >= sector__first .
H16:   loop__2__y <= sector__last .
H17:   loop__2__y >= y_start .
H18:   loop__2__y <= y_end .
H19:   loop__1__x >= sector__first .
H20:   loop__1__x <= sector__last .
H21:   loop__1__x >= x_start .
H22:   loop__1__x <= x_end .
H23:   loop__2__y - y_start >= integer32__first .
H24:   loop__2__y - y_start <= integer32__last .
H25:   y_start >= integer32__first .
H26:   y_start <= integer32__last .
H27:   loop__2__y >= integer32__first .
H28:   loop__2__y <= integer32__last .
H29:   dy >= integer32__first .
H30:   dy <= integer32__last .
H31:   loop__2__y - y_start >= integer32__first .
H32:   loop__2__y - y_start <= integer32__last .
H33:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H34:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H35:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H36:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H37:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           long_integer__base__first .
H38:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           long_integer__base__last .
H39:   dy + 1 <> 0 .
H40:   dy + 1 >= long_integer__base__first .
H41:   dy + 1 <= long_integer__base__last .
H42:   4 * (loop__2__y - y_start) >= long_integer__base__first .
H43:   4 * (loop__2__y - y_start) <= long_integer__base__last .
H44:   loop__2__y >= sector__first .
H45:   loop__2__y <= sector__last .
H46:   loop__1__x >= sector__first .
H47:   loop__1__x <= sector__last .
H48:   fld_distance(element(element(detect_points, [
           loop__1__x]), [loop__2__y])) > 0 .
H49:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H50:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H51:   actual_x >= measuretypes__bit4_range__first .
H52:   actual_x <= measuretypes__bit4_range__last .
H53:   not (loop__2__y = y_end) .
        ->
C1:    loop__1__x >= x_start .
C2:    loop__1__x <= x_end .
C3:    loop__2__y + 1 >= y_start .
C4:    loop__2__y + 1 <= y_end .
C5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
C6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
C7:    x_start >= sector__first .
C8:    x_start <= sector__last .
C9:    x_end >= sector__first .
C10:   x_end <= sector__last .
C11:   y_start >= sector__first .
C12:   y_start <= sector__last .
C13:   y_end >= sector__first .
C14:   y_end <= sector__last .
C15:   loop__2__y + 1 >= sector__first .
C16:   loop__2__y + 1 <= sector__last .
C17:   loop__2__y + 1 >= y_start .
C18:   loop__2__y + 1 <= y_end .
C19:   loop__1__x >= sector__first .
C20:   loop__1__x <= sector__last .
C21:   loop__1__x >= x_start .
C22:   loop__1__x <= x_end .
 

procedure_derive_grid_15.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    loop__2__y >= y_start .
H4:    loop__2__y <= y_end .
H5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H7:    x_start >= sector__first .
H8:    x_start <= sector__last .
H9:    x_end >= sector__first .
H10:   x_end <= sector__last .
H11:   y_start >= sector__first .
H12:   y_start <= sector__last .
H13:   y_end >= sector__first .
H14:   y_end <= sector__last .
H15:   loop__2__y >= sector__first .
H16:   loop__2__y <= sector__last .
H17:   loop__2__y >= y_start .
H18:   loop__2__y <= y_end .
H19:   loop__1__x >= sector__first .
H20:   loop__1__x <= sector__last .
H21:   loop__1__x >= x_start .
H22:   loop__1__x <= x_end .
H23:   loop__2__y - y_start >= integer32__first .
H24:   loop__2__y - y_start <= integer32__last .
H25:   y_start >= integer32__first .
H26:   y_start <= integer32__last .
H27:   loop__2__y >= integer32__first .
H28:   loop__2__y <= integer32__last .
H29:   dy >= integer32__first .
H30:   dy <= integer32__last .
H31:   loop__2__y - y_start >= integer32__first .
H32:   loop__2__y - y_start <= integer32__last .
H33:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H34:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H35:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H36:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H37:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           long_integer__base__first .
H38:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           long_integer__base__last .
H39:   dy + 1 <> 0 .
H40:   dy + 1 >= long_integer__base__first .
H41:   dy + 1 <= long_integer__base__last .
H42:   4 * (loop__2__y - y_start) >= long_integer__base__first .
H43:   4 * (loop__2__y - y_start) <= long_integer__base__last .
H44:   loop__2__y >= sector__first .
H45:   loop__2__y <= sector__last .
H46:   loop__1__x >= sector__first .
H47:   loop__1__x <= sector__last .
H48:   not (fld_distance(element(element(detect_points, [
           loop__1__x]), [loop__2__y])) > 0) .
H49:   not (loop__2__y = y_end) .
        ->
C1:    loop__1__x >= x_start .
C2:    loop__1__x <= x_end .
C3:    loop__2__y + 1 >= y_start .
C4:    loop__2__y + 1 <= y_end .
C5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
C6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
C7:    x_start >= sector__first .
C8:    x_start <= sector__last .
C9:    x_end >= sector__first .
C10:   x_end <= sector__last .
C11:   y_start >= sector__first .
C12:   y_start <= sector__last .
C13:   y_end >= sector__first .
C14:   y_end <= sector__last .
C15:   loop__2__y + 1 >= sector__first .
C16:   loop__2__y + 1 <= sector__last .
C17:   loop__2__y + 1 >= y_start .
C18:   loop__2__y + 1 <= y_end .
C19:   loop__1__x >= sector__first .
C20:   loop__1__x <= sector__last .
C21:   loop__1__x >= x_start .
C22:   loop__1__x <= x_end .
 

For path(s) from assertion of line 152 to run-time check associated with statement of line 154:

procedure_derive_grid_16.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    loop__2__y >= y_start .
H4:    loop__2__y <= y_end .
H5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H7:    x_start >= sector__first .
H8:    x_start <= sector__last .
H9:    x_end >= sector__first .
H10:   x_end <= sector__last .
H11:   y_start >= sector__first .
H12:   y_start <= sector__last .
H13:   y_end >= sector__first .
H14:   y_end <= sector__last .
H15:   loop__2__y >= sector__first .
H16:   loop__2__y <= sector__last .
H17:   loop__2__y >= y_start .
H18:   loop__2__y <= y_end .
H19:   loop__1__x >= sector__first .
H20:   loop__1__x <= sector__last .
H21:   loop__1__x >= x_start .
H22:   loop__1__x <= x_end .
        ->
C1:    loop__2__y - y_start >= integer32__first .
C2:    loop__2__y - y_start <= integer32__last .
C3:    y_start >= integer32__first .
C4:    y_start <= integer32__last .
C5:    loop__2__y >= integer32__first .
C6:    loop__2__y <= integer32__last .
 

For path(s) from assertion of line 152 to run-time check associated with statement of line 155:

procedure_derive_grid_17.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    loop__2__y >= y_start .
H4:    loop__2__y <= y_end .
H5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H7:    x_start >= sector__first .
H8:    x_start <= sector__last .
H9:    x_end >= sector__first .
H10:   x_end <= sector__last .
H11:   y_start >= sector__first .
H12:   y_start <= sector__last .
H13:   y_end >= sector__first .
H14:   y_end <= sector__last .
H15:   loop__2__y >= sector__first .
H16:   loop__2__y <= sector__last .
H17:   loop__2__y >= y_start .
H18:   loop__2__y <= y_end .
H19:   loop__1__x >= sector__first .
H20:   loop__1__x <= sector__last .
H21:   loop__1__x >= x_start .
H22:   loop__1__x <= x_end .
H23:   loop__2__y - y_start >= integer32__first .
H24:   loop__2__y - y_start <= integer32__last .
H25:   y_start >= integer32__first .
H26:   y_start <= integer32__last .
H27:   loop__2__y >= integer32__first .
H28:   loop__2__y <= integer32__last .
H29:   dy >= integer32__first .
H30:   dy <= integer32__last .
H31:   loop__2__y - y_start >= integer32__first .
H32:   loop__2__y - y_start <= integer32__last .
        ->
C1:    4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
C2:    4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
C3:    4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
C4:    4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
C5:    4 * (loop__2__y - y_start) div (dy + 1) >= 
           long_integer__base__first .
C6:    4 * (loop__2__y - y_start) div (dy + 1) <= 
           long_integer__base__last .
C7:    dy + 1 <> 0 .
C8:    dy + 1 >= long_integer__base__first .
C9:    dy + 1 <= long_integer__base__last .
C10:   4 * (loop__2__y - y_start) >= long_integer__base__first .
C11:   4 * (loop__2__y - y_start) <= long_integer__base__last .
 

For path(s) from assertion of line 152 to run-time check associated with statement of line 156:

procedure_derive_grid_18.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    loop__2__y >= y_start .
H4:    loop__2__y <= y_end .
H5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H7:    x_start >= sector__first .
H8:    x_start <= sector__last .
H9:    x_end >= sector__first .
H10:   x_end <= sector__last .
H11:   y_start >= sector__first .
H12:   y_start <= sector__last .
H13:   y_end >= sector__first .
H14:   y_end <= sector__last .
H15:   loop__2__y >= sector__first .
H16:   loop__2__y <= sector__last .
H17:   loop__2__y >= y_start .
H18:   loop__2__y <= y_end .
H19:   loop__1__x >= sector__first .
H20:   loop__1__x <= sector__last .
H21:   loop__1__x >= x_start .
H22:   loop__1__x <= x_end .
H23:   loop__2__y - y_start >= integer32__first .
H24:   loop__2__y - y_start <= integer32__last .
H25:   y_start >= integer32__first .
H26:   y_start <= integer32__last .
H27:   loop__2__y >= integer32__first .
H28:   loop__2__y <= integer32__last .
H29:   dy >= integer32__first .
H30:   dy <= integer32__last .
H31:   loop__2__y - y_start >= integer32__first .
H32:   loop__2__y - y_start <= integer32__last .
H33:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H34:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H35:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H36:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H37:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           long_integer__base__first .
H38:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           long_integer__base__last .
H39:   dy + 1 <> 0 .
H40:   dy + 1 >= long_integer__base__first .
H41:   dy + 1 <= long_integer__base__last .
H42:   4 * (loop__2__y - y_start) >= long_integer__base__first .
H43:   4 * (loop__2__y - y_start) <= long_integer__base__last .
        ->
C1:    loop__2__y >= sector__first .
C2:    loop__2__y <= sector__last .
C3:    loop__1__x >= sector__first .
C4:    loop__1__x <= sector__last .
 

For path(s) from assertion of line 152 to run-time check associated with statement of line 158:

procedure_derive_grid_19.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    loop__2__y >= y_start .
H4:    loop__2__y <= y_end .
H5:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) >= 
           meter_per_sec__first) and (fld_rel_vel(element(element(
           detect_points, [i___1]), [i___2])) <= 
           meter_per_sec__last))))) .
H6:    for_all(i___2: radar_cfg__sector_range, ((i___2 >= 
           sector__first) and (i___2 <= sector__last)) -> (for_all(
           i___1: radar_cfg__sector_range, ((i___1 >= 
           sector__first) and (i___1 <= sector__last)) -> ((
           fld_distance(element(element(detect_points, [
           i___1]), [i___2])) >= meter__first) and (fld_distance(element(element(
           detect_points, [i___1]), [i___2])) <= meter__last))))) .
H7:    x_start >= sector__first .
H8:    x_start <= sector__last .
H9:    x_end >= sector__first .
H10:   x_end <= sector__last .
H11:   y_start >= sector__first .
H12:   y_start <= sector__last .
H13:   y_end >= sector__first .
H14:   y_end <= sector__last .
H15:   loop__2__y >= sector__first .
H16:   loop__2__y <= sector__last .
H17:   loop__2__y >= y_start .
H18:   loop__2__y <= y_end .
H19:   loop__1__x >= sector__first .
H20:   loop__1__x <= sector__last .
H21:   loop__1__x >= x_start .
H22:   loop__1__x <= x_end .
H23:   loop__2__y - y_start >= integer32__first .
H24:   loop__2__y - y_start <= integer32__last .
H25:   y_start >= integer32__first .
H26:   y_start <= integer32__last .
H27:   loop__2__y >= integer32__first .
H28:   loop__2__y <= integer32__last .
H29:   dy >= integer32__first .
H30:   dy <= integer32__last .
H31:   loop__2__y - y_start >= integer32__first .
H32:   loop__2__y - y_start <= integer32__last .
H33:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H34:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H35:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
H36:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
H37:   4 * (loop__2__y - y_start) div (dy + 1) >= 
           long_integer__base__first .
H38:   4 * (loop__2__y - y_start) div (dy + 1) <= 
           long_integer__base__last .
H39:   dy + 1 <> 0 .
H40:   dy + 1 >= long_integer__base__first .
H41:   dy + 1 <= long_integer__base__last .
H42:   4 * (loop__2__y - y_start) >= long_integer__base__first .
H43:   4 * (loop__2__y - y_start) <= long_integer__base__last .
H44:   loop__2__y >= sector__first .
H45:   loop__2__y <= sector__last .
H46:   loop__1__x >= sector__first .
H47:   loop__1__x <= sector__last .
H48:   fld_distance(element(element(detect_points, [
           loop__1__x]), [loop__2__y])) > 0 .
        ->
C1:    4 * (loop__2__y - y_start) div (dy + 1) >= 
           measuretypes__bit4_range__first .
C2:    4 * (loop__2__y - y_start) div (dy + 1) <= 
           measuretypes__bit4_range__last .
C3:    actual_x >= measuretypes__bit4_range__first .
C4:    actual_x <= measuretypes__bit4_range__last .
 

For path(s) from start to finish:

procedure_derive_grid_20.
*** true .          /* trivially true VC removed by Examiner */


For path(s) from assertion of line 148 to finish:

procedure_derive_grid_21.
*** true .          /* trivially true VC removed by Examiner */


For path(s) from assertion of line 152 to finish:

procedure_derive_grid_22.
*** true .          /* trivially true VC removed by Examiner */


procedure_derive_grid_23.
*** true .          /* trivially true VC removed by Examiner */



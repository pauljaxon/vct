*****************************************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
*****************************************************************************


CREATED 25-NOV-2009, 14:04:41  SIMPLIFIED 25-NOV-2009, 14:18:56

SPARK Simplifier Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.

procedure Radar.Sweep.Derive_Grid




For path(s) from start to run-time check associated with statement of line 145:

procedure_derive_grid_1.
*** true .          /* all conclusions proved */


For path(s) from start to run-time check associated with statement of line 146:

procedure_derive_grid_2.
*** true .          /* all conclusions proved */


For path(s) from start to run-time check associated with statement of line 147:

procedure_derive_grid_3.
*** true .          /* all conclusions proved */


For path(s) from start to run-time check associated with statement of line 147:

procedure_derive_grid_4.
*** true .          /* all conclusions proved */


For path(s) from start to assertion of line 148:

procedure_derive_grid_5.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 148 to assertion of line 148:

procedure_derive_grid_6.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 152 to assertion of line 148:

procedure_derive_grid_7.
*** true .          /* all conclusions proved */


procedure_derive_grid_8.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 148 to run-time check associated with 
          statement of line 149:

procedure_derive_grid_9.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 148 to run-time check associated with 
          statement of line 150:

procedure_derive_grid_10.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    for_all(i___2 : integer, - 20 <= i___2 and i___2 <= 20 -> for_all(i___1 
          : integer, - 20 <= i___1 and i___1 <= 20 -> - 5000 <= fld_rel_vel(
          element(element(detect_points, [i___1]), [i___2])) and fld_rel_vel(
          element(element(detect_points, [i___1]), [i___2])) <= 5000)) .
H4:    for_all(i___2 : integer, - 20 <= i___2 and i___2 <= 20 -> for_all(i___1 
          : integer, - 20 <= i___1 and i___1 <= 20 -> - 200000 <= fld_distance(
          element(element(detect_points, [i___1]), [i___2])) and fld_distance(
          element(element(detect_points, [i___1]), [i___2])) <= 200000)) .
H5:    x_start >= - 20 .
H6:    x_start <= 20 .
H7:    x_end >= - 20 .
H8:    x_end <= 20 .
H9:    y_start >= - 20 .
H10:   y_start <= 20 .
H11:   y_end >= - 20 .
H12:   y_end <= 20 .
H13:   loop__1__x >= - 20 .
H14:   loop__1__x <= 20 .
H15:   loop__1__x - x_start <= 2147483647 .
H16:   dx >= - 2147483648 .
H17:   dx <= 2147483647 .
H18:   long_integer__size >= 0 .
H19:   measuretypes__meter__size >= 0 .
H20:   measuretypes__meter_per_sec__size >= 0 .
H21:   measuretypes__bit_range__size >= 0 .
H22:   measuretypes__bit_range__base__first <= 
          measuretypes__bit_range__base__last .
H23:   measuretypes__bit4_range__size >= 0 .
H24:   measuretypes__bit4_range__base__first <= 
          measuretypes__bit4_range__base__last .
H25:   radar_cfg__sector_range__size >= 0 .
H26:   radar_cfg__sector_range__base__first <= 
          radar_cfg__sector_range__base__last .
H27:   meter__size >= 0 .
H28:   meter_per_sec__size >= 0 .
H29:   sector__size >= 0 .
H30:   sector__base__first <= sector__base__last .
H31:   integer32__size >= 0 .
H32:   ping__size >= 0 .
H33:   measuretypes__bit_range__base__first <= 0 .
H34:   measuretypes__bit_range__base__last >= 255 .
H35:   measuretypes__bit4_range__base__first <= 0 .
H36:   measuretypes__bit4_range__base__last >= 3 .
H37:   radar_cfg__sector_range__base__first <= - 20 .
H38:   radar_cfg__sector_range__base__last >= 20 .
H39:   sector__base__first <= - 20 .
H40:   sector__base__last >= 20 .
       ->
C1:    4 * (loop__1__x - x_start) div (dx + 1) >= 0 .
C2:    4 * (loop__1__x - x_start) div (dx + 1) <= 3 .
C3:    4 * (loop__1__x - x_start) div (dx + 1) >= - 2147483648 .
C4:    4 * (loop__1__x - x_start) div (dx + 1) <= 2147483647 .
C5:    dx <> - 1 .
C6:    dx <= 2147483646 .


For path(s) from assertion of line 148 to run-time check associated with 
          statement of line 151:

procedure_derive_grid_11.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 148 to run-time check associated with 
          statement of line 151:

procedure_derive_grid_12.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 148 to assertion of line 152:

procedure_derive_grid_13.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 152 to assertion of line 152:

procedure_derive_grid_14.
*** true .          /* all conclusions proved */


procedure_derive_grid_15.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 152 to run-time check associated with 
          statement of line 154:

procedure_derive_grid_16.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 152 to run-time check associated with 
          statement of line 155:

procedure_derive_grid_17.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    loop__2__y >= y_start .
H4:    loop__2__y <= y_end .
H5:    for_all(i___2 : integer, - 20 <= i___2 and i___2 <= 20 -> for_all(i___1 
          : integer, - 20 <= i___1 and i___1 <= 20 -> - 5000 <= fld_rel_vel(
          element(element(detect_points, [i___1]), [i___2])) and fld_rel_vel(
          element(element(detect_points, [i___1]), [i___2])) <= 5000)) .
H6:    for_all(i___2 : integer, - 20 <= i___2 and i___2 <= 20 -> for_all(i___1 
          : integer, - 20 <= i___1 and i___1 <= 20 -> - 200000 <= fld_distance(
          element(element(detect_points, [i___1]), [i___2])) and fld_distance(
          element(element(detect_points, [i___1]), [i___2])) <= 200000)) .
H7:    x_start >= - 20 .
H8:    x_start <= 20 .
H9:    x_end >= - 20 .
H10:   x_end <= 20 .
H11:   y_start >= - 20 .
H12:   y_start <= 20 .
H13:   y_end >= - 20 .
H14:   y_end <= 20 .
H15:   loop__2__y >= - 20 .
H16:   loop__2__y <= 20 .
H17:   loop__1__x >= - 20 .
H18:   loop__1__x <= 20 .
H19:   loop__2__y - y_start <= 2147483647 .
H20:   dy >= - 2147483648 .
H21:   dy <= 2147483647 .
H22:   long_integer__size >= 0 .
H23:   measuretypes__meter__size >= 0 .
H24:   measuretypes__meter_per_sec__size >= 0 .
H25:   measuretypes__bit_range__size >= 0 .
H26:   measuretypes__bit_range__base__first <= 
          measuretypes__bit_range__base__last .
H27:   measuretypes__bit4_range__size >= 0 .
H28:   measuretypes__bit4_range__base__first <= 
          measuretypes__bit4_range__base__last .
H29:   radar_cfg__sector_range__size >= 0 .
H30:   radar_cfg__sector_range__base__first <= 
          radar_cfg__sector_range__base__last .
H31:   meter__size >= 0 .
H32:   meter_per_sec__size >= 0 .
H33:   sector__size >= 0 .
H34:   sector__base__first <= sector__base__last .
H35:   integer32__size >= 0 .
H36:   ping__size >= 0 .
H37:   measuretypes__bit_range__base__first <= 0 .
H38:   measuretypes__bit_range__base__last >= 255 .
H39:   measuretypes__bit4_range__base__first <= 0 .
H40:   measuretypes__bit4_range__base__last >= 3 .
H41:   radar_cfg__sector_range__base__first <= - 20 .
H42:   radar_cfg__sector_range__base__last >= 20 .
H43:   sector__base__first <= - 20 .
H44:   sector__base__last >= 20 .
       ->
C1:    4 * (loop__2__y - y_start) div (dy + 1) >= 0 .
C2:    4 * (loop__2__y - y_start) div (dy + 1) <= 3 .
C3:    4 * (loop__2__y - y_start) div (dy + 1) >= - 2147483648 .
C4:    4 * (loop__2__y - y_start) div (dy + 1) <= 2147483647 .
C5:    dy <> - 1 .
C6:    dy <= 2147483646 .


For path(s) from assertion of line 152 to run-time check associated with 
          statement of line 156:

procedure_derive_grid_18.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 152 to run-time check associated with 
          statement of line 158:

procedure_derive_grid_19.
H1:    loop__1__x >= x_start .
H2:    loop__1__x <= x_end .
H3:    loop__2__y >= y_start .
H4:    loop__2__y <= y_end .
H5:    for_all(i___2 : integer, - 20 <= i___2 and i___2 <= 20 -> for_all(i___1 
          : integer, - 20 <= i___1 and i___1 <= 20 -> - 5000 <= fld_rel_vel(
          element(element(detect_points, [i___1]), [i___2])) and fld_rel_vel(
          element(element(detect_points, [i___1]), [i___2])) <= 5000)) .
H6:    for_all(i___2 : integer, - 20 <= i___2 and i___2 <= 20 -> for_all(i___1 
          : integer, - 20 <= i___1 and i___1 <= 20 -> - 200000 <= fld_distance(
          element(element(detect_points, [i___1]), [i___2])) and fld_distance(
          element(element(detect_points, [i___1]), [i___2])) <= 200000)) .
H7:    x_start >= - 20 .
H8:    x_start <= 20 .
H9:    x_end >= - 20 .
H10:   x_end <= 20 .
H11:   y_start >= - 20 .
H12:   y_start <= 20 .
H13:   y_end >= - 20 .
H14:   y_end <= 20 .
H15:   loop__2__y >= - 20 .
H16:   loop__2__y <= 20 .
H17:   loop__1__x >= - 20 .
H18:   loop__1__x <= 20 .
H19:   dy >= - 2147483648 .
H20:   4 * (loop__2__y - y_start) div (dy + 1) >= 0 .
H21:   4 * (loop__2__y - y_start) div (dy + 1) <= 3 .
H22:   dy <> - 1 .
H23:   dy <= 2147483646 .
H24:   4 * (loop__2__y - y_start) <= 2147483647 .
H25:   fld_distance(element(element(detect_points, [loop__1__x]), [loop__2__y]))
           > 0 .
H26:   long_integer__size >= 0 .
H27:   measuretypes__meter__size >= 0 .
H28:   measuretypes__meter_per_sec__size >= 0 .
H29:   measuretypes__bit_range__size >= 0 .
H30:   measuretypes__bit_range__base__first <= 
          measuretypes__bit_range__base__last .
H31:   measuretypes__bit4_range__size >= 0 .
H32:   measuretypes__bit4_range__base__first <= 
          measuretypes__bit4_range__base__last .
H33:   radar_cfg__sector_range__size >= 0 .
H34:   radar_cfg__sector_range__base__first <= 
          radar_cfg__sector_range__base__last .
H35:   meter__size >= 0 .
H36:   meter_per_sec__size >= 0 .
H37:   sector__size >= 0 .
H38:   sector__base__first <= sector__base__last .
H39:   integer32__size >= 0 .
H40:   ping__size >= 0 .
H41:   measuretypes__bit_range__base__first <= 0 .
H42:   measuretypes__bit_range__base__last >= 255 .
H43:   measuretypes__bit4_range__base__first <= 0 .
H44:   measuretypes__bit4_range__base__last >= 3 .
H45:   radar_cfg__sector_range__base__first <= - 20 .
H46:   radar_cfg__sector_range__base__last >= 20 .
H47:   sector__base__first <= - 20 .
H48:   sector__base__last >= 20 .
       ->
C1:    actual_x >= 0 .
C2:    actual_x <= 3 .


For path(s) from start to finish:

procedure_derive_grid_20.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 148 to finish:

procedure_derive_grid_21.
*** true .          /* all conclusions proved */


For path(s) from assertion of line 152 to finish:

procedure_derive_grid_22.
*** true .          /* all conclusions proved */


procedure_derive_grid_23.
*** true .          /* all conclusions proved */



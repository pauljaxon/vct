           *******************************************************
                            Listing of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:42.69

Line
   1  -- MCU interface to the fins over the bus
   2  --
   3  -- $Log: if_steer.ads,v $
   4  -- Revision 1.1.1.1  2004/01/12 19:29:12  adi
   5  -- Added from tarfile
   6  --
   7  --
   8  -- Revision 1.3  2003/09/11 19:54:16  adi
   9  -- Added get_ibit_state
  10  --
  11  -- Revision 1.2  2003/08/31 20:28:51  adi
  12  -- Updated annos for implementation
  13  --
  14  -- Revision 1.1  2003/08/31 20:15:48  adi
  15  -- Initial revision
  16  --
  17  --
  18  with Steer_cfg, Ibit;
  19  use type Steer_Cfg.Fin_Angle, Steer_Cfg.fin;
  20  --# inherit SystemTypes, MeasureTypes, Bus, Ibit,
  21  --# bc1553,steer_cfg, steer_cfg.encode, steer_cfg.decode;
  22  package If_Steer
  23    --# own State;
  24    --# initializes State;
  25  is
  26     subtype Fin is Steer_Cfg.Fin;
  27     Subtype Angle is Steer_Cfg.Fin_Angle;
  28  
  29     function Get_Ibit_State return Ibit.Phase;
  30     --# global state;
  31  
  32     -- Find out the current deflection
  33     procedure Get_Deflection(For_Fin    : in Fin;
  34                              This_Angle : out Angle;
  35                              Valid      : out Boolean);
  36     --# global in State;
  37     --# derives this_angle from State, for_fin &
  38     --#   valid from state;
  39  
  40     -- Command a fin steering deflection
  41     procedure Set_Deflection(For_Fin : in Fin;
  42                              New_Angle : in Angle);
  43     --# global in out Bus.Outputs;
  44     --# derives Bus.Outputs from *, for_fin, new_angle;
  45  
  46     -- Kick off a steer IBIT
  47     procedure Ibit_Start;
  48     --# global in out Bus.Outputs, State;
  49     --# derives Bus.Outputs from * &
  50     --#         State from *;
  51  
  52     -- Stop a steer IBIT
  53     procedure Ibit_Stop;
  54     --# global in out Bus.Outputs, State;
  55     --# derives Bus.Outputs from * &
  56     --#         State from *;
  57  
  58     -- Poll the bus
  59     procedure Poll;
  60     --# global in out State;
  61     --#        in Bus.Inputs;
  62     --# derives State from *, Bus.Inputs;
  63  
  64     -- Initialise
  65     procedure Init;
  66     --# global out State;
  67     --#        in out Bus.Outputs;
  68     --# derives State from &
  69     --#         Bus.Outputs from *;
  70  
  71     -- test point
  72     procedure Command;
  73     --# derives;
  74  end If_Steer;
No summarized warnings



--End of file--------------------------------------------------

*****************************************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
*****************************************************************************


CREATED 25-NOV-2009, 14:04:43  SIMPLIFIED 25-NOV-2009, 14:19:18

SPARK Simplifier Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.

function destruct_cfg.Code_To_State






@@@@@@@@@@  VC: function_code_to_state_1.  @@@@@@@@@@
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  state__first <= inactive
-S-  Applied substitution rule code_to_stat_rules(14).
     This was achieved by replacing all occurrences of state__first by:
          inactive.
<S>  New C1:  true
-S-  Applied substitution rule code_to_stat_rules(15).
     This was achieved by replacing all occurrences of state__last by:
          detonated.
<S>  New C2:  true
***  Proved C1:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_code_to_state_2.  @@@@@@@@@@
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  state__first <= inactive
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  state__first <= inactive
***  Proved C1:  state__first <= inactive
     using hypothesis H4.
***  Proved C2:  inactive <= state__last
     using hypothesis H5.
***  PROVED VC.


@@@@@@@@@@  VC: function_code_to_state_3.  @@@@@@@@@@
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  state__first <= inactive
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  state__first <= armed
***  Proved C1:  state__first <= armed
     using hypothesis H4.
-S-  Applied substitution rule code_to_stat_rules(15).
     This was achieved by replacing all occurrences of state__last by:
          detonated.
<S>  New H5:  true
<S>  New C2:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_code_to_state_4.  @@@@@@@@@@
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  state__first <= inactive
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  state__first <= armed
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  state__first <= armed
***  Proved C1:  state__first <= armed
     using hypothesis H7.
***  Proved C2:  armed <= state__last
     using hypothesis H8.
***  PROVED VC.


@@@@@@@@@@  VC: function_code_to_state_5.  @@@@@@@@@@
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  state__first <= inactive
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  state__first <= armed
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  state__first <= detonated
***  Proved C1:  state__first <= detonated
     using hypothesis H4.
-S-  Applied substitution rule code_to_stat_rules(15).
     This was achieved by replacing all occurrences of state__last by:
          detonated.
<S>  New H5:  true
<S>  New H8:  true
<S>  New C2:  true
***  Proved C2:  true
***  PROVED VC.


@@@@@@@@@@  VC: function_code_to_state_6.  @@@@@@@@@@
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  state__first <= inactive
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  state__first <= armed
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  state__first <= detonated
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  state__first <= detonated
***  Proved C1:  state__first <= detonated
     using hypothesis H10.
***  Proved C2:  detonated <= state__last
     using hypothesis H11.
***  PROVED VC.


@@@@@@@@@@  VC: function_code_to_state_7.  @@@@@@@@@@
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  state__first <= inactive
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  state__first <= armed
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  state__first <= detonated
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  state__first <= inactive
***  Proved C1:  state__first <= inactive
     using hypothesis H4.
***  Proved C2:  inactive <= state__last
     using hypothesis H5.
***  PROVED VC.


@@@@@@@@@@  VC: function_code_to_state_8.  @@@@@@@@@@
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  state__first <= inactive
---  Hypothesis H7 has been replaced by "true".  (It is already present, as H4).
---  Hypothesis H8 has been replaced by "true".  (It is already present, as H5).
---  Hypothesis H9 has been replaced by "true".  (It is already present, as H4).
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H5)
          .
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  state__first <= inactive
***  Proved C1:  true
***  Proved C2:  state__first <= inactive
     using hypothesis H4.
***  Proved C3:  inactive <= state__last
     using hypothesis H5.
***  PROVED VC.


@@@@@@@@@@  VC: function_code_to_state_9.  @@@@@@@@@@
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  state__first <= inactive
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  state__first <= armed
---  Hypothesis H10 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H11 has been replaced by "true".  (It is already present, as H8)
          .
---  Hypothesis H12 has been replaced by "true".  (It is already present, as H7)
          .
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H8)
          .
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  state__first <= armed
***  Proved C1:  true
***  Proved C2:  state__first <= armed
     using hypothesis H7.
***  Proved C3:  armed <= state__last
     using hypothesis H8.
***  PROVED VC.


@@@@@@@@@@  VC: function_code_to_state_10.  @@@@@@@@@@
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  state__first <= inactive
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  state__first <= armed
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  state__first <= detonated
---  Hypothesis H13 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H14 has been replaced by "true".  (It is already present, as 
          H11).
---  Hypothesis H15 has been replaced by "true".  (It is already present, as 
          H10).
---  Hypothesis H16 has been replaced by "true".  (It is already present, as 
          H11).
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  state__first <= detonated
***  Proved C1:  true
***  Proved C2:  state__first <= detonated
     using hypothesis H10.
***  Proved C3:  detonated <= state__last
     using hypothesis H11.
***  PROVED VC.


@@@@@@@@@@  VC: function_code_to_state_11.  @@@@@@@@@@
%%%  Simplified H4 on reading formula in, to give:
     %%%  H4:  state__first <= inactive
%%%  Simplified H7 on reading formula in, to give:
     %%%  H7:  state__first <= armed
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  state__first <= detonated
---  Hypothesis H13 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H14 has been replaced by "true".  (It is already present, as H5)
          .
---  Hypothesis H15 has been replaced by "true".  (It is already present, as H4)
          .
---  Hypothesis H16 has been replaced by "true".  (It is already present, as H5)
          .
%%%  Simplified C2 on reading formula in, to give:
     %%%  C2:  state__first <= inactive
***  Proved C1:  true
***  Proved C2:  state__first <= inactive
     using hypothesis H4.
***  Proved C3:  inactive <= state__last
     using hypothesis H5.
***  PROVED VC.


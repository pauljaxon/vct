           *******************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:39.06

                      procedure watchdog.Check_Timeout




For path(s) from start to run-time check associated with statement of line 44:

procedure_check_timeout_1.
H1:    true .
H2:    last_check >= clock__millisecond__first .
H3:    last_check <= clock__millisecond__last .
H4:    true .
H5:    t__1 >= clock__millisecond__first .
H6:    t__1 <= clock__millisecond__last .
H7:    true .
        ->
C1:    t__1 >= clock__millisecond__first .
C2:    t__1 <= clock__millisecond__last .
 

For path(s) from start to run-time check associated with statement of line 47:

procedure_check_timeout_2.
H1:    true .
H2:    last_check >= clock__millisecond__first .
H3:    last_check <= clock__millisecond__last .
H4:    true .
H5:    t__1 >= clock__millisecond__first .
H6:    t__1 <= clock__millisecond__last .
H7:    true .
H8:    t__1 >= clock__millisecond__first .
H9:    t__1 <= clock__millisecond__last .
H10:   true .
H11:   (not valid__1) or (not last_valid) .
        ->
C1:    invalid >= timer_check__first .
C2:    invalid <= timer_check__last .
 

For path(s) from start to run-time check associated with statement of line 51:

procedure_check_timeout_3.
H1:    true .
H2:    last_check >= clock__millisecond__first .
H3:    last_check <= clock__millisecond__last .
H4:    true .
H5:    t__1 >= clock__millisecond__first .
H6:    t__1 <= clock__millisecond__last .
H7:    true .
H8:    t__1 >= clock__millisecond__first .
H9:    t__1 <= clock__millisecond__last .
H10:   true .
H11:   not ((not valid__1) or (not last_valid)) .
H12:   t__1 >= clock__millisecond__first .
H13:   t__1 <= clock__millisecond__last .
H14:   t__1 >= last_check .
H15:   t__1 >= clock__millisecond__first .
H16:   t__1 <= clock__millisecond__last .
        ->
C1:    t__1 - last_check >= clock__millisecond__first .
C2:    t__1 - last_check <= clock__millisecond__last .
 

For path(s) from start to run-time check associated with statement of line 54:

procedure_check_timeout_4.
H1:    true .
H2:    last_check >= clock__millisecond__first .
H3:    last_check <= clock__millisecond__last .
H4:    true .
H5:    t__1 >= clock__millisecond__first .
H6:    t__1 <= clock__millisecond__last .
H7:    true .
H8:    t__1 >= clock__millisecond__first .
H9:    t__1 <= clock__millisecond__last .
H10:   true .
H11:   not ((not valid__1) or (not last_valid)) .
H12:   t__1 >= clock__millisecond__first .
H13:   t__1 <= clock__millisecond__last .
H14:   not (t__1 >= last_check) .
        ->
C1:    clock__millisecond__last - last_check >= 
           clock__millisecond__first .
C2:    clock__millisecond__last - last_check <= 
           clock__millisecond__last .
C3:    clock__millisecond__last - last_check >= 
           clock__millisecond__base__first .
C4:    clock__millisecond__last - last_check <= 
           clock__millisecond__base__last .
 

For path(s) from start to run-time check associated with statement of line 55:

procedure_check_timeout_5.
H1:    true .
H2:    last_check >= clock__millisecond__first .
H3:    last_check <= clock__millisecond__last .
H4:    true .
H5:    t__1 >= clock__millisecond__first .
H6:    t__1 <= clock__millisecond__last .
H7:    true .
H8:    t__1 >= clock__millisecond__first .
H9:    t__1 <= clock__millisecond__last .
H10:   true .
H11:   not ((not valid__1) or (not last_valid)) .
H12:   t__1 >= clock__millisecond__first .
H13:   t__1 <= clock__millisecond__last .
H14:   not (t__1 >= last_check) .
H15:   clock__millisecond__last - last_check >= 
           clock__millisecond__first .
H16:   clock__millisecond__last - last_check <= 
           clock__millisecond__last .
H17:   clock__millisecond__last - last_check >= 
           clock__millisecond__base__first .
H18:   clock__millisecond__last - last_check <= 
           clock__millisecond__base__last .
H19:   t__1 >= clock__millisecond__first .
H20:   t__1 <= clock__millisecond__last .
H21:   clock__millisecond__last - last_check >= 
           clock__millisecond__first .
H22:   clock__millisecond__last - last_check <= 
           clock__millisecond__last .
        ->
C1:    clock__millisecond__last - last_check + t__1 >= 
           clock__millisecond__first .
C2:    clock__millisecond__last - last_check + t__1 <= 
           clock__millisecond__last .
 

For path(s) from start to run-time check associated with statement of line 58:

procedure_check_timeout_6.
H1:    true .
H2:    last_check >= clock__millisecond__first .
H3:    last_check <= clock__millisecond__last .
H4:    true .
H5:    t__1 >= clock__millisecond__first .
H6:    t__1 <= clock__millisecond__last .
H7:    true .
H8:    t__1 >= clock__millisecond__first .
H9:    t__1 <= clock__millisecond__last .
H10:   true .
H11:   not ((not valid__1) or (not last_valid)) .
H12:   t__1 >= clock__millisecond__first .
H13:   t__1 <= clock__millisecond__last .
H14:   t__1 >= last_check .
H15:   t__1 >= clock__millisecond__first .
H16:   t__1 <= clock__millisecond__last .
H17:   t__1 - last_check >= clock__millisecond__first .
H18:   t__1 - last_check <= clock__millisecond__last .
H19:   t__1 - last_check >= clock__millisecond__first .
H20:   t__1 - last_check <= clock__millisecond__last .
H21:   t__1 - last_check > max_delay .
        ->
C1:    timeout >= timer_check__first .
C2:    timeout <= timer_check__last .
 

procedure_check_timeout_7.
H1:    true .
H2:    last_check >= clock__millisecond__first .
H3:    last_check <= clock__millisecond__last .
H4:    true .
H5:    t__1 >= clock__millisecond__first .
H6:    t__1 <= clock__millisecond__last .
H7:    true .
H8:    t__1 >= clock__millisecond__first .
H9:    t__1 <= clock__millisecond__last .
H10:   true .
H11:   not ((not valid__1) or (not last_valid)) .
H12:   t__1 >= clock__millisecond__first .
H13:   t__1 <= clock__millisecond__last .
H14:   not (t__1 >= last_check) .
H15:   clock__millisecond__last - last_check >= 
           clock__millisecond__first .
H16:   clock__millisecond__last - last_check <= 
           clock__millisecond__last .
H17:   clock__millisecond__last - last_check >= 
           clock__millisecond__base__first .
H18:   clock__millisecond__last - last_check <= 
           clock__millisecond__base__last .
H19:   t__1 >= clock__millisecond__first .
H20:   t__1 <= clock__millisecond__last .
H21:   clock__millisecond__last - last_check >= 
           clock__millisecond__first .
H22:   clock__millisecond__last - last_check <= 
           clock__millisecond__last .
H23:   clock__millisecond__last - last_check + t__1 >= 
           clock__millisecond__first .
H24:   clock__millisecond__last - last_check + t__1 <= 
           clock__millisecond__last .
H25:   clock__millisecond__last - last_check + t__1 >= 
           clock__millisecond__first .
H26:   clock__millisecond__last - last_check + t__1 <= 
           clock__millisecond__last .
H27:   clock__millisecond__last - last_check + t__1 > 
           max_delay .
        ->
C1:    timeout >= timer_check__first .
C2:    timeout <= timer_check__last .
 

For path(s) from start to run-time check associated with statement of line 60:

procedure_check_timeout_8.
H1:    true .
H2:    last_check >= clock__millisecond__first .
H3:    last_check <= clock__millisecond__last .
H4:    true .
H5:    t__1 >= clock__millisecond__first .
H6:    t__1 <= clock__millisecond__last .
H7:    true .
H8:    t__1 >= clock__millisecond__first .
H9:    t__1 <= clock__millisecond__last .
H10:   true .
H11:   not ((not valid__1) or (not last_valid)) .
H12:   t__1 >= clock__millisecond__first .
H13:   t__1 <= clock__millisecond__last .
H14:   t__1 >= last_check .
H15:   t__1 >= clock__millisecond__first .
H16:   t__1 <= clock__millisecond__last .
H17:   t__1 - last_check >= clock__millisecond__first .
H18:   t__1 - last_check <= clock__millisecond__last .
H19:   t__1 - last_check >= clock__millisecond__first .
H20:   t__1 - last_check <= clock__millisecond__last .
H21:   not (t__1 - last_check > max_delay) .
        ->
C1:    ok >= timer_check__first .
C2:    ok <= timer_check__last .
 

procedure_check_timeout_9.
H1:    true .
H2:    last_check >= clock__millisecond__first .
H3:    last_check <= clock__millisecond__last .
H4:    true .
H5:    t__1 >= clock__millisecond__first .
H6:    t__1 <= clock__millisecond__last .
H7:    true .
H8:    t__1 >= clock__millisecond__first .
H9:    t__1 <= clock__millisecond__last .
H10:   true .
H11:   not ((not valid__1) or (not last_valid)) .
H12:   t__1 >= clock__millisecond__first .
H13:   t__1 <= clock__millisecond__last .
H14:   not (t__1 >= last_check) .
H15:   clock__millisecond__last - last_check >= 
           clock__millisecond__first .
H16:   clock__millisecond__last - last_check <= 
           clock__millisecond__last .
H17:   clock__millisecond__last - last_check >= 
           clock__millisecond__base__first .
H18:   clock__millisecond__last - last_check <= 
           clock__millisecond__base__last .
H19:   t__1 >= clock__millisecond__first .
H20:   t__1 <= clock__millisecond__last .
H21:   clock__millisecond__last - last_check >= 
           clock__millisecond__first .
H22:   clock__millisecond__last - last_check <= 
           clock__millisecond__last .
H23:   clock__millisecond__last - last_check + t__1 >= 
           clock__millisecond__first .
H24:   clock__millisecond__last - last_check + t__1 <= 
           clock__millisecond__last .
H25:   clock__millisecond__last - last_check + t__1 >= 
           clock__millisecond__first .
H26:   clock__millisecond__last - last_check + t__1 <= 
           clock__millisecond__last .
H27:   not (clock__millisecond__last - last_check + t__1 > 
           max_delay) .
        ->
C1:    ok >= timer_check__first .
C2:    ok <= timer_check__last .
 

For path(s) from start to finish:

procedure_check_timeout_10.
*** true .          /* trivially true VC removed by Examiner */


procedure_check_timeout_11.
*** true .          /* trivially true VC removed by Examiner */


procedure_check_timeout_12.
*** true .          /* trivially true VC removed by Examiner */


procedure_check_timeout_13.
*** true .          /* trivially true VC removed by Examiner */


procedure_check_timeout_14.
*** true .          /* trivially true VC removed by Examiner */


For checks of refinement integrity: 

procedure_check_timeout_15.
*** true .          /* trivially true VC removed by Examiner */


procedure_check_timeout_16.
*** true .          /* trivially true VC removed by Examiner */



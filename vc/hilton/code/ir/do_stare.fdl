           {*******************************************************}
                               {FDL Declarations}
 {SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331}
      {Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.}
           {*******************************************************}


                        {DATE : 25-NOV-2009 14:04:41.94}

                           {procedure ir.Do_Stare}


title procedure do_stare;

  function round__(real) : integer;
  type state_types__infrared = (state_types__ir_inactive, 
     state_types__ir_stare, state_types__ir_sweep);
  type measuretypes__kelvin = integer;
  type random__value = integer;
  type bus__word_index = integer;
  type bus__all_msg_index = integer;
  type rt1553__lru_name = (rt1553__barometer, rt1553__asi, 
     rt1553__ins, rt1553__compass, rt1553__fuel, rt1553__fuze, 
     rt1553__radar, rt1553__infrared, rt1553__fins, rt1553__motor, 
     rt1553__destruct, rt1553__warhead);
  type ir_cfg__sector_range = integer;
  type state_types__ir_to_word = array [state_types__infrared] of integer;
  type cell = record
        temp : integer
     end;
  type sector_slice = array [integer] of cell;
  type sector_array = array [integer] of sector_slice;
  const state_types__ir_values : state_types__ir_to_word = pending;
  const bus_id : rt1553__lru_name = pending;
  const sector__base__last : integer = pending; 
  const sector__base__first : integer = pending; 
  const kelvin__base__last : integer = pending; 
  const kelvin__base__first : integer = pending; 
  const ir_cfg__sector_range__base__last : integer = pending; 
  const ir_cfg__sector_range__base__first : integer = pending; 
  const rt1553__lru_name__base__last : rt1553__lru_name = pending; 
  const rt1553__lru_name__base__first : rt1553__lru_name = pending; 
  const bus__lru_subaddress_index__base__last : integer = pending; 
  const bus__lru_subaddress_index__base__first : integer = pending; 
  const bus__all_msg_index__base__last : integer = pending; 
  const bus__all_msg_index__base__first : integer = pending; 
  const bus__word__base__last : integer = pending; 
  const bus__word__base__first : integer = pending; 
  const bus__word_index__base__last : integer = pending; 
  const bus__word_index__base__first : integer = pending; 
  const random__value__base__last : integer = pending; 
  const random__value__base__first : integer = pending; 
  const measuretypes__kelvin__base__last : integer = pending; 
  const measuretypes__kelvin__base__first : integer = pending; 
  const state_types__infrared__base__last : state_types__infrared = pending; 
  const state_types__infrared__base__first : 
     state_types__infrared = pending; 
  const state_types__word__base__last : integer = pending; 
  const state_types__word__base__first : integer = pending; 
  const integer__base__last : integer = pending; 
  const integer__base__first : integer = pending; 
  const cell__size : integer = pending; 
  const sector__size : integer = pending; 
  const sector__last : integer = pending; 
  const sector__first : integer = pending; 
  const kelvin__size : integer = pending; 
  const kelvin__last : integer = pending; 
  const kelvin__first : integer = pending; 
  const ir_cfg__sector_range__size : integer = pending; 
  const ir_cfg__sector_range__last : integer = pending; 
  const ir_cfg__sector_range__first : integer = pending; 
  const rt1553__lru_name__size : integer = pending; 
  const rt1553__lru_name__last : rt1553__lru_name = pending; 
  const rt1553__lru_name__first : rt1553__lru_name = pending; 
  const bus__lru_subaddress_index__size : integer = pending; 
  const bus__lru_subaddress_index__last : integer = pending; 
  const bus__lru_subaddress_index__first : integer = pending; 
  const bus__all_msg_index__size : integer = pending; 
  const bus__all_msg_index__last : integer = pending; 
  const bus__all_msg_index__first : integer = pending; 
  const bus__word__size : integer = pending; 
  const bus__word__last : integer = pending; 
  const bus__word__first : integer = pending; 
  const bus__word_index__size : integer = pending; 
  const bus__word_index__last : integer = pending; 
  const bus__word_index__first : integer = pending; 
  const random__value__size : integer = pending; 
  const random__value__last : integer = pending; 
  const random__value__first : integer = pending; 
  const measuretypes__kelvin__size : integer = pending; 
  const measuretypes__kelvin__last : integer = pending; 
  const measuretypes__kelvin__first : integer = pending; 
  const state_types__infrared__size : integer = pending; 
  const state_types__infrared__last : state_types__infrared = pending; 
  const state_types__infrared__first : state_types__infrared = pending; 
  const state_types__word__size : integer = pending; 
  const state_types__word__last : integer = pending; 
  const state_types__word__first : integer = pending; 
  const integer__size : integer = pending; 
  const integer__last : integer = pending; 
  const integer__first : integer = pending; 
  var detect_points : sector_array;
  var sx : integer;
  var sy : integer;
  var v : integer;
  function measuretypes__encode__kelvin(integer) : integer;
  var v__1 : integer;

end;

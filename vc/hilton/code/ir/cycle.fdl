           {*******************************************************}
                               {FDL Declarations}
 {SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331}
      {Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.}
           {*******************************************************}


                        {DATE : 25-NOV-2009 14:04:42.07}

                             {procedure ir.Cycle}


title procedure cycle;

  function round__(real) : integer;
  type state_types__infrared = (state_types__ir_inactive, 
     state_types__ir_stare, state_types__ir_sweep);
  type measuretypes__kelvin = integer;
  type bus__outputs__type = pending;
  type bus__word_index = integer;
  type bus__all_msg_index = integer;
  type rt1553__lru_name = (rt1553__barometer, rt1553__asi, 
     rt1553__ins, rt1553__compass, rt1553__fuel, rt1553__fuze, 
     rt1553__radar, rt1553__infrared, rt1553__fins, rt1553__motor, 
     rt1553__destruct, rt1553__warhead);
  type ibit__phase = (ibit__off, ibit__request_start, 
     ibit__in_progress, ibit__request_stop, ibit__pass, 
     ibit__fail, ibit__timeout);
  type bit_machine__machine = pending;
  type ir_cfg__sector_range = integer;
  type ibit__phase_table = array [ibit__phase] of integer;
  type cell = record
        temp : integer
     end;
  type sector_slice = array [integer] of cell;
  type sector_array = array [integer] of sector_slice;
  const ibit__phase_lookup : ibit__phase_table = pending;
  const bus_id : rt1553__lru_name = pending;
  const sector__base__last : integer = pending; 
  const sector__base__first : integer = pending; 
  const kelvin__base__last : integer = pending; 
  const kelvin__base__first : integer = pending; 
  const ir_cfg__sector_range__base__last : integer = pending; 
  const ir_cfg__sector_range__base__first : integer = pending; 
  const ibit__phase__base__last : ibit__phase = pending; 
  const ibit__phase__base__first : ibit__phase = pending; 
  const rt1553__lru_name__base__last : rt1553__lru_name = pending; 
  const rt1553__lru_name__base__first : rt1553__lru_name = pending; 
  const bus__lru_subaddress_index__base__last : integer = pending; 
  const bus__lru_subaddress_index__base__first : integer = pending; 
  const bus__all_msg_index__base__last : integer = pending; 
  const bus__all_msg_index__base__first : integer = pending; 
  const bus__word__base__last : integer = pending; 
  const bus__word__base__first : integer = pending; 
  const bus__word_index__base__last : integer = pending; 
  const bus__word_index__base__first : integer = pending; 
  const measuretypes__kelvin__base__last : integer = pending; 
  const measuretypes__kelvin__base__first : integer = pending; 
  const state_types__infrared__base__last : state_types__infrared = pending; 
  const state_types__infrared__base__first : 
     state_types__infrared = pending; 
  const state_types__word__base__last : integer = pending; 
  const state_types__word__base__first : integer = pending; 
  const systemtypes__byte__base__last : integer = pending; 
  const systemtypes__byte__base__first : integer = pending; 
  const integer__base__last : integer = pending; 
  const integer__base__first : integer = pending; 
  const cell__size : integer = pending; 
  const sector__size : integer = pending; 
  const sector__last : integer = pending; 
  const sector__first : integer = pending; 
  const kelvin__size : integer = pending; 
  const kelvin__last : integer = pending; 
  const kelvin__first : integer = pending; 
  const ir_cfg__sector_range__size : integer = pending; 
  const ir_cfg__sector_range__last : integer = pending; 
  const ir_cfg__sector_range__first : integer = pending; 
  const ibit__phase__size : integer = pending; 
  const ibit__phase__last : ibit__phase = pending; 
  const ibit__phase__first : ibit__phase = pending; 
  const rt1553__lru_name__size : integer = pending; 
  const rt1553__lru_name__last : rt1553__lru_name = pending; 
  const rt1553__lru_name__first : rt1553__lru_name = pending; 
  const bus__lru_subaddress_index__size : integer = pending; 
  const bus__lru_subaddress_index__last : integer = pending; 
  const bus__lru_subaddress_index__first : integer = pending; 
  const bus__all_msg_index__size : integer = pending; 
  const bus__all_msg_index__last : integer = pending; 
  const bus__all_msg_index__first : integer = pending; 
  const bus__word__size : integer = pending; 
  const bus__word__last : integer = pending; 
  const bus__word__first : integer = pending; 
  const bus__word_index__size : integer = pending; 
  const bus__word_index__last : integer = pending; 
  const bus__word_index__first : integer = pending; 
  const measuretypes__kelvin__size : integer = pending; 
  const measuretypes__kelvin__last : integer = pending; 
  const measuretypes__kelvin__first : integer = pending; 
  const state_types__infrared__size : integer = pending; 
  const state_types__infrared__last : state_types__infrared = pending; 
  const state_types__infrared__first : state_types__infrared = pending; 
  const state_types__word__size : integer = pending; 
  const state_types__word__last : integer = pending; 
  const state_types__word__first : integer = pending; 
  const systemtypes__byte__size : integer = pending; 
  const systemtypes__byte__last : integer = pending; 
  const systemtypes__byte__first : integer = pending; 
  const integer__size : integer = pending; 
  const integer__last : integer = pending; 
  const integer__first : integer = pending; 
  var bus__outputs : bus__outputs__type;
  var detect_points : sector_array;
  var bit_state : bit_machine__machine;
  var datum : integer;
  var remote_command : state_types__infrared;
  var sx1 : integer;
  var sx2 : integer;
  var sy1 : integer;
  var sy2 : integer;
  function state_types__ir_action(integer) : 
     state_types__infrared;
  function rt1553__is_fresh(rt1553__lru_name, integer, 
     bus__outputs__type) : boolean;
  function rt1553__is_valid(rt1553__lru_name, integer, 
     bus__outputs__type) : boolean;
  function bit_machine__phase(bit_machine__machine) : ibit__phase;
  var bit_state__10 : bit_machine__machine;
  var sy2__9 : integer;
  var sy1__8 : integer;
  var sx2__7 : integer;
  var sx1__6 : integer;
  var sy1__5 : integer;
  var sx1__4 : integer;
  var datum__3 : integer;
  var datum__1 : integer;

end;

*****************************************************************************
                       Semantic Analysis of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
*****************************************************************************


CREATED 25-NOV-2009, 14:04:42  SIMPLIFIED 25-NOV-2009, 14:19:09

SPARK Simplifier Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.

procedure ir.Do_Sweep






@@@@@@@@@@  VC: procedure_do_sweep_1.  @@@@@@@@@@
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(i___2 : integer, sector__first <= i___2 and i___2 <= 
          sector__last -> for_all(i___1 : integer, sector__first <= i___1 and 
          i___1 <= sector__last -> kelvin__first <= fld_temp(element(element(
          detect_points, [i___1]), [i___2])) and fld_temp(element(element(
          detect_points, [i___1]), [i___2])) <= kelvin__last))
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  rt1553__lru_name__first <= bus_id
%%%  Simplified C9 on reading formula in, to give:
     %%%  C9:  state_types__infrared__first <= state_types__ir_sweep
-S-  Applied substitution rule do_sweep_rules(78).
     This was achieved by replacing all occurrences of rt1553__lru_name__first 
          by:
          rt1553__barometer.
<S>  New C1:  rt1553__barometer <= bus_id
-S-  Applied substitution rule do_sweep_rules(3).
     This was achieved by replacing all occurrences of bus_id by:
          rt1553__infrared.
<S>  New C2:  rt1553__infrared <= rt1553__lru_name__last
<S>  New C1:  true
-S-  Applied substitution rule do_sweep_rules(79).
     This was achieved by replacing all occurrences of rt1553__lru_name__last 
          by:
          rt1553__warhead.
<S>  New C2:  true
-S-  Applied substitution rule do_sweep_rules(73).
     This was achieved by replacing all occurrences of 
          bus__lru_subaddress_index__first by:
          1.
<S>  New C3:  true
-S-  Applied substitution rule do_sweep_rules(74).
     This was achieved by replacing all occurrences of 
          bus__lru_subaddress_index__last by:
          8.
<S>  New C4:  true
-S-  Applied substitution rule do_sweep_rules(57).
     This was achieved by replacing all occurrences of bus__word_index__first 
          by:
          1.
<S>  New C5:  true
-S-  Applied substitution rule do_sweep_rules(58).
     This was achieved by replacing all occurrences of bus__word_index__last by:
          31.
<S>  New C6:  true
-S-  Applied substitution rule do_sweep_rules(63).
     This was achieved by replacing all occurrences of bus__word__first by:
          0.
<S>  New C7:  element(state_types__ir_values, [state_types__ir_sweep]) >= 0
-S-  Applied substitution rule do_sweep_rules(64).
     This was achieved by replacing all occurrences of bus__word__last by:
          65535.
<S>  New C8:  element(state_types__ir_values, [state_types__ir_sweep]) <= 65535
-S-  Applied substitution rule do_sweep_rules(15).
     This was achieved by replacing all occurrences of 
          state_types__infrared__first by:
          state_types__ir_inactive.
<S>  New C9:  true
-S-  Applied substitution rule do_sweep_rules(16).
     This was achieved by replacing all occurrences of 
          state_types__infrared__last by:
          state_types__ir_sweep.
<S>  New C10:  true
***  Proved C1:  true
***  Proved C2:  true
***  Proved C3:  true
***  Proved C4:  true
***  Proved C5:  true
***  Proved C6:  true
***  Proved C9:  true
***  Proved C10:  true
-S-  Applied substitution rule do_sweep_rules(127).
     This was achieved by replacing all occurrences of kelvin__first by:
          0.
<S>  New H10:  for_all(i___2 : integer, sector__first <= i___2 and i___2 <= 
          sector__last -> for_all(i___1 : integer, sector__first <= i___1 and 
          i___1 <= sector__last -> 0 <= fld_temp(element(element(detect_points, 
          [i___1]), [i___2])) and fld_temp(element(element(detect_points, [
          i___1]), [i___2])) <= kelvin__last))
-S-  Applied substitution rule do_sweep_rules(128).
     This was achieved by replacing all occurrences of kelvin__last by:
          6000.
<S>  New H10:  for_all(i___2 : integer, sector__first <= i___2 and i___2 <= 
          sector__last -> for_all(i___1 : integer, sector__first <= i___1 and 
          i___1 <= sector__last -> 0 <= fld_temp(element(element(detect_points, 
          [i___1]), [i___2])) and fld_temp(element(element(detect_points, [
          i___1]), [i___2])) <= 6000))
-S-  Applied substitution rule do_sweep_rules(132).
     This was achieved by replacing all occurrences of sector__first by:
          - 12.
<S>  New H2:  x_start >= - 12
<S>  New H4:  x_end >= - 12
<S>  New H6:  y_start >= - 12
<S>  New H8:  y_end >= - 12
<S>  New H10:  for_all(i___2 : integer, - 12 <= i___2 and i___2 <= sector__last 
          -> for_all(i___1 : integer, - 12 <= i___1 and i___1 <= sector__last 
          -> 0 <= fld_temp(element(element(detect_points, [i___1]), [i___2])) 
          and fld_temp(element(element(detect_points, [i___1]), [i___2])) <= 
          6000))
-S-  Applied substitution rule do_sweep_rules(133).
     This was achieved by replacing all occurrences of sector__last by:
          12.
<S>  New H3:  x_start <= 12
<S>  New H5:  x_end <= 12
<S>  New H7:  y_start <= 12
<S>  New H9:  y_end <= 12
<S>  New H10:  for_all(i___2 : integer, - 12 <= i___2 and i___2 <= 12 -> 
          for_all(i___1 : integer, - 12 <= i___1 and i___1 <= 12 -> 0 <= 
          fld_temp(element(element(detect_points, [i___1]), [i___2])) and 
          fld_temp(element(element(detect_points, [i___1]), [i___2])) <= 6000))
---  Eliminated hypothesis H1 (true-hypothesis).
---  Eliminated hypothesis H11 (true-hypothesis).
***  Proved C7:  element(state_types__ir_values, [state_types__ir_sweep]) >= 0
***  Proved C8:  element(state_types__ir_values, [state_types__ir_sweep]) <= 
          65535
***  PROVED VC.


@@@@@@@@@@  VC: procedure_do_sweep_2.  @@@@@@@@@@
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(i___2 : integer, sector__first <= i___2 and i___2 <= 
          sector__last -> for_all(i___1 : integer, sector__first <= i___1 and 
          i___1 <= sector__last -> kelvin__first <= fld_temp(element(element(
          detect_points, [i___1]), [i___2])) and fld_temp(element(element(
          detect_points, [i___1]), [i___2])) <= kelvin__last))
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  rt1553__lru_name__first <= bus_id
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  state_types__infrared__first <= state_types__ir_sweep
***  Proved C1:  measuretypes__encode__bit4_array(detect__1) >= bus__word__first
     using hypothesis H23.
***  Proved C2:  measuretypes__encode__bit4_array(detect__1) <= bus__word__last
     using hypothesis H24.
***  PROVED VC.


@@@@@@@@@@  VC: procedure_do_sweep_3.  @@@@@@@@@@
%%%  Simplified H10 on reading formula in, to give:
     %%%  H10:  for_all(i___2 : integer, sector__first <= i___2 and i___2 <= 
          sector__last -> for_all(i___1 : integer, sector__first <= i___1 and 
          i___1 <= sector__last -> kelvin__first <= fld_temp(element(element(
          detect_points, [i___1]), [i___2])) and fld_temp(element(element(
          detect_points, [i___1]), [i___2])) <= kelvin__last))
%%%  Simplified H12 on reading formula in, to give:
     %%%  H12:  rt1553__lru_name__first <= bus_id
%%%  Simplified H20 on reading formula in, to give:
     %%%  H20:  state_types__infrared__first <= state_types__ir_sweep
---  Hypothesis H25 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H26 has been replaced by "true".  (It is already present, as 
          H24).
---  Hypothesis H27 has been replaced by "true".  (It is already present, as 
          H23).
---  Hypothesis H28 has been replaced by "true".  (It is already present, as 
          H24).
%%%  Simplified C1 on reading formula in, to give:
     %%%  C1:  rt1553__lru_name__first <= bus_id
***  Proved C1:  rt1553__lru_name__first <= bus_id
     using hypothesis H12.
***  Proved C2:  bus_id <= rt1553__lru_name__last
     using hypothesis H13.
***  Proved C3:  2 >= bus__lru_subaddress_index__first
     using hypothesis H14.
***  Proved C4:  2 <= bus__lru_subaddress_index__last
     using hypothesis H15.
***  Proved C5:  2 >= bus__word_index__first
     using hypothesis H16.
***  Proved C7:  measuretypes__encode__bit4_array(detect__1) >= bus__word__first
     using hypothesis H23.
***  Proved C8:  measuretypes__encode__bit4_array(detect__1) <= bus__word__last
     using hypothesis H24.
-S-  Applied substitution rule do_sweep_rules(58).
     This was achieved by replacing all occurrences of bus__word_index__last by:
          31.
<S>  New H17:  true
<S>  New C6:  true
***  Proved C6:  true
***  PROVED VC.


@@@@@@@@@@  VC: procedure_do_sweep_4.  @@@@@@@@@@
***  Proved C1:  true
***  PROVED VC.


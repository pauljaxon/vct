           *******************************************************
                            Listing of SPARK Text
 SPARK Examiner Pro Edition, Version 8.1.4, Build Date 20090925, Build 14331
      Copyright (C) 2009 Praxis High Integrity Systems Ltd., Bath, U.K.
           *******************************************************


                        DATE : 25-NOV-2009 14:04:40.81

Line
   1  -- MCU interface to the fuze over the bus
   2  --
   3  -- $Log: if_fuze.ads,v $
   4  -- Revision 1.1.1.1  2004/01/12 19:29:12  adi
   5  -- Added from tarfile
   6  --
   7  --
   8  -- Revision 1.5  2003/09/10 21:01:16  adi
   9  -- Added get_ibit_state
  10  --
  11  -- Revision 1.4  2003/08/17 15:29:52  adi
  12  -- Fixed Poll to write out too
  13  --
  14  -- Revision 1.3  2003/08/17 15:11:26  adi
  15  -- Added a use type and corrected annos
  16  --
  17  -- Revision 1.2  2003/08/17 15:01:50  adi
  18  -- Corrected arm/disarm annotations
  19  --
  20  -- Revision 1.1  2003/08/17 14:39:49  adi
  21  -- Initial revision
  22  --
  23  --
  24  with SystemTypes,
  25    MeasureTypes,
  26    Ibit, State_Types;
  27  use type State_Types.Fuze;
  28  --# inherit SystemTypes, MeasureTypes, Bus, Ibit,
  29  --# bc1553,state_types;
  30  package If_Fuze
  31    --# own State;
  32    --# initializes State;
  33  is
  34     function Get_Ibit_State return Ibit.Phase;
  35     --# global state;
  36  
  37     -- Find out the current state
  38     procedure Get_State(Action_State : out State_Types.Fuze;
  39                         Valid  : out Boolean);
  40     --# global in State;
  41     --# derives action_state, Valid from State;
  42  
  43     -- Command a fuzing change
  44     procedure Arm;
  45     --# global in out Bus.Outputs; in state;
  46     --# derives Bus.Outputs from *, state;
  47  
  48     procedure Disarm;
  49     --# global in out Bus.Outputs;
  50     --# derives Bus.Outputs from *;
  51  
  52     -- Kick off a fuze IBIT
  53     procedure Ibit_Start;
  54     --# global in out Bus.Outputs, State;
  55     --# derives Bus.Outputs from * &
  56     --#         State from *;
  57  
  58     -- Stop a fuze IBIT
  59     procedure Ibit_Stop;
  60     --# global in out Bus.Outputs, State;
  61     --# derives Bus.Outputs from * &
  62     --#         State from *;
  63  
  64     -- Poll the bus
  65     procedure Poll;
  66     --# global in out State;
  67     --#        in Bus.Inputs;
  68     --#        in out bus.outputs;
  69     --# derives State from *, Bus.Inputs &
  70     --#    bus.outputs from *, state, bus.inputs;
  71  
  72     -- Initialise
  73     procedure Init;
  74     --# global out State;
  75     --#        in out Bus.Outputs;
  76     --# derives State from &
  77     --#         Bus.Outputs from *;
  78  
  79     -- test point
  80     procedure Command;
  81     --# derives;
  82  end If_Fuze;
No summarized warnings



--End of file--------------------------------------------------
